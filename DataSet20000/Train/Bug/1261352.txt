Update pdf.js to version 1.4.185
+++ This bug was initially created as a clone of Bug #1256037 +++

Changes since last update:
#7088 Pass the `PDFJS.postMessageTransfer` parameter to the worker, so that the `MessageHandler` can be setup correctly in `createDocumentHandler` (issue 6957)
#7093 Use the correct path when checking if a `/l10n` directory exists, to avoid errors during `gulp importl10n` (PR 7063 followup)
#7039 Refactors CMapFactory.create to make it async
#7098 Ensure that TrueType font tables have `uint32` checksums
#7100 Removes core/stream circular dependency on core/parser.
#7105 Add an ISSUE_TEMPLATE
#7005 Fixes insertion of blank pages during print if page sizes differ
#7108 Removes frontWindow usage from the stream converter.
#7113 Disables issue6961 test.
#7053 Removes global PDFJS usage from the src/core/.
#7122 Allow unit-tests to use linked PDF files, by having the `unittest` command download unavailable ones (issue 7117)
#7118 Prevent failures in the Annotation code if the `Rect` array contains indirect objects (issue 7115)
#7129 Updates Jasmine version.
#7128 Add unit-tests for destionations in /Names (NameTree) dictionaries where all entries are indirect objects
#7102 Log uncaught global errors.
#7133 Faster unit-tests by using `beforeAll`/`afterAll` in api_spec.js
#7066 Parse Type1 font files to determine the various `Length{n}` properties, instead of trusting the PDF file (issue 5686, issue 3928)
#7078 Refactor the building of `toFontChar` for non-embedded fonts
#7106 Keep track of the character to glyph mapping in font_renderer.js, to prevent errors when different characters point to the same glyph (issue 7101)
#7134 Refactors to remove stream.js dependency on colorspace.js