arbitrary number for the Cache/History fields in Preferences/Options when too long value is entered
User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.6) Gecko/20040206 Firefox/0.8
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.6) Gecko/20040206 Firefox/0.8

When I try to enter a value for the Cache field in the Security Tab of the
Options menu with an arbitrarily long number like  (each number used separately): 
1111111111111111111
2222222222222222222
3333333333333333333
4444444444444444444
5555555555555555555
6666666666666666666

Then after closing the Options Dialog, if I open the winoow again, Firefox
displays an arbitrary number (sometime a positive value like 734294528 or a
negavtive value like -346094466). This behavior does vary for different inputs,
but if the input value is a twenty digit number like the ones specified above,
Firefox displays the same behavior.

Reproducible: Always
Steps to Reproduce:
1)	Open Mozilla Firefox browser window. 
2)	Click on the Options Menu.
3)	Select the Privacy tab from the Options Dialog Box.
4)	Scroll down the window and click on the Cache option.
5)	In the text box, a default value of 50000 (kb) will be specified unless
previously changed. In this text box, type any of the following inputs, albeit
one by one:
1111111111111111111
2222222222222222222
3333333333333333333
4444444444444444444
5555555555555555555
6666666666666666666
6)	Click Ok. 
7)	Follow the steps 1 through 4 and examine the output for each input.
8)	Repeat the steps 1 through 7 for any number of times.


Actual Results:  
Firefox, displayed arbitrary values even after I had clicked OK, when I expected
to see the entered values only.

Expected Results:  
Firstly, Firefox should have set a limit on the input to the field (a numerical
boundary). Secondly, if a number twenty digits long may be input, the next time
I look at the value, it should display the same value and not any arbitrary number. 

Additionally, I even tried inputting characters (eg. aaaaa, slkjg) and special
characters (##%@#%%^%). Surprisingly, it accepted the input of this kind. I feel
that the software should display an error message in each of these cases. 

I expect that the error handling code can be improved to prevent further
problems with the software. It could potentially lead to vulnerabilities and
attacks.