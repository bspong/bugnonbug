[e10s] Need an add-on shim for http-on-* observers
I'm filing this because it came up in bug 1008768 comment 64. Here's an email that Jason wrote about this after we talked in June:

>>>
So :billm is working on making addons "just work" as-is for desktop e10s, and one issue is things like "on-modify-request", etc.  In single process Firefox addons can do things like take the channel callbacks during OMR and QI them to windows, docshells, and other lovely things that are not actually available in the parent process in e10s.   After chatting with Bill for a while, it looks like our architecture here will be something where we 1) detect magically that an addon is the thing that's getting an OMR notification, and 2) for addons, replacing the parent nsHttpChannel's callbacks from being the usual HttpChannelParentListener, and instead insert a CPOW object (Cross-Process Object Wrapper) that can forward all possible objects in the callback to the child as needed (using synchronous IPDL calls from parent->child).  That's gross (it blocks the parent process the whole time the CPOW runs) but gets us full compatibility (hopefully).

I don't think Bill has bugs open on this yet, but I wanted to give y'all a heads up that it's happening, so you can jump in with thoughts and provide help for Bill if/when he has questions.

Note that we considered an alternate architecture, where we ran things like OMR in the child (sort of: there'd still be a lot of CPOW-like stuff going on, so it's not apparently any more efficient), but it seems better to hang all this stuff off the parent's events, since there are fewer compatibility issues (the main one I can think of is that by the time on-examine-response is called in the child, we've already set cookies in the parent based on Set-Cookie headers in the reply, while if we call it in the parent the addon can remove the header before that and the cookie won't be set.  Of course we could fix that with a few more IPDL round trips if we really need to.)
<<<

We'll need some Necko support here to get the CPOW around the docshell, but I think we should be able to do that without too much trouble. I'll file a separate bug for that once this is further along.