pdfjs privilege escalation round 3
Created attachment 8462305
pdfjs-round3-new.html

It's possible yet again to manipulate the pdfjs implementation when rendered as a plugin.  The issue here is that most things at content level totally ignore the pseudo view-source: protocol, so properly loading a pdf document then switching the src/data attribute of an object/embed to a url that begins with view-source: doesn't trigger the underlying logic which should be triggered for the plugin url changing.  This also prevents the type changing which means that when combined with bug 1022919 to load the usually ignored view-source: protocol its possible for one to disclose information about local files or even possibly obtain chrome level code execution.  Here I show off accessing navigator.mozApps.mgmt, and I feel I'm pretty close to code execution there but I have two other issues that need to get filed and my time has to be spread as much as possible.  There's also issues that concern me regarding the remapping of the prototypes of embed and object elements, as I have already seen this lead to chrome level code trying to access a dead object when it should have been loading a perfectly valid embed element.  I'll go into more detail about that and a practically impossible to reproduce SOW bypass that can also occur tomorrow I think.  I already have two other issues to get testcases ready for either tonight or as early as I can tomorrow.  Sorry guys I'm a little lack luster on this one I know but I'm running into many issues leading in many different directions lately and I think getting as much out there about them as I can piece together might be for the best.  BTW the newest nightly has it locked down pretty well, but some XBL work is about to make another appearance, meh =/