9% linux svg opacity regression on Aurora (v.42) seen September 4th from revision 4fa21e75f4ee
a compare view to show the problem:
https://treeherder.allizom.org/perf.html#/compare?originalProject=mozilla-aurora&originalRevision=5a18731300d8&newProject=mozilla-aurora&newRevision=4fa21e75f4ee

this is specifically in the tsvgr_opacity big-optimizable-group-opacity-2500.svg test:
https://treeherder.allizom.org/perf.html#/comparesubtest?originalProject=mozilla-aurora&originalRevision=5a18731300d8&newProject=mozilla-aurora&newRevision=4fa21e75f4ee&originalSignature=b98a5a90dfcf07eb3d784ca1cd4ade4de6e6c44a&newSignature=b98a5a90dfcf07eb3d784ca1cd4ade4de6e6c44a


this is a big combination push:
https://hg.mozilla.org/releases/mozilla-aurora/pushloghtml?changeset=4fa21e75f4ee

we have documented the alerts with links to graphs/treeherder here:
http://alertmanager.allizom.org:8080/alerts.html?rev=4fa21e75f4ee&showAll=1&testIndex=0&platIndex=0

this looks specific to aurora, as we don't see this on inbound.  I have done a series of try pushes (yes, this will take a while to get pgo builds completed):
https://treeherder.mozilla.org/#/jobs?repo=try&author=jmaher@mozilla.com&fromchange=7675ece875c5&tochange=6e5e5ec37f15

Ideally we will be able to determine which is the root cause and then put this bug in the right product/component and cc the right folks to get action.

We get alerts much later on aurora due to the lower volume, so that is why this is 1 week delayed.