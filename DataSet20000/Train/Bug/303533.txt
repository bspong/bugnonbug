InActiveX - secure (sandboxed) ActiveX implementation for Firefox
User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6

<p align='center'><b>=========ActiveX in Firefox=========</b></P><P>

I know everyone's gonna rant about how this will open up 50000 holes, and the
likelyhood of Mozilla implementing such a thing is about as slim as a worm but
just to share an idea:<P>

I propose an implementation of ActiveX called '<u>InActiveX</u>'. This will run
inside a 'sandbox' of sorts with priveleges specified by the user through an
'Options' menu or something (like Java uses a sandbox for their applets and it's
pretty secure too). Here's how it will work:<p>

Firefox scans to see if the site uses ActiveX<br>
then<br>
Firefox scans to see if there is a JavaScript/Java alternative instead of that
ActiveX<p>

As soon as Firefox knows there's ActiveX components, it prompts the user. An
ActiveX component WILL NOT BE DOWNLOADED until the user clicks 'OK'. There is no
bypass to this, as the 'Temporary ActiveX Controls' folder will be LOCKED during
this process. <p>

Since few average users actually read the whole 'Not Digitally Signed' thing, a
dialog simply asks the user:<p>

<b>=[InActiveX Permissions] =============</b><br>
Do you want to use the ActiveX control on this webpage? The control will run
inside the sandbox that keeps it separate from the operating system. If you
would like to set Sandbox options, go to <br>
Tools > Options > InActiveX > Sandbox<p>

<strong>Here's what other users have said about this control</strong>:<br>
<i>[Now this is the most important part because it shows comments left by users,
WHICH AVERAGE USERS WILL ACTUALLY READ. If a user says "It's a Virus!" and marks
it with a 'Virus' flag, the average joe will read it. The user can determine a
control's safety if there are enough 'malware' flags and can post their
own.]</i><br>
<b>===============================</b><p>

If the user still wishes to use it, he/she must click ok, which is not the
default selection. The position of the 'OK' button changes so no malware can
auto-accept. <b>IF THE CONTROL HAS MORE THAN 50% 'BAD' (spyware, adware,
malware, virus) FLAGS FROM USERS, THEN THE USER IS FURTHER PROMPTED FOR SECURITY
REASONS</b>. Once the control is downloaded, the user uses it. Once the user
leaves the domain, the control is SECURELY DELETED (deleted and overwritten on
disk). <p>

<b>Sandbox options dialog where users can configure Sandbox options (all options
are checkboxes)</b>:<br> 
Allow incoming connections, <br>
Allow data to be written, <br>
Allow data to be read, <br>
Allow outgoing connections <br>
Spoof User-Agent as IE for Download (important because some sites only allow IE
to get ActiveX)<br>
Preserve my Settings <br>
(I have more, but I'm too lazy) The user can also customize the sandbox for
individual sites.<p>

-----------------------------------<br>
I'm sure if you can implement 'InActiveX', people will say 'Hey, MORE sites work
with with da Fox' and maybe people will shut up and stop saying "But I need IE
to visit Windows Update!!!". InActiveX WILL BE a show-stopper for Microsoft,
trust me.<p>

<b>Do you have any suggestions on how to make a secure InActiveX? Post them here!<b>

Reproducible: Always

Steps to Reproduce:
1. Go to http://windowsupdate.microsoft.com/ in your Mozilla Firefox browser.
2. Wait for page to load.
3. Be dissatisfied with lack of ActiveX

Actual Results:  
So get a message that looks like this:

Thank you for your interest in obtaining updates from our site.

To use this site, you must be running Microsoft Internet Explorer 5 or later.

To upgrade to the latest version of the browser, go to the Internet Explorer
Downloads website.

(Obviously Micro$oft closed off the site to non-ActiveX browsers)

Expected Results:  
It should've showed my the Windows Update screen, but noooooooo, I get this big
error, and with an IE 6 spoof, a big blank. 

No update. No happy.

Now, I know that 'ActiveX' support was scrapped from Firefox because it was
'insecure'. The very framework is 'insecure'. The ver premise is to make the
browser crappy. But all these can be fixed with the help of open source (however
since the Microsoft ActiveX code is closed, we'll have to build one of our own,
assuming Microsoft will even let us HAVE the code). I'm pretty sure we can do
it, and if we do, that would be the greatest milestone in Firefox...let me
emphasize that. 

GREATEST FREAKING MILESTONE: The Day People Could Update Windows on Firefox. It
would also shut up many people who say Internet Exploder is better because it
can use ActiveX (but THEIR implementation is BS). With InActiveX on our hands,
we could pretty much WIN the browser wars for sure.

I guarantee that, at the very least :P