Firefox Safemode sometimes groups with pinned Firefox icon in Windows 7 taskbar, sometimes doesn't
User-Agent:       Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; Tablet PC 2.0)
Build Identifier: 3.0.8

Firefox’s Safemode has an inconsistent representation in the Windows 7 taskbar – sometimes it is grouped with the main Firefox application and sometimes it appears as its own application. If you launch Safemode while you already have an instance of regular Firefox open, Safemode will reuse the existing running process and therefore the Safemode window will be grouped with the regular Firefox window. However, if you do not already have a regular Firefox window open, Safemode will launch its own process and the taskbar will recognize it as separate from a regular pinned Firefox shortcut (because it’s started by a different shortcut than the regular Firefox shortcut).

Reproducible: Always

Steps to Reproduce:
1. Launch Firefox (on Windows 7)
2. Right click Firefox icon in taskbar and choose Pin.
3. Launch Safemode Firefox
4. > Notice that it is grouped with the original firefox pinned item.

5. Close both windows.
6. Launch safemode Firefox.
7. > notice that now it is not grouped with the original pinned window.  Now there are two Firefox icons in the taskbar. 
 
Actual Results:  
Sometimes the Safemode icon is grouped with the original pinned icon, and sometimes it is not.

Expected Results:  
It should either always be grouped, or never be grouped.

Firefox can decide whether their users think of Safemode as truly a separate application, and whether their users would want to be able to run regular and Safemode side-by-side. If so, they should use explicit AppIDs to always separate Safemode windows as a separate application (or always launch a new process for Safemode rather than reuse an existing one). Alternatively, if they don’t want Safemode to appear as an independent application, and rather appear as a sub-mode or configuration of the overall Firefox application, then they should use a single explicit AppID for all their ‘modes’.

By using explicit AppIds Firefox can decide whether the two processes should be displayed to the user as if they are one application, or two separate applications.