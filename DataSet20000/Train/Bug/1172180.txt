Create a real PerformanceActor
Now that we've shipped the perftools, we have a better idea how all this works with older geckos and all.

This will let us struggle less with a giant pseudo PerformanceFront that handles all the backwards compat scenarios, and be more similar to how other tools work.

Would let us clean up the front quite a bit, but would still need the current performance front for legacy, but should not need updated. If we needed to, we could still update the legacy front if, for example, something slipped into Gecko 38 that we missed for backwards compat.

Would also allow us to have a headless recording session stored on the backend for Gecko Profiler use cases, and disable streaming if needed.

Once we pull out the the timeline and memory actors into standalone modules, with actors just exposing API (kind of what the memory actor is now, with memory bridge), we can create a PerformanceActor that consumes those modules, and kill off the actors themselves in some cases (I believe there are other consumers of memory actor, and framerate actor, so not in that case?)

This would clean up a lot of client code, as we can stick the uglier data massaging in legacy modules, where I'm less concerned with taking extra time to ensuring everything is optimally performant, etc.

Any downsides to this? Things to think about?