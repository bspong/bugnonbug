GenerationalGC: browser xpcshell test test_listsources-03.js crashes
The following xpcshell crash happens in GGC browser builds:

Test: toolkit/devtools/server/tests/unit/test_listsources-03.js 

Log: https://tbpl.mozilla.org/php/getParsedLog.php?id=29203818&full=1&branch=try

11:55:27  WARNING -  PROCESS-CRASH | /builds/slave/test/build/tests/xpcshell/tests/toolkit/devtools/server/tests/unit/test_listsources-03.js | application crashed [@ JSCompartment::wrap(JSContext*, JS::MutableHandle<JSObject*>, JS::Handle<JSObject*>)]
11:55:27     INFO -  Crash dump filename: /tmp/tmp78iCmp/250ace94-3adb-fe76-5b8fc769-7d8b5915.dmp
11:55:27     INFO -  Operating system: Linux
11:55:27     INFO -                    0.0.0 Linux 3.2.0-23-generic-pae #36-Ubuntu SMP Tue Apr 10 22:19:09 UTC 2012 i686
11:55:27     INFO -  CPU: x86
11:55:27     INFO -       GenuineIntel family 6 model 45 stepping 7
11:55:27     INFO -       1 CPU
11:55:27     INFO -  Crash reason:  SIGSEGV
11:55:27     INFO -  Crash address: 0x2b2b2b2b
11:55:27     INFO -  Thread 0 (crashed)
11:55:27     INFO -   0  libxul.so!JSCompartment::wrap(JSContext*, JS::MutableHandle<JSObject*>, JS::Handle<JSObject*>) [jscompartment.cpp:c7bfbb5bf23d : 889 + 0x0]
11:55:27     INFO -      eip = 0xb51c87c5   esp = 0xbfaa8e10   ebp = 0xbfaa8ee8   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x089b8508   edi = 0x088f01c8   eax = 0x2b2b2b2b   ecx = 0xbfaa8f60
11:55:27     INFO -      edx = 0xae6b8360   efl = 0x00210206
11:55:27     INFO -      Found by: given as instruction pointer in context
11:55:27     INFO -   1  libxul.so!JSCompartment::wrap(JSContext*, JS::MutableHandle<JS::Value>, JS::Handle<JSObject*>) [jscompartmentinlines.h:c7bfbb5bf23d : 102 + 0x19]
11:55:27     INFO -      eip = 0xb501767a   esp = 0xbfaa8ef0   ebp = 0xbfaa8f98   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa8f58   edi = 0xbfaa8f68
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   2  libxul.so!JS_WrapValue(JSContext*, JS::Value*) [jsapi.cpp:c7bfbb5bf23d : 1156 + 0x19]
11:55:27     INFO -      eip = 0xb519ce2d   esp = 0xbfaa8fa0   ebp = 0xbfaa9008   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa9120   edi = 0x088f01c8
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   3  libxul.so!XPCConvert::NativeData2JS(JS::Value*, void const*, nsXPTType const&, nsID const*, tag_nsresult*) [XPCConvert.cpp:c7bfbb5bf23d : 159 + 0xe]
11:55:27     INFO -      eip = 0xb41a806e   esp = 0xbfaa9010   ebp = 0xbfaa90b8   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa9070   edi = 0xbfaa9120
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   4  libxul.so!CallMethodHelper::GatherAndConvertResults() [XPCWrappedNative.cpp:c7bfbb5bf23d : 2346 + 0x5]
11:55:27     INFO -      eip = 0xb41d5b04   esp = 0xbfaa90c0   ebp = 0xbfaa9148   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa9188   edi = 0x00000000
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   5  libxul.so!XPCWrappedNative::CallMethod(XPCCallContext&, XPCWrappedNative::CallMode) [XPCWrappedNative.cpp:c7bfbb5bf23d : 2111 + 0x16]
11:55:27     INFO -      eip = 0xb41d9553   esp = 0xbfaa9150   ebp = 0xbfaa9258   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa9188   edi = 0x0885c4b8
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   6  libxul.so!XPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*) [xpcprivate.h:c7bfbb5bf23d : 2361 + 0x9]
11:55:27     INFO -      eip = 0xb41ded05   esp = 0xbfaa9260   ebp = 0xbfaa9358   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa92a8   edi = 0x08a64250
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   7  libxul.so!js::CallJSNative(JSContext*, bool (*)(JSContext*, unsigned int, JS::Value*), JS::CallArgs const&) [jscntxtinlines.h:c7bfbb5bf23d : 220 + 0x16]
11:55:27     INFO -      eip = 0xb5046287   esp = 0xbfaa9360   ebp = 0xbfaa93a8   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x088f01c8   edi = 0xbfaa9634
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   8  libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:c7bfbb5bf23d : 463 + 0x18]
11:55:27     INFO -      eip = 0xb50574e9   esp = 0xbfaa93b0   ebp = 0xbfaa9628   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x00000000   edi = 0xb7152b20
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -   9  libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:c7bfbb5bf23d : 513 + 0x2e]
11:55:27     INFO -      eip = 0xb5057ffc   esp = 0xbfaa9630   ebp = 0xbfaa9718   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa9698   edi = 0xbfaa96a4
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  10  libxul.so!js::InvokeGetterOrSetter(JSContext*, JSObject*, JS::Value, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:c7bfbb5bf23d : 584 + 0x27]
11:55:27     INFO -      eip = 0xb50581c1   esp = 0xbfaa9720   ebp = 0xbfaa9778   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa9754   edi = 0x088f01c8
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  11  libxul.so!js::Shape::get(JSContext*, JS::Handle<JSObject*>, JSObject*, JSObject*, JS::MutableHandle<JS::Value>) [Shape-inl.h:c7bfbb5bf23d : 66 + 0x2b]
11:55:27     INFO -      eip = 0xb5256f9c   esp = 0xbfaa9780   ebp = 0xbfaa97f8   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x088f01c8   edi = 0xad390f60
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  12  libxul.so!NativeGetInline<(js::AllowGC)1u> [jsobj.cpp:c7bfbb5bf23d : 4078 + 0x30]
11:55:27     INFO -      eip = 0xb5257121   esp = 0xbfaa9800   ebp = 0xbfaa9858   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaa98e0   edi = 0xad390f60
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  13  libxul.so!GetPropertyHelperInline<(js::AllowGC)1u> [jsobj.cpp:c7bfbb5bf23d : 4272 + 0x27]
11:55:27     INFO -      eip = 0xb525747b   esp = 0xbfaa9860   ebp = 0xbfaa9928   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x088f01c8   edi = 0xbfaa98d8
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  14  libxul.so!Interpret [jsobj.h:c7bfbb5bf23d : 991 + 0x29]
11:55:27     INFO -      eip = 0xb50531c1   esp = 0xbfaa9930   ebp = 0xbfaa9d78   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x08986270   edi = 0x088f01c8
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  15  libxul.so!js::RunScript [Interpreter.cpp:c7bfbb5bf23d : 420 + 0x6]
11:55:27     INFO -      eip = 0xb5056974   esp = 0xbfaa9d80   ebp = 0xbfaa9db8   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x088f01c8   edi = 0xbfaa9da4
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  16  libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:c7bfbb5bf23d : 389 + 0x13]
11:55:27     INFO -      eip = 0xb5057430   esp = 0xbfaa9dc0   ebp = 0xbfaaa038   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x00000000   edi = 0xbfaa9e0c
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  17  libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:c7bfbb5bf23d : 513 + 0x2e]
11:55:27     INFO -      eip = 0xb5057ffc   esp = 0xbfaaa040   ebp = 0xbfaaa128   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaaa0a8   edi = 0xbfaaa0b4
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  18  libxul.so!js::InvokeGetterOrSetter(JSContext*, JSObject*, JS::Value, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:c7bfbb5bf23d : 584 + 0x27]
11:55:27     INFO -      eip = 0xb50581c1   esp = 0xbfaaa130   ebp = 0xbfaaa188   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0xbfaaa164   edi = 0x088f01c8
11:55:27     INFO -      Found by: call frame info
11:55:27     INFO -  19  libxul.so!js::Shape::get(JSContext*, JS::Handle<JSObject*>, JSObject*, JSObject*, JS::MutableHandle<JS::Value>) [Shape-inl.h:c7bfbb5bf23d : 66 + 0x2b]
11:55:27     INFO -      eip = 0xb5256f9c   esp = 0xbfaaa190   ebp = 0xbfaaa208   ebx = 0xb716d8a8
11:55:27     INFO -      esi = 0x088f01c8   edi = 0xad3ef8b0
11:55:27     INFO -      Found by: call frame info