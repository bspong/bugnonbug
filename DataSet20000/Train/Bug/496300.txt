Incorrect object property access behavior under very special circumstances
User-Agent:       Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009030810 Iceweasel/3.0.9 (Debian-3.0.9-1)
Build Identifier: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009030810 Iceweasel/3.0.9 (Debian-3.0.9-1)

This is an extremely peculiar issue. To demonstrate it, one must have the
following setup:

- FF 3.0.x;
- Firebug 1.3 or 1.4, installed but _disabled_ for the page in question;
- HTML page with linked script (in separate file);
- script contents:
var someFunc = function(dummy, obj) {
	var a = obj.DoesNotExist;
	var b = this.constructor;
	alert(a);
}
someFunc("hi", {});

Loading this page (incorrectly) alerts "function Object(){ [native code] }".

Notes:
- Your script file _must_ begin with the code mentioned. If you insert an
empty blank line, the issue magically disappears!
- The "dummy" argument is useless, but must be present in order to see the bug.
- Assignment to variable "b" is useless, but must be present in order to
see the bug.


Reproducible: Always

Steps to Reproduce:
1. FF 3.0.x;
2. Firebug 1.3 or 1.4, installed but _disabled_ for the page in question;
3. HTML page with linked script (in separate file);
4. script contents:
var someFunc = function(dummy, obj) {
	var a = obj.DoesNotExist;
	var b = this.constructor;
	alert(a);
}
someFunc("hi", {});

Actual Results:  
function Object(){ [native code] }

Expected Results:  
undefined