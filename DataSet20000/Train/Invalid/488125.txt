Date.UTC seems to take parameters of completed items
User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)

alert(Date.UTC(2009,4,13, 15, 10, 17)); returns 1242227417000.

This is the confusing part.  4 is April, but this time stamp is for May(5) 13th.  I did a calculation by hand for the date April 13th 2009 at 3:10:17.
in seconds
One day: 60*60*24 = 86400
One Normal Year: One Day * 365 = 31536000
One Leap Year = One Day * 366 = 31622400

Leap Years since 1/1/1970 00:00:00.000
(10) 1972, 1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008 
Normal Years since 1/1/1970 0:0:00.000
(29) 1970, 1971, 1973, 1974, 1975, 1977, 1978, 1979, 1981, 1982, 1983, 1985, 1986, 1987, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2001, 2002, 2003, 2005, 2006, 2007
Seconds since 1/1/2009 00:00:00.000 to 4/13/2009 15:10:17.000
(8867417) Jan(31*86400) + Feb(28*86400) + Mar(31*86400) + 12 completed days(12*86400) + 15 hours(15*60*60) + 10 minutes(10*60) + 17 seconds

so the final calculation should be:
leap years(10 * 31622400) + normal years(29 * 31536000) + jan/feb/mar(Jan(31*86400) + Feb(28*86400) + Mar(31*86400)) + 12 completed days(12*86400) + 15 hours(15*60*60) + 10 minutes(10*60) + 17 seconds
1239635417

I went to http://www.epochconverter.com/ and got the same result as I did in my calculator result.

The documentation says the date is provided as a comma delimited parameter list.  I had a quick check for the bugs and couldn't see any that mentioned this.

In the end these two statements should match, but don't:
alert(Date.UTC(2009,4,13, 15, 10, 17));
alert((10 * 31622400) + (29 * 31536000) + ((31*86400) + (28*86400) + (31*86400)) + (12*86400) + (15*60*60) + (10*60) + 17 + '000');
the "+ '000'" is because Date.UTC is in miliseconds.

Reproducible: Always

Steps to Reproduce:
document.write(Date.UTC(2009,4,13, 15, 10, 17) + '<br>');
document.write((10 * 31622400) + (29 * 31536000) + ((31*86400) + (28*86400) + (31*86400)) + (12*86400) + (15*60*60) + (10*60) + 17 + '000');
Actual Results:  
1242227417000
1239635417000

Expected Results:  
1239635417000
1239635417000

It happens in IE7 as well.  Which is weird because both browsers have the exact same error.  I'll leave Microsoft to figure it out on their own.