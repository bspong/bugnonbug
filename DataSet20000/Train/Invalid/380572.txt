runaway CPU with idle browser at fixed set of tabs - some with javascript
User-Agent:       Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Avant Browser; Avant Browser; .NET CLR 1.1.4322)
Build Identifier: v2.0.0.3

Dear Mozilla:

Your products are wonderful.

I am fully up to date on all patches for firefox v2.0.0.3, but I am
lately seeing a frequently recurring problem of runaway CPU load
attributed to the firefox process.

I typically keep my firefox browser running to a fixed set of tabbed
windows by which I monitor a few things at a glance, such as news,
weather, and gmail.

Many of the javacript ads on some of these sites are blocked by my
guidescope.com proxy server, which could account for error conditions
which the web pages are not designed to expect.

However the result when the unattended operation results in consuming
all CPU resources is an unmanagible machine, and perhaps a bug within
firefox to let it go undetected.

Prior versions of firefox would detect that something was wrong with a
script, and abort its processing.  This is not happening now.

Is there perhaps an engineer who might want to try to repeat the
problem within your lab and instrument firefox to find out what
condition is resulting in the runaway javascript or other aspect of
processing?

My environment is a windows xp laptop, and I would be happy to provide
any other data necessary to replicate the problem.

Killing the process, if I can get task-manager's attention, and then
restarting firefox results in being prompted to restore the previous
session which then runs contently with negligible CPU time.

Opening about:blank on top of the news web site to prevent its
periodic polling of the web server has not prevented the problem, but
I think this method should eventually divide and conquer the set of
tabls to isolate which one is the culprit.

Perhaps a feature to suspend all javascript processing if CPU time
exceeds a specified threshold would help keep wintel computers
managable even with bugs like this lurking.

Reproducible: Always

Steps to Reproduce:
1.
2.
3.