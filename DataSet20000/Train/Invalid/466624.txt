Proxy setting and JRE not working correctly
User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; da; rv:1.9.0.4) Gecko/2008102920 Firefox/3.0.4
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; da; rv:1.9.0.4) Gecko/2008102920 Firefox/3.0.4

There seems to be an inconsistency between the way that Java and Firefox stores proxy information.

I am trying to access a Java application (Primavera Timesheets) on my companies local network through JNLP. The JRE is setup to use the default browsers (Firefox) network proxy setting, but the Java application does not get the correct proxy settings.

When IE is set as default browser the Java program gets the correct proxy information. When the proxy setting is configured directly in the JRE the program works correctly.
The application also works correctly if Chrome is the default browser (but it seems to reuse the settings from IE, so that is no supprise).

JRE expects semicolon (;) as separator when listing exceptions. Firefox use comma (,) as separator. It would be valuable if the separator character could be configured (which it does not seem to be - at least I cant find the option).

JRE version: Version 6 update 10 (build 1.6.0_10-b33)


Reproducible: Always

Steps to Reproduce:
1. Make sure that Firefox is default browser
2. Configure JRE to user browsers network proxy setting
3. Launch Primavera Timesheets through JNLP
Actual Results:  
Program exits with error: Malformed reply from SOCKS server

Expected Results:  
Jave program launched with correct network proxy settings