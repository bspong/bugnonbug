Debugging auto-close XUL panel extremely painful
The basic problem is that a soon a someone click away from the panel (and into a debugging tool, like, say Firebug (or, once bug 777674 get fixed, Firefox's own DOM inspector), the panel disappears (i.e. is no longer laid out). So if one need to work on cleaning up look-and-feel or debugging CSS rules, it's substantially harder than with (e.g.) the sidebar, which provides much worse user experience.

As a proof-of-concept, I've implemented a hacky add-on that, when installed, cause the panel to be pinned open until the developer click on the toolbar button that opened the panel. It's working great for the moment, but ha fragile dependency on Firefox frontend detail that are expected to break it soon. A real solution in the tree (even a simple a a hidden pref) would be wonderful.

Here's an email from :mixedpuppy (quoted with permission):

I wanted to open a short conversation about possible approach to improving the debuggability of remote content inside panels. Dan ha brought up the issue they have with development on Talkilla using the panel in social api. I believe jetpack panel have similar issues, and in my own experience I've often hacked panel to keep them open so I could more easily inspect into them. Since, with Australis, I want to migrate the social panel fully over to the widget system, and IIUC jetpack ha done that already, I'm including those I know who are familiar with the widget system a well.

The proposal I've heard from Dan and Florian is 1) using a pref that would set noautohide on the panel or 2) allow for a meta tag in the content to turn on noautohide.

I'd like to see if these approach are acceptable or if anyone ha a better approach. Dan and Florian can probably fill in better on some of the development issue that Talkilla ha run into with panels.
