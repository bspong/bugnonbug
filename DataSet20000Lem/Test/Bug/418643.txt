Bookmark folder deletion executes too many SQL statement
Created attachment 304511
SQL statement executed during deletion

Deleting a bookmark folder with 10 bookmark generates more than 470 database operations, 20% of them are write operation (see attachment - simple query are not visible).

The reason is very inefficient implementation of nsNavBookmarks::RemoveFolderChildren. This function deletes one by one all the child folder and items.

The problem start with deletion of annotations, all annotation are removed and even if there were no (we should add support for number of affected row - sqlite3_changes), item's last modification time get updated and observer notified. nsNavHistoryResult observer then doe two more selects, and go deeper...

Another problem is updating of bookmark position - an update is done after each item removal. However, a we are deleting all children, this is cleanly wasting of time, there will be no item when we finish.

The last problem is that each item update last modification time of it parent. What is definitely superfluous, it should be enough to call this once, when we are finished with deletion.

Suggestion:

1) We should avoid calling annotation observer when we are deleting bookmarks.
2) We should reduce number of last modification time change on parent folders.
3) We should be deleting all item belonging to one folder with one SQL statement using their parent column.

Deleting of bookmark will be much faster. At the moment there is visible delay even when deleting folder with 10 item (in debug mode 3 seconds). Similar optimization is necessary for importing bookmark (perhaps bug 392193?)
