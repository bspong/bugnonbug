Firefox doesn't seem to be able to store an XHR-Object properly
User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; en-us) AppleWebKit/531.9 (KHTML, like Gecko) Version/4.0.3 Safari/531.9
Build Identifier: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2

I'm having a little bit of trouble on a JavaScript project I'm just writing. I'm using jQuery on the Site, according with the method $.ajax it brings. I'm trying to implement an Etag-feature, which allows me to cache response on the Browser's site and - if the server sends back 304 - use the cached response and pas it to the caller-function.

Now the feature work out just perfectly within an IE8, Google's Chrome, Opera 9 and Safari 4. The Firefox is the only browser that behaves odd.

I've tested it with the latest Firefox 3.5 on a Mac and on Windows and I've also tested it with a Firefox 2.0 on a Windows - both version doesn't work 100%, though the 2.0 doe a better job than 3.5.

What I'm actually doing is, I'm taking the XHR-Object I receive from the $.ajax function and "store" it within a globally used variable (my self-made $_SESSION-variable in JavaScript :-)). However, when I store the Object, it contains of .status, .responseText, etc.

After some other request then, I need to read the object out of my global variable again. At that point, the Object doesn't have any .responseText anymore - it's empty. Of course then, all my adjacent function that need those information fail.

I've searched my whole code for mistake or errors, and of course there are thing that doesn't work out a they should, but none of them should have something to do with this problem - especially since the feature seems to work with no errors/warnings in other browser (even IE *cough*). :-)

I would be thankful for a fast resolution of this problem.

Reproducible: Always

Steps to Reproduce:
1. Check the XHR-Object's .responseText
2. Store the XHR-Object in a global variable
3. Run some other synchronous & asynchronous $.ajax calls, where you do similar thing (storing/recovering)
4. Recover the XHR-Object from the global variable
5. Check the recovered object's .responseText
Actual Results:
The .responseText is empty.

Expected Results:
The .responseText containing the same content a before I've stored in in the global variable.


The curious thing is, that only the .responseText seems to be empty. .status is still 200.
