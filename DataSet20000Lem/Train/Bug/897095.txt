"System JS : ERROR resource:///modules/sessionstore/SessionStore.jsm:4307 \n TypeError: this._windows[aWindow.__SSi] is undefined" on green debug test run
A soon to be deployed TBPL parser improvement ha found a whole bunch of log spam in green debug mochitest-browser-chrome runs.

a) Should these be making the test run fail?
b) We should either null check or fix the root cause if this is unexpected, so we don't spam the annotated failure summary once this TBPL patchset is rolled out.

eg:

https://tbpl-dev.allizom.org/php/getParsedLog.php?id=25604620&tree=Mozilla-Central#error2

Rev4 MacOSX Lion 10.7 mozilla-central debug test mochitest-browser-chrome on 2013-07-23 02:32:38 PDT for push fb4bf993a58a

slave: talos-r4-lion-044

{
02:58:05 INFO - INFO TEST-END | chrome://mochitests/content/browser/browser/components/sessionstore/test/browser_491577.js | finished in 1315ms
02:58:05 INFO - TEST-INFO | checking window state
02:58:05 INFO - TEST-INFO | chrome://mochitests/content/browser/browser/components/sessionstore/test/browser_491577.js | must wait for focus
02:58:05 INFO - WARNING: NS_ENSURE_SUCCESS(rv, rv) failed with result 0x80040111: file ../../../../content/events/src/nsContentEventHandler.cpp, line 93
02:58:06 INFO - TEST-START | chrome://mochitests/content/browser/browser/components/sessionstore/test/browser_495495.js
02:58:06 INFO - ++DOCSHELL 0x1624c8f30 == 88 [id = 1945]
02:58:06 INFO - ++DOMWINDOW == 210 (0x15ee1f1c8) [serial = 5230] [outer = 0x0]
02:58:06 INFO - ++DOMWINDOW == 211 (0x164726f48) [serial = 5231] [outer = 0x15ee1f1c8]
02:58:06 INFO - WARNING: NS_ENSURE_TRUE(mTextInputHandler) failed: file ../../../widget/cocoa/nsChildView.mm, line 5113
02:58:06 INFO - System JS : ERROR resource:///modules/sessionstore/SessionStore.jsm:4307
02:58:06 INFO - TypeError: this._windows[aWindow.__SSi] is undefined
}

http://mxr.mozilla.org/mozilla-central/source/browser/components/sessionstore/src/SessionStore.jsm#4370

4362 /**
4363 * Set the given window's busy state
4364 * @param aWindow the window
4365 * @param aValue the window's busy state
4366 */
4367 _setWindowStateBusyValue:
4368 function ssi_changeWindowStateBusyValue(aWindow, aValue) {
4369
4370 this._windows[aWindow.__SSi].busy = aValue;
4371
4372 // Keep the to-be-restored state in sync because that is returned by
4373 // getWindowState() a long a the window isn't loaded, yet.
4374 if (!this._isWindowLoaded(aWindow)) {
4375 let stateToRestore = this._statesToRestore[aWindow.__SS_restoreID].windows[0];
4376 stateToRestore.busy = aValue;
4377 }
4378 },
