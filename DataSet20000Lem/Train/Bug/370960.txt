erroneous timing of keystate check
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1.1) Gecko/20061204 Firefox/2.0.0.1
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1.1) Gecko/20061204 Firefox/2.0.0.1

When ctrl+clicking on a link ("Open in new tab"), and Firefox is working sluggishly (high workload, or other, heavy, apps running)...Firefox seems to check the state of the ctrl key when executing the queued request, not checking the state of the key when the link wa actually clicked.
This cause focus a) open in same tab, instead of new tab, or b) moving focus to the new tab when the link is a "popup" link if the ctrl key is no longer "down" at the time that Firefox actually get to execute the request. Both a) and b) cause me to have to find my way back to whatever tab i clicked the link in.
In my opinion any app with several "windows" or tab open, should always prioritize so that most resource are allocated to whatever window is acted upon by the user. Other windows/tabs can be allocated spare resource when the user is not interacting with the application.

Reproducible: Always

Steps to Reproduce:
1. Open several (many, depends on the capability of the pc) tabs..tabs with
heavy graphic or from slow server
2. Hold the ctrl key down, click a link, and release the ctrl key before the cursor change
3. see for your self
Actual Results:
Ctrl+click should cause FF to open the link in a new tab, but keep it's focus on the currently displayed tab.
When workload is heavy, FF will, it seems, "forget" that the ctrl key wa down, and interpret the click a an ordinary click

Expected Results:
Normal "open in new tab" but keep focus on displayed tab
I don't expect FF to react instantly, but it should react correctly.
