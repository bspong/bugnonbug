Javascript: pre/post incrementing a variable a an argument to eval sometimes result in incrementing by 2
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.0.12) Gecko/2009070818 Ubuntu/8.10 (intrepid) Firefox/3.0.12
Build Identifier: Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.0.12) Gecko/2009070818 Ubuntu/8.10 (intrepid) Firefox/3.0.12

Incrementing a variable a an argument to eval sometimes result in incrementing by 2.

I had the problem with a larger webapp while using a library called overLIB but I narrowed it down to this small test case script:

var k = 5;
var testeval = 1;
alert("k=" + k)
eval('testeval='+ k++);
alert("k=" + k);

If you attach this script to a basic HTML page, sometimes k will report 7 instead of 6 on the second alert. Unfortunately, this is intermittent, and it seems like using my (non-public) webapp a lot encourages it along.

I've also reproduced the problem without alert so I don't think they are related. In my webapp where I can more consistently reproduce the problem, I found that if I put bracket around the '++i' part to make it '(++i)', the bug stops. Also, moving the string construction to a temporary variable also stop the bug. Finally, changing the eval(...) to alert(...) stopped the bug. So therefore, it seems quite likely that the bug occurs only when you have a pre or post increment a an argument to eval.



Reproducible: Sometimes

Steps to Reproduce:
See the example in details.
Actual Results:
The second alert report 7

Expected Results:
Should've been 6
