make sure that CalculateFrecencyInternal() doe not return 0 for place with at least one visit of bonus-able type
make sure that CalculateFrecencyInternal() doe not return 0 for place with at least one non-embed visit.

a mentioned in https://bugzilla.mozilla.org/show_bug.cgi?id=394038#c62, if a place ha frecency of 0, we do not show it in the url bar autocomplete results.

additionally, because it ha a frecency of zero, on idle, we will not attempt to recalculate frecency (because 0 is a low a you go, and -1 mean "visible in ac results, but please recalculate me on idle".)

we need to make sure that if a place ha any non embed, non download, non undefined visit that it get a non-zero frecency.

here's one way this currently happen:

CalculateFrecencyInternal() us the browser.frecency.numVisits (currently 10) most recent visits. if those are all visit with browser.frecency.*VisitBonus of zero (like embed or download), our frecency will be zero. but what if the 11th visit wa a link, bookmark, or typed?

we could fix this problem by excluding visit NOT IN (0,4,7) from our query to find the last 10 visits, but that make the assumption that the bonus for embed and download are zero.

here's where we'd fix the query:

// mDBVisitsForFrecency
// NOTE: we are not limiting to visit with "visit_type NOT IN (0,4)"
// because if we do that, mDBVisitsForFrecency would return no visit
// for place with only embed (or undefined) visits. That would
// cause use to estimate a frecency based on what information we do have,
// see CalculateFrecencyInternal(). that would result in a
// non-zero frecency for a place with only
// embedded visits, instead of a frececny of 0.
rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(
"SELECT visit_date, visit_type FROM moz_historyvisits "
"WHERE place_id = ?1 ORDER BY visit_date DESC LIMIT ") +
nsPrintfCString("%d", mNumVisitsForFrecency),
getter_AddRefs(mDBVisitsForFrecency));
NS_ENSURE_SUCCESS(rv, rv);

I guess we could avoid hard coding and programtically build up the NOT IN(...) based on the pref values.

additionally, this could happen if the weight chosen for any of the bucket wa zero:

+// weight for bucket for frecency calculation
+pref("browser.frecency.firstBucketWeight", 100);
+pref("browser.frecency.secondBucketWeight", 70);
+pref("browser.frecency.thirdBucketWeight", 50);
+pref("browser.frecency.fourthBucketWeight", 30);
+pref("browser.frecency.defaultBucketWeight", 10);

note to dietrich: put a warning about how these weight need to be > 0.

+
+// bonus (in percent) for visit transition type for frecency calculation
+pref("browser.frecency.embedVisitBonus", 0);
+pref("browser.frecency.linkVisitBonus", 120);
+pref("browser.frecency.typedVisitBonus", 200);
+pref("browser.frecency.bookmarkVisitBonus", 140);
+pref("browser.frecency.downloadVisitBonus", 0);
+pref("browser.frecency.permRedirectVisitBonus", 0);
+pref("browser.frecency.tempRedirectVisitBonus", 0);
+pref("browser.frecency.defaultVisitBonus", 0);

note to dietrich:

are those value for permRedirectVisitBonus and tempRedirectVisitBonus correct? should they, like embed and download, be worth nothing?
