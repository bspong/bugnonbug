Make infinite history work, and keep it working
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050517 Firefox/1.0.4 (Debian package 1.0.4-2)
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050517 Firefox/1.0.4 (Debian package 1.0.4-2)

Infinite history would be a very useful feature. For some users, it even could
replace the manually administrated bookmark with an automatic, searchable
information gathering functionality. There are privacy concerns.


Reproducible: Always

Steps to Reproduce:
1. Set history expire to 99999 days.
2. Browse for some month with this setting


Actual Results:
Some part of Firefox slow down. Memory usage and startup time increase.


Expected Results:
Firefox should keep reacting snappily. Firefox shouldn't use more memory for
this than when freshly installed.

Assuming that user browse the same set of page (slashdot.org for example) most
of the time (except when they explicitly search for new information), database
growth would also be moderate. And, so what, 100 MB of collected URLS after two
years? No problem, the current java runtime alone eats this without providing
useful data.

Maybe it would be interesting to put the history data into a 'real' database,
which would keep index and thus speed up searching in the history.

Also, the history sidebar would need some adaptation, so that the "older"
history would be structured (e.g. in monthly folders).

Simply searching the on-disk data doesn't suffice, because then Firefox would
start to disk-thrash when searching for URL bar history completion items. A
possibility would be an in-memory index cache with a maximum upper limit. Or a
'real' database, which likely already implement this stuff.
