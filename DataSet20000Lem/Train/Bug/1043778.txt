pdfjs privilege escalation round 3
Created attachment 8462305
pdfjs-round3-new.html

It's possible yet again to manipulate the pdfjs implementation when rendered a a plugin. The issue here is that most thing at content level totally ignore the pseudo view-source: protocol, so properly loading a pdf document then switching the src/data attribute of an object/embed to a url that begin with view-source: doesn't trigger the underlying logic which should be triggered for the plugin url changing. This also prevents the type changing which mean that when combined with bug 1022919 to load the usually ignored view-source: protocol it possible for one to disclose information about local file or even possibly obtain chrome level code execution. Here I show off accessing navigator.mozApps.mgmt, and I feel I'm pretty close to code execution there but I have two other issue that need to get filed and my time ha to be spread a much a possible. There's also issue that concern me regarding the remapping of the prototype of embed and object elements, a I have already seen this lead to chrome level code trying to access a dead object when it should have been loading a perfectly valid embed element. I'll go into more detail about that and a practically impossible to reproduce SOW bypass that can also occur tomorrow I think. I already have two other issue to get testcases ready for either tonight or a early a I can tomorrow. Sorry guy I'm a little lack luster on this one I know but I'm running into many issue leading in many different direction lately and I think getting a much out there about them a I can piece together might be for the best. BTW the newest nightly ha it locked down pretty well, but some XBL work is about to make another appearance, meh =/
