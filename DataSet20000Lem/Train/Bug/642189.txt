GCLI should support grouped parameter
GCLI should allow parameter to be grouped together so the UI can present them in a more logically appealing way.

The metadata should be enhanced to take account of this type of declaration by allowing the params section to contain named group of parameter in addition to plain parameters.

var l = {
name: 'ls',
description: 'A recognizable example taken from Unix'
params: [
{
name: 'files',
type: { name: 'array', subtype: 'file' },
description: 'A list of the file to display, leave empty for all files',
defaultValue: null
},
{
group: 'Display Options',
params: [
{
name: 'long',
type: 'boolean',
description: 'Do you want a long listing of the files'
},
{
name: 'extended-attributes',
type: 'boolean',
description: 'Include information on extended attributes'
}
]
},
{
group: 'File Options',
params: [
{
name: 'sort',
type: { name: 'selection', data: [ 'name', 'size', 'ctime' ] }
description: 'How should the file be sorted'
},
{
name: 'recursive',
type: 'boolean',
description: 'Should file in nested directory be included'
}
]
}
exec: function(env, args, request) { ... }
};

All grouped parameter must have default so they can be ignored, and will not be accessible using positional arguments, only via named arguments.
