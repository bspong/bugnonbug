Stop deleting _overLinkDelayTimer property in urlbarBinding to prevent performance suck
Created attachment 484565
patch

I've been doing some performance testing on urlbarBinding's setOverLink. I have a test that call setOverLink("foo") and setOverLink("") back-to-back many time very quickly. It simulates quickly mousing over a long list of link in a web page, bookmark in a bookmark menu, and tab in the all-tabs menu, and leaving the mouse pointer on a page while scrolling it. (Same test a bug 597338 comment 7.)

If I comment out the entire body of setOverLink, running the test 1000 time on my debug build take 5ms. Without modification on trunk, ~650ms. All this test should trigger is setting and clearing the _overLinkDelayTimer over and over. So if I simplify setOverLink to do only this:

if (this._overLinkDelayTimer) {
clearTimeout(this._overLinkDelayTimer);
delete this._overLinkDelayTimer;
}
this._overLinkDelayTimer = setTimeout(function () {}, 100);

It take ~580ms.

At first I thought it's the timeout implementation that's slow, but when I profiled with Shark I saw nsXBLProtoImplField::InstallField taking up 60% of the test time. When I remove the _overLinkDelayTimer field and re-run the test, it take ~320ms, a 51% improvement over trunk.

So apparently we should avoid non-read-only XBL fields, especially when they can be set in tight loop like this one can...
