Saving a page should probably preserve a dir structure so a not to break on-page but lazy loading JS content injection
"save page" currently save a webpage with a flat file resource dir/folder for all the linked scripts, stylesheets, images, etc. However, especially with the popularity of React it is not unusual to find a page that ha 100% local content that isn't loaded in until after DOMReady ha occurred, which mean that Firefox's current save behaviour of saving to flat directory guarantee a broken offline page.

For example, a page might start life without any images, and the a it last DOM element have a <script src="app.js"></script> that then start loading in asset and building content, using relative URLs for assets. In this case, a user saving the page will end up with a "page.html" and a filter "page" that contains all the .js, .css, .png etc resource necessary to rebuild the page offline, but organized in a way that make it impossible to do so because the directory structure necessary to rebuild the page ha been removed.

While Chrome currently doe the wrong thing here, too, it would be super useful if FF could be made to write page asset to disk in a way that preserve the directory structure necessary to rebuild the page regardless of whether the page is immediate content, or lazy-loaded.
