JavaScript VM bug
Created attachment 750122
test case

User Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31

Steps to reproduce:

Browse to the attached test case using Firefox 17, 20, or 21 on Ubuntu 12.04.02 on amd64.


Actual results:

See a failure message (along with a bunch of other debugging text):

failed: java.lang.RuntimeException: null {}: expected false, actual true


Sorry for the non-minimized test case. This wa mostly generated by compiling with GWT, and then I've been trying to slowly hand reduce it. I've gotten to the point though where I'm convinced it's a Firefox JS VM bug, and not a GWT code generation bug. I can try to minimize further if necessary, but I wanted to get started with a bug report now.

I'll try to summarize here the most interesting part of the test case, so you can confirm it's an issue:

On line 1983 and 2073, the isNull_0 and isNull_1 function are defined and set to two separate prototype object's isNull property. These method either return "null" (isNull_0) or "this" (isNull_1).

The RuntimeException error message above is generated on line 1901. Note that "actual true" corresponds to the expression "isNotNull($wnd.wasnull = v.isNull())". ("$wnd" here refers to the global window object; this is a GWT convention.)

Note that v.isNull() must either return "null" or "v", and since isNotNull() returned true, it must have returned "v". Therefore, window.wasnull now refers to v too.

But if I open the Web Console and evaluate "wasnull.isNull()", it now return "null".

I'm conjecturing that there's a JS VM bug where the VM is erroneously calling isNull_1() instead of isNull_0().


Expected results:

The page should print out just "loaded 2" and "done", like what happens if you open the page in Chrome on Linux.

I'm told Firefox 20.0 on OS X also doe the same; not sure if 32-bit or 64-bit version though.
