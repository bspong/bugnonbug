implement about:memory framework core
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6

When going to the about:memory page, Firefox would scan the current memory space and see how much memory various object are using.

At the top would be a simple list of the various area of memory that tend to eat up RAM. The one that I can think of right now include plugin memory usage, page cache memory usage, image cache memory usage, and memory that ha been freed but is still being reported by the OS a used. Any other category that tend to use large amount of memory should be listed here a well. Below this, there would be a total amount of memory actually being used by Firefox.

Optionally, a tree structure could be shown below this (like treesize) that would allow it section to be expanded/contracted for more detail. This could be implemented in the future if it is deemed to difficult to initially address.

Someone mentioned that the about:cache page show some of this information. Unfortunately, some of the information is a little bit mislabeled, so user commonly misinterpret it. There's also a bug in the display, so it display an impossibly incorrect number after clearing the cache. Not surprisingly, the number of complaint about the bogus and misleading information (and about all memory complaint in general) ha gone down drastically a memory leak have been fixed. This suggests to me that people never look at this stuff if they are not having a problem.

If necessary, memory swapped to disk can be reported, but should be clearly labeled and in a separate section from the main RAM memory stats. For consistency, usage data in all section should be reported in the same format (e.g. '25.1' for 25.1 MB used).

Obviously, some of these feature are harder to implement than others. However, I think that once even a subset of this wa implemented well, it could be used a an agent in addressing the various memory hog rumor that are hard to quash (while helping people understand why Firefox us memory the way it does).

Reproducible: Always
