Applications freeze because firefox don't interact correctly by handling focus with other applications.
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)

Changing between minimized firefox and other application could freeze the other apps. This presupposed a special handling which is wirtten in the following sections.

Reproducible: Always

Steps to Reproduce:
1. Start firefox.
2. Start a C or Delphi application with integrated TPopupMonthCalenderEH elements.
3. Minimize the firefox and change to the other application.
4. Change back to firefox and maximize it.
5. Change to the other application and you see it's freezed.
Actual Results:
If you working with firefox and minimize it to start work with other open applications, firefox doe not send correctly the focus to this other application.

If you now change from the other app to the firefox and later back the application with the TPopupMonthCalenderEH element gray out, freeze and doe not react of any interaction. This application can only been terminated by using the task manager. After a restart of the app you can countinue working.

This bug is only in connection with application which us a TPopupMonthCalenderEH element. The application will freeze immediately by changing from firefox back.



Expected Results:
The minimized firefox must send the focus to the next active application so that you can work without any interuppting.

After a few test of oures developer we found out that all apps with this element got freezed. This happens only in interact with the firefox. Interacting with other software run correctly.

I think the problem are two things:

1. The firefox eventhandling or focus handling doe not work with any application which us standard C, C++, C# or Delphi libaries.
2. Through this behave the other application will possibly lose criticly data.

So the severity is of course "critical"

We found this mistake by using a application with the named element to save the working time and done task of our Employees.

The shown programm in the demonstration site is a dummy which us the same element like the programm which strike the bug.

For security reason we could not show the original program.
