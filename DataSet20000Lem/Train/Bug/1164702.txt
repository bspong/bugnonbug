Investigate Reusing ProfilerMarker entry point for TimelineMarkers
Right now, the profiler instrument probe around many part of Gecko to report "markers" in a similar way to TimelineMarkers, except these are only fetched when we fetch the profiler data.

Take the TimelineMarkers "Styles" markers, compared to GeckoProfiler's "Styles" markers: http://mxr.mozilla.org/mozilla-central/source/layout/base/nsRefreshDriver.cpp#1661

Same exact place, except GeckoProfiler prefers one event over many (this may not be a concrete case, and maybe just how this wa implemented), resulting in tracing code for two separate resources.

Also, this leaf u with contrasting marker -- TimelineMarkers Reflow marker occurs in PresShell::DoReflow, whereas the GeckoProfilerMarker occurs in PresShell::Flush (Flush_Layout). If TimelineMarkers could use the same entry point a GeckoProfilerMarkers, then we also get way more instrumentation coverage.

AFAICT, the markers[1][2] are rather similar, both having tracing meta, name, optional stack. Just TimelineMarkers require a DocShell, so that can be optional.

Wouldn't it be possible to have a general marker probe where all these `profiler_tracing()` call are, that would both call the same thing a `profiler_tracing()` now, a well a a DocShell's `AddProfileTimelineMarker()`, letting u reduce duplicate code, cover more area, and be consistent in markers?


[1] http://mxr.mozilla.org/mozilla-central/source/tools/profiler/GeckoProfilerImpl.h#246
[2] http://mxr.mozilla.org/mozilla-central/source/docshell/base/TimelineMarker.h
