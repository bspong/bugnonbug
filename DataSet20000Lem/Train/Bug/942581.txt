CustomizableUI.unregisterArea should keep placement by default and offer an argument to provide the possibility not to do so
I'm currently migrating my add-on, OmniSidebar, and trying to use the CustomizableUI method a much a it can. The add-on provides it own toolbars in the sidebar's headers, and I've run into a problem. If you for some reason disable the add-on (common case: updating), there is no easy way to remove the toolbars without doing all the heavy work to keep thing consistent yourself.

The same way a there's a registerToolbarNode() method, that restores the button in the saved state to the toolbar when called, there should be a similar unregisterToolbarNode() method that doe the opposite:

- move all child element back to the palette
- remove any buildAreas information relative to the toolbar and
- doe NOT remove placement information

so when re-enabling the add-on we can call registerToolbarNode() on it again and restore everything to it proper saved state.

Calling unregisterArea() isn't an option because that era the placement information (if I'm reading the code correctly, please let me know if I'm wrong).

As it is right now, if we want dynamically loaded toolbars like this, we need to do all these step ourselves which would likely clash with the rest of the customization code if not done properly. IMO, this would be something best done in CustomizableUI itself.

Or can this be done already and I just missed it?
