Making the event object globally accessible
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7

function attachTargetAspNetValidators(e,ctrl)
{
var target = (e.srcElement ? e.srcElement : e.target);
if (ctrl.Validators)
{
target.Validators = ctrl.Validators;
}
}
function validateAspNetValidators(ctrl)
{
// En bon canadian français... criss de tabarnac de calisse de ciboire de saint-sacrement d'évangile de criss
// <PRB> The fucking event object is not global in FireFox and others. Is is possible to make the fucking event object always accessible ? I DON'T WANT TO HAVE TO PASS THIS FUCKING OBJECT IN ALL MY FUNCTION CALLS. I'M HAPPY TO BEEN ABLE TO FIND A SOLUTON TO MY FUCKING PROBLEM, BUT FOR HOW MANY TIMES I'LL FIND A WORKAROUND ?
//attachTargetAspNetValidators(event,ctrl);
//ValidatorOnChange(event);
var fuckingEvent = new Function();
fuckingEvent.target = ctrl;
ValidatorOnChange(fuckingEvent);
}


Reproducible: Always

Steps to Reproduce:
APS.NET : Try to create a user control that have two input field : one for the value (hidden) and the other for the text, just like a combobox. If the value is empty, the RequiredFieldValidator must be invalid. The problem, is when the user enters text in the combobox that don't match an existing item, the required validator's text should be visible. For that, I've bound the validator to the value field. But when the user enters text in the text field, the validator doesn't appear. I have to manually call ValidatorOnChange. But this function need an event object from the event that triggered my function. The problem is that my function is called from others. And no, it's not a design problem. I can't pas the event object to all my function call !
Actual Results:
The event object is not globally accessible.

Expected Results:
The event object should be globally accessible.

No additional information.
