createLivemark fails if created feed cannot be loaded
createLivemark() call updateLivemarkChildren(). If in attempting to load the specified feed, the Livemark service generates an exception, it is handled thus:

305 catch (ex) {
306 if (livemark.loadingId != -1) {
307 this._bms.removeItem(livemark.loadingId);
308 livemark.loadingId = -1;
309 }
310 MarkLivemarkLoadFailed(livemark.folderId);
311 livemark.locked = false;
312 return false;

However, at this point, livemark.loadId is undefined. Because it's not equal to -1, the Livemark service attempt to have the bookmark service remove it, which a expected fails with the following error:

[Exception... "Component returned failure code: 0x80070057 (NS_ERROR_ILLEGAL_VALUE) [nsINavBookmarksService.removeItem]" nsresult: "0x80070057 (NS_ERROR_ILLEGAL_VALUE)" location: "JS frame :: file:///C:/Program%20Files/Mozilla%20Firefox/components/nsLivemarkService.js :: LS__updateLivemarkChildren :: line 619" data: no]

Probably the most straightforward fix for this to change pushLivemark to ensure that this value is initialized to -1, like so:

return this._livemarks.push({folderId: aFolderId, feedURI: aFeedURI, loadId: -1});

... but I confess that I'm not sufficiently familiar with this code to understand whether that would have unintended consequences.
