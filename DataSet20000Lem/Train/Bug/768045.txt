Intermittent OOM during browser_gcli_break.js, browser_gcli_edit.js | Exited with code 1 during test run
Rev3 Fedora 12 mozilla-aurora pgo test mochitest-other on 2012-06-22 05:52:19 PDT for push f835e7444251

slave: talos-r3-fed-039

https://tbpl.mozilla.org/php/getParsedLog.php?id=12899617&tree=Mozilla-Aurora

{
TEST-PASS | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_gcli_break.js | directTabText for 'break list'
TEST-PASS | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_gcli_break.js | arrowTabText for 'break list'
TEST-PASS | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_gcli_break.js | output.command for: break list
TEST-PASS | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_gcli_break.js | output.completed false for: break list
out of memory
TEST-UNEXPECTED-FAIL | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_gcli_break.js | Exited with code 1 during test run
INFO | automation.py | Application ran for: 0:10:29.579727
INFO | automation.py | Reading PID log: /tmp/tmpbVqY63pidlog
==> process 2502 launched child process 2550
INFO | automation.py | Checking for orphan process with PID: 2550
Downloading symbol from: http://ftp.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-aurora-linux/1340364007/firefox-15.0a2.en-US.linux-i686.crashreporter-symbols.zip
PROCESS-CRASH | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_gcli_break.js | application crashed (minidump found)
Crash dump filename: /tmp/tmpmRhsJB/minidumps/7c47d62e-ab1f-d2b1-2d5e7b48-2425eae6.dmp
Operating system: Linux
0.0.0 Linux 2.6.31.5-127.fc12.i686.PAE #1 SMP Sat Nov 7 21:25:57 EST 2009 i686
CPU: x86
GenuineIntel family 6 model 23 stepping 10
2 CPUs

Crash reason: SIGSEGV
Crash address: 0x0

Thread 0 (crashed)
0 libmozalloc.so!TouchBadMemory [mozalloc_abort.cpp:f835e7444251 : 35 + 0x0]
eip = 0x00483f5c esp = 0xbfe7026c ebp = 0x025cccb0 ebx = 0x004851e8
esi = 0x00281844 edi = 0x00000001 eax = 0x0000000a ecx = 0x004851e8
edx = 0x0028232c efl = 0x00010206
Found by: given a instruction pointer in context
1 libmozalloc.so!mozalloc_abort [mozalloc_abort.cpp:f835e7444251 : 56 + 0x4]
eip = 0x00483fa7 esp = 0xbfe70270 ebp = 0x025cccb0 ebx = 0x004851e8
esi = 0x00281844 edi = 0x00000001
Found by: call frame info
2 libmozalloc.so!mozalloc_handle_oom [mozalloc_oom.cpp:f835e7444251 : 27 + 0xd]
eip = 0x00484010 esp = 0xbfe70290 ebp = 0x025cccb0 ebx = 0x004851e8
esi = 0x0000000c edi = 0x00000001
Found by: call frame info
3 libmozalloc.so!moz_xmalloc [mozalloc.cpp:f835e7444251 : 56 + 0x7]
eip = 0x00483bce esp = 0xbfe702b0 ebp = 0x025cccb0 ebx = 0x004851e8
esi = 0x0000000c edi = 0x00000001
Found by: call frame info
4 libxul.so + 0x2849c6
eip = 0x00f3b9c7 esp = 0xbfe702d0 ebp = 0x025cccb0 ebx = 0x0256de08
esi = 0x0000000c edi = 0x00000001
Found by: call frame info
5 libxul.so + 0x18b6e07
eip = 0x0256de08 esp = 0xbfe70308 ebp = 0x025cccb0
Found by: stack scanning
6 libxul.so + 0x18b6e07
eip = 0x0256de08 esp = 0xbfe70310 ebp = 0x025cccb0
Found by: stack scanning
7 libxul.so + 0x5e9e39
eip = 0x012a0e3a esp = 0xbfe70320 ebp = 0x025cccb0
Found by: stack scanning
8 libxul.so + 0x18b6e07
eip = 0x0256de08 esp = 0xbfe70330 ebp = 0x025cccb0
Found by: stack scanning
9 libxul.so + 0x5e9e8e
eip = 0x012a0e8f esp = 0xbfe70340 ebp = 0x025cccb0
Found by: stack scanning
10 libxul.so + 0x18b6e07
eip = 0x0256de08 esp = 0xbfe70350 ebp = 0x025cccb0
Found by: stack scanning
}
