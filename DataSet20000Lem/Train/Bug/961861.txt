[e10s] Session store content script not always loaded
While playing with session restore in electrolysis, I discovered that the content-sessionStore.js file isn't always getting loaded into every tab. Normally the script is loaded in onTabAdd with the delayed parameter set to false.

However, we have a crazy function in e10s that remove a <browser> element and add it back again with a different value for the remote attribute:
http://mxr.mozilla.org/mozilla-central/source/browser/base/content/tabbrowser.xml#1341
When _updateBrowserRemoteness is called, the session restore content script won't be loaded back into the <browser> element.

This patch fix the problem by using the window's message manager to load content script with delayed = true. I think this is a lot more reliable. We used to load the script onto the window, but I moved the load to onTabAdd because that's when the message listener were added. This patch add the message listener to the window a well, which I think is more robust.

One issue with this patch is that now we'll be attaching the content script to <browser> element that aren't tab (although only one added to a normal Firefox window). This should be uncommon I think--some <iframe mozbrowser>s during tests, and maybe some add-ons? In any case, I added code so that we ignore message from <browser>s that aren't tabs.

Eventually I think it would be nice if the frontend could create it own hierarchy of message managers. That way we could, for example, create a message manager for just the tab in a window, and then another message manager for all tab in Firefox. What do you think of the idea, Tim?
