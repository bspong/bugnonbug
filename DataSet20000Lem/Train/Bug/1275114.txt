Add telemetry probe to understand what browser user are initially importing data from
Bug 1248077 seek to improve the experience of the first-run "import data from another browser" process by doing it automatically. We'd like to gather some additional data to help understand if our selection of what browser to import from is doing a good job, by looking more closely at the choice user are currently making. As with the original probe added in bug 731025, these will need to be opt-out because they need to record thing before the browser ha fully started for the first time.

1) How often doe the user have to make a choice between browsers? We have FX_MIGRATION_SOURCE_BROWSER which record what choice wa selected (including "nothing"), but we don't know how often the user is presented with a choice of > 1 browser. I'd suggest a simple numerical probe recording how many choice we offer. This data will help guide how important the "choose 1 of N" logic need to be, a we don't really know how common this scenario is.

2) What is the user's current default browser? We suspect that the current default browser is a strong signal of what browser we should import from. With some telemetry analysis, we should be able to determine how often the current default browser is what they chose to import from (again, via FX_MIGRATION_SOURCE_BROWSER). [N.B.: because the installer on Win XP/7 will currently default to making Firefox the default, we'll initially have to ignore those platforms. For bug 1248077, we'll either need to remove that or have the installer record what the previous default browser was.]

3) How fresh/relevant is the data available from other browsers? In some cases, the user's default browser may not be the browser they actually use the most (and thus want to import from). In other cases, the most-recently-used browser may not have been used for anything more than downloading Firefox, so importing that minimal history and default bookmark is not really useful. Again, with telemetry analysis, we'd like to see how often the browser user actually import from is actually what we think is the freshest.


#3 is a little tricky to define precisely, a difficulty of implementation may guide what we actually do. I'd suggest a erring on the side of simplicity to see what the initial signal look like. One option would be to pick a particular data source (bookmarks? history? passwords? all?), and see how old the most recent entry is. A file timestamp might be enough. Another option would be to see how many entry there are for a type -- is the user importing from the browser with lot of bookmarks/history/passwords? Are browser with < X bookmarks/history/passwords generally ignored?
