Firefox: Let author put line break (newlines) in tooltips (title attribute)
Many web author make use of the MSIE behavior that translates newlines in title attribute into line break in the resulting tooltip. This ha led to frequent request for Mozilla to do the same thing; see for example the many votes, comments, and duplicate for bug 67127 (which wa until recently listed a a Core bug rather than being specific to the Suite: this bug is being filed to fill the void due to that change). See that bug for several testcases, some attempted patches, and very lengthy discussion. Note that this bug is related to bug 218223, but that bug asks for automatic wrapping of tooltips to multiple line while this one asks for explicit author-specified line breaks.

Emulating MSIE's behavior is not ideal: it can easily lead to accidental line break if the HTML source is word-wrapped, and it is not compatible with web standards. The HTML 4.01 spec (http://www.w3.org/TR/html4/types.html#h-6.2) say that "User agent should interpret attribute value a follows:

* Replace character entity with characters,
* Ignore line feeds,
* Replace each carriage return or tab with a single space."

This rule out a direct mapping of source code newlines to tooltip line breaks. However, it could be consistent with the spec to allow character entity such a &#10; to yield tooltip line break by delaying entity replacement until after explicit CRs and tab have been replaced by spaces. (Technically, the spec doe not say what order those step must occur in.) The desired behavior is outlined in bug 67127 comment 131.

Before any patch enabling this would work, two thing would need to happen. First, the parsing behavior would need to change a outlined above: this would rely on the detail of the eventual fix to bug 322270 (enabling the desired behavior may not be feasible). And second, my interim Firefox patch for bug 67127 would need to be reverted (see bug 67127 comment 214 for details: note that for most existing pages, the effect of my interim patch is identical to the effect of any eventual fix for bug 322270).

A patch for this issue may in fact be in easy reach (subject to those two caveats): both bug 67127 and bug 45375 were recently fixed for the SeaMonkey suite by the patch in bug 356900, and it seems likely that it could be adapted for Firefox. (I haven't had the time to try yet myself.) Given that, it isn't clear that bug 228673 is actually a dependency for this bug, but I'm copying it over here from bug 67127 at least until a Firefox patch that work around it doe appear. (Bug 356900 comment 15 indicates that the workaround won't be necessary once the reflow branch land for Firefox 3; if we do get a workaround fix here before then, a Firefox analogue of bug 357337 would be necessary.)
