add a method to tell when rendering and network are quiescent
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.11) Gecko/20071204 Ubuntu/7.10 (gutsy) Firefox/2.0.0.11
Build Identifier:

Here's the one small hook Mozilla can implement quickly that will make a huge difference to a huge numberchildren....

On the XO, we can leave the screen on while suspending the rest of the machine (with or without wireless).

We've implemented what we call "ebook mode" in our book viewer (based on evince), so that a soon a the page ha been rendered, we can turn off the rest of the computer. Our system can already wakeup in under 1 second (we believe the hardware is good to about 50ms). We do this on page by page viewing, and the application know when the machine is safe to suspend.
We don't have to wait for some arbitrary timeout to suspend the machine.

This make a huge difference in battery life. Rather than 3-5 hour life, you can get upwards of 13 hours. It would not surprise me that over the life of OLPC, this could translate to 10-20% of the costs; or, to put it differently, 10-20% more kid can get some education.

But much of the content is HTML/DHTML/Web based; the browser, even when there is no network connection, it is a major viewer for content. Wee'd like the browser to be able to implement the same sort of behavior we've been able to get in evince. The browser is the #1 application, according to the teachers.

Having a callout that mozilla make to tell u when it thread reading from the network and rendering arecomplete will work way better than the user idle heuristic Chris Ball ha implemented initially.

Let me make this concrete and immediate now that deployment is no longer hand waving, but absolutely concrete with contract and letter of credit in place:

Based on the information Oscar Becerra of Peru just gave us, *fifty-five thousand* of the laptop going to Peru starting in February are going to school with _no_ power grid. What is more, some of the school take *twenty* day to travel to. At those schools, the teacher travel for one month, teach for one month, and then return to civilization; the laptop are to enable them to learn not just while they have a teacher, but the other two month they do not.
We'll be using solar (but using needing more watt hour mean more panel and batteries), and generator (but the fuel cost is extreme in some cases) for power; reducing the watt hour consumed to the minimum possible is *really* important.

So this feature request can make a bigger difference to more kid than almost anything else we can ask for or which we can do anywhere else in the OLPC project overall; it translates directly into cost of deployment (solar cell needed; battery for storage etc) which constrains how much of the money result in laptop going to kid to learn with, and in operating cost (in the case of using generator that need fuel supplied, and amortization cost
of any solar infrastructure).

Reproducible: Always
