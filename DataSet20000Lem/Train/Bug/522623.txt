Enhancement: Search across multiple tab
See bug 185916, from which this wa spun off.

Use case (1)
I have 100 tab open in one Firefox window. The tab title are truncated
because of space constraints, and only ~7 character of each title are visible.
20 of these tab contain the result Google searches, 5 contain Google Docs
documents, 1 contains Google Mail. I want to switch to the Google Mail tab.

Use case (2)
I have 100 tab open in one Firefox window. The tab title are truncated
because of space constraints, and only ~7 character of each title are visible.
80 of 100 open tab contain Bugzilla pages. A colleague asks, "How's the work
on that [foo] rewrite bug going?" I know which bug he's referring to, but I
don't remember the bug number or the title. But since I'm working on that bug,
I'm pretty sure it's open somewhere in my 80 bugzilla tabs. I want to switch
to that tab.

Use case (3)
I'm reading up on the [foo] of [bar]. It's an obscure topic (one that PageRank
fails on), and most page I've found through Google search have been useless;
I've only found 20 worthwhile ones. Problem is, it take exploration to decide
whether a page is useful or useless: sometimes a useless page link to a useful
one, and exploring this link graph requires a lot of tab for each exploration.
If I encounter a familiar-looking page while traversing that link graph, I
want to quickly find out if I've already come across it. In this case, that
mean determining whether I already have it open in a tab.


I don't think that the Firefox UI can efficiently handle these case today, but
I also don't claim to be an expert.

I propose the following UI addition
(1) user press Ctrl-Shift-F/Cmd-Shift-F
(2) window dims, search box appears in the middle
(3) after 3-5 character have been entered into search box, a textual search
is done on each tab. This could proceed a
(a) search title of all tabs: tab title matching all search term get,
say, 100 point
(b) render tab on top of darkened background according to points, in a
"weighted map"-style display
(c) search content text of all tabs: a tab gets, say, 1 point for each
search term that's found. Refresh weighted map of relevant tab after
searching each tab's content text.

The search algorithm is very basic, there are lot of way to tune it. (For
example, searching all subset "phrases" of search word might give better
results.)

I think the visual part of this UI could be a good use case for
hardware-accelerated rendering. There's some interesting animation one could
do with this feature.

Yes, it's true that an add-on could be written to do this, but it seems to me
that the performance requirement of such a feature are pretty high, and I'm
not sure an add-on could cut the mustard. But only experimentation can tell.
