OnKeyDown event missing when pressing a second key while another one is held down.
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.4) Gecko/20061201 Firefox/2.0.0.4 (Ubuntu-feisty)
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.4) Gecko/20061201 Firefox/2.0.0.4 (Ubuntu-feisty)

This is related to: Bug 91592

Yes, I've seen already every browser behaves here a little different, and a the bug note Mozilla/Firefox behaves even different on different platforms. It seems what I checked, I can handle all that in the code.

However whats impossible to handle is following situation with Firefox on Linux. User press for exmape the 'a' key, and then pressed for example the 'end' key without releasing the a key first. I (the javascript) get then an on onkeydown event with '#' a character. I just don't have any chance to different between if the user hit the # key or the 'end' key :-(

It is handle-able is the user release the 'a' before he hit the other key, since then I can tell on the OnKeyDown event, if the OnkeyPress event will be for the # key or the End key.

What I am requesting is at least, to send an OnKeydown event if the user hit another key, while holding the other one.

Reproducible: Always

Steps to Reproduce:
1. use firefox on linux
2. go to the URL i supplied
3. press and hold the a key, then press and hold for example an arrow key. The javascript ha no chance telling this ain't a normal character.
Actual Results:
Sends the Onkeydownevent for the first key, then sends the onkeypress event while I hold it, then when I press another key while holding it send the onkeypress event for the other key, NOT sending the onkeydown event for that key

Expected Results:
Sends the Onkeydownevent for the first key, then sends the onkeypress event while I hold it, then when I press another key while holding it send the onkeypress event for the other key, DO sending the onkeydown event for that key

This whole situation might sound akward, but while normally using key it happens the user more often than one think it would.
