offset never correct for embed element
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; .NET CLR 1.1.4322)
Build Identifier: 1.5.0.1

On a complex body structure, element offset (TOP, LEFT) never give a constant valid element position. I am using this page a a example...

http://www.weather.com/weather/tenday/33510?from=36hr_topnav_undeclared

If you look at TABLE element [12], using... getElementByTagName('TABLE');

It report the element being at... (800X600 window)!

Table Element 12 Position From Top: 0
Table Element 12 Position From Left: 0
Table Element 12 Inner width: 453
Table Element 12 Inner height: 826

When the exact (TOP, LEFT) position are.

Table Element 12 Position From Top: 240
Table Element 12 Position From Left: 8
Table Element 12 Inner width: 453
Table Element 12 Inner height: 826

Because the element is embedded in other parent type elements, you might think to back track (offsetParent), adding the (TOP) together, until your parent is the (body) element. But this give a bogus offset for (TOP).

To understand this better, using my example page...

If you were to move the element TABLE [12] to the TOP of the window and then do a document.body.scrollTop; you would get the element true position from the window TOP. But this can only done if the page is long enough to let the element scroll to the top of the window! One way around this is to create a <DIV> and insert it into document.body and set the height and width of that <DIV> (2*scrollheight and 2*scrollwidth) so you can move the element without restriction to window (X=0,Y=0) and then use...

document.body.scrollTop;
document.body.scrolLeft;

To get the exact element position. But so much work just to get the true position. This happens in all Mozilla based browser no matter what OS or version/type of Mozilla based browser I use.

Reproducible: Always

Steps to Reproduce:
1. download my example page
2. open that page in a text editor
3. add what is below to the document (HEAD)

<script>
function loader()
{
var pop = document.getElementById('result');
var obj = document.getElementsByTagName('TABLE');

var out = "<pre>";

for ( i = 0; i < obj.length; i++ )
{
//el = obj[i];

out += " Table Element " + i + " Position From Top: " + obj[i].offsetTop + "\r\n";
out += "Table Element " + i + " Position From Left: " + obj[i].offsetLeft + "\r\n";
out += " Table Element " + i + " Inner width: " + obj[i].scrollWidth + "\r\n";
out += " Table Element " + i + " Inner height: " + obj[i].scrollHeight + "\r\n";
}

out += "</pre>";

pop.innerHTML = out;
}
</script>


4. add the onload event to the BODY tag

onload='loader();


5. at the bottom of the document, right before BODY close, add what is below!

<div id='result'>&nbsp;</div>

6. save and close

7. open with (Mozilla,Firefox,...)

8. scroll to bottom to see the results!
Actual Results:
inconsistant offset(s) for embeded element



Expected Results:
using...

element_object[number].offsetTop;
element_object[number].offsetLeft;

should always give valid position!

I am working on extension that allows for one to click on any element in the window and have it enclosed in a border, then from the context menu one can capture and save the element a a image.
