Implement in-child version of TabActor and ThreadActor
FxOS apps and web content JavaScript run in content child subprocesses, not in the main B2G process. SpiderMonkey's Debugger API is not cross-process, nor cross-thread, nor even cross-JSRuntime, so all JavaScript debugging on Gecko, whether content, chrome, remote, or local, entail running JS code of some sort that us the Debugger API in the same process and runtime a the debuggee. (That JS code must run in a different compartment than the debuggee, perhaps with chrome privileges.) That JS code implement the server side of a JSON-based protocol, for which the Firefox Developer Tools' JavaScript debugger UI is the client.

With bug 878958, the debugging protocol server that run in the main B2G process will have the ability to enumerate content child process and "attach" to them. Attaching to a child process start a new debugging protocol server in the child process, with it own root actor. This root actor should respond to a 'listTabs' request by enumerating any apps and content tab present in the child process in which the root actor is running. The response should name actor to which the client may attach --- perhaps tab actors, a described in the protocol, or perhaps a new kind of "app actor" --- to debug whatever content page or apps are present in that child process. The client should eventually end up talking to a "thread-like actor", of the sort implemented by ThreadActor in toolkit/devtools/server/actors/script.js.

Here's a protocol spec that describes child actors, the listTabs request, tab actors, and thread-like actors: https://github.com/jimblandy/DebuggerDocs/blob/b2g-subprocesses/protocol
