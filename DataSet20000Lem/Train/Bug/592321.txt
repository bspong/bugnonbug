firefox 4beta5candidate1 creates enormous system (likely gfx (directx?) layer related) load on winxp - huge contrast to beta4 (no such woe there)
User-Agent: Mozilla/5.0 (Windows NT 5.1; rv:2.0b5) Gecko/20100101 Firefox/4.0b5
Build Identifier: Mozilla/5.0 (Windows NT 5.1; rv:2.0b5) Gecko/20100101 Firefox/4.0b5

maybe some deep internals have changed, but i just upgraded my previously pretty much normally behaving firefox 4 beta4 to the candidate build1 of beta5 (english winxp, x86, multicore cpu, some ati embedded graphic card (portable machine)) and now whenever i even do just a little a enter this text in this edit field while filing this bug, or simpy raise the firefox window and hover/move the mouse over the firefox area or scroll the window or surf some page or do anything at all, firefox creates huge load (100% core load, aka a single thread creates 100% load arriving at 50% cpu load on dualcore machine) apparently in some drawing/display subroutine on this window xp machine, while beta4 ha not behaved like this.

i think i recall some roadmap towards accelerated directx or similar stuff related rendering thing the firefox team wanted to do, though im unsure if winxp/directx9 wa also affected or being tackled by the roadmap and plans.

but something ha a severe impact on the winxp machine and it load, which is very most likely related to the displaying and drawing of thing on screen.

process explorer (sysinternals/msft tool) clearly show firefox generating a very high percentatage of a red graph within it own load, so the green percentage (non-system load) is most of the time very low.

having already followed the amd-code-analyst howto page on
https://developer.mozilla.org/Profiling_with_AMD_CodeAnalyst

i tried to narrow down the problem with the beta5 build of firefox4, and codeanalyst report the firefox.exe usage a follows:

a very high hal.dll (55.75% during these 30second sample cycle of codeanalyst) usage (\windows\system32\hal.dll)
second is xul.dll (total of 21.4% cycles) whose internal subroutine load sample dont really look revealing or suspicious to me

and third and fourth place are the ati (graphics driver) component of this machine with 13.17% and 3.41% cpu cycle (ati2cpag.dll and ati2dvag.dll both is \windows\system32\)

fifth position is mozcrt19.dll with 1.96% cpu cycle within the firefox.exe scope......


there ha to be some serious change in the firefox4 codebase which ha been added or activated with the beta5 build, which at least make firefox4 beta5 pretty much unusable on this ati-graphics card based machine.

Reproducible: Always
