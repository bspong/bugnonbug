Proxy setting and JRE not working correctly
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; da; rv:1.9.0.4) Gecko/2008102920 Firefox/3.0.4
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; da; rv:1.9.0.4) Gecko/2008102920 Firefox/3.0.4

There seems to be an inconsistency between the way that Java and Firefox store proxy information.

I am trying to access a Java application (Primavera Timesheets) on my company local network through JNLP. The JRE is setup to use the default browser (Firefox) network proxy setting, but the Java application doe not get the correct proxy settings.

When IE is set a default browser the Java program get the correct proxy information. When the proxy setting is configured directly in the JRE the program work correctly.
The application also work correctly if Chrome is the default browser (but it seems to reuse the setting from IE, so that is no supprise).

JRE expects semicolon (;) a separator when listing exceptions. Firefox use comma (,) a separator. It would be valuable if the separator character could be configured (which it doe not seem to be - at least I cant find the option).

JRE version: Version 6 update 10 (build 1.6.0_10-b33)


Reproducible: Always

Steps to Reproduce:
1. Make sure that Firefox is default browser
2. Configure JRE to user browser network proxy setting
3. Launch Primavera Timesheets through JNLP
Actual Results:
Program exit with error: Malformed reply from SOCKS server

Expected Results:
Jave program launched with correct network proxy setting
