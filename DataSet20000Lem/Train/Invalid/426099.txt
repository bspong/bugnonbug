AwesomeBar / Location bar / URL bar UI suggestion for privacy concern
User-Agent: Mozilla/5.0 (X11; U; DragonFly i386; en-US; rv:1.8.1.8) Gecko/20071218 BonEcho/2.0.0.8
Build Identifier: Mozilla Firefox 3.0b4, Copyright (c) 1998 - 2008 mozilla.org

I see a lot of criticism of the "AwesomeBar" floating around. Despite some searching, I did not find a bug devoted to discussing or addressing these concerns. I assume this is going to be a dupe, but at least it'll show up for others searching these keywords.

Let's say it: For a lot of people, the AwesomeBar a implemented is the "Surprise! That'sALotOf____Bar!" While this is certainly amusing, it should be possible to implement the feature in a more "sensitive" or "useful" manner. Some suggestions, from a UI perspective, are offered below.

1: Opt-in with a verb
Users are familiar with the old bar, and have come to term with it tradeoffs. (Note the number of user upset that familiar behavior -- such a 'g' for Google -- is no longer predictable.) The "/" operator is already familiar to user of type-ahead find configured to require it, and in the common case could be satisfactory a a verb to activate the "awesome" search feature. Unfortunately, it doe conflict with the path character for UNIX user browsing to local files.

2: Add a different verb
Since this is a significant new feature giving people headaches, CTRL-/ or ALT-/ (or Macintosh equivalents) could be used to open an "awesome" search pane or window. This would have added efficiency in that the window could include tab to narrow the search scope to [H]istory, [B]ookmarks, or Web [S]earch (Assuming [E]verything remains a default); if ALT were used a the modifier, a simple [ALT] [/] [H] [Release-ALT] sequence would function a a powerful verb. Contrast this to the difficulty of adding scope verb to the location bar without getting verbose or stomping on actual domain namespace.

3: Opt-In at install time
Since the new behavior is surprising, it probably make sense to prompt user a to whether they want their bookmark and history searched, with appropriate preference or flag thus set. Since user should probably be informed of the new functionality, [History (N result found)] and [Bookmarks (N result found)] could then become monolithic item in the "awesome" dropdown, requiring action to expand.

4: Opt-Out at runtime
Bookmarks probably deserve a field to prevent them from appearing in search results, or at least extended "awesome" search results; in turn, there should probably be a fast path to knock a visited domain out of the History without resorting to coarse-grained 'Clear Private Data' knobs. See below for some thought on adding this to the UI in a constructive, rather than reactionary, way.

5: Ignore common word
"Awesome" search could, via a preference, ignore match for common word like 'the' until a larger phrase is matched. This add complexity, but would reduce the number of distracting results.

6: Proactive privacy
Entering the realm of silliness, user could add hash for term or result they don't want matched, and substring and result string could be checked against those hashes. This would probably be (extraordinarily) computationally expensive, but wouldn't expose the list directly. This idea may have more utility in term of obfuscating tag (half-baked) or obfuscating domain associated with metadata, which could have it own interesting applications.

7: Reconsider Search
Some of the backlash against the "AwesomeBar" relates to the semantics of going somewhere known (conventional use of the location bar) versus searching for something unknown. It's quite possible that the "awesomeness" should live in the Web Search bar/the CTRL-K Web Search feature instead, where the existing verb is appropriate and local result would save user a trip to the search engine. The same idea about enhanced keyboard verb probably applies here, where it could be made possible to define scope while the modifier is still pressed.

8: Reconsider Bookmarks and History
Right now the bookmark feature spread across two keyboard verb (CTRL-B and CTRL-D), and the history pane lack the ability to create bookmarks. It would probably be plausible to make "Awesome" search accessible from any of these starting points, and tweak the CTRL-B bookmark pane to allow both search and addition of bookmark ("[CTRL] [B] [A] [Release-CTRL]" to add the current page?). In fact, if those feature lived a scope tab of a generalized "Awesome" subsystem, all the management features, including enabling/disabling the proposed "Appear in Awesome Results" flag, could be unified, and the need to slosh the functionality into yet another place (the location bar) would be reduced.

9: Reconsider the Location Bar
Following from the last idea, now we're back to square one: Why can't the location bar have scope? Instead of separating even "Web Search" into a separate feature, or performing "magic" with input (sometimes it's a URL, sometimes it's a local path, sometimes it's a keyword for a non-DNS namespace, sometimes it's a search term), why not scope it with either prefixed or postfixed verbs? Mozilla and Firefox have had a history of this with CTRL-Enter, etc. For mouse users, there's already a "Go" button; instead of the entirely separate 'Web Search' box, why not have a "Search" button to reveal the Awesome a well, and a "Search the Web" button? In the case of "Search the Web," if the user hasn't modified the string in the location bar it could jump directly to the search engine's home page.


Hopefully there's at least one good idea buried in the above.

Reproducible: Always
