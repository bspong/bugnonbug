Intermittent automation.py | application crashed [@ js::gc::GCRuntime::allocateArena(js::gc::Chunk*, JS::Zone*, js::gc::AllocKind, js::AutoLockGC const&)] after browser_zbug569342.js and experiment spew
12:33:17 INFO - 650 INFO TEST-START | browser/base/content/test/general/browser_wyciwyg_urlbarCopying.js
12:33:17 INFO - WARNING: content window passed to PrivateBrowsingUtils.isWindowPrivate. Use isContentWindowPrivate instead (but only for frame scripts).
12:33:17 INFO - pbu_isWindowPrivate@resource://gre/modules/PrivateBrowsingUtils.jsm:25:14
12:33:17 INFO - nsBrowserAccess.prototype.openURI@chrome://browser/content/browser.js:14851:21
12:33:17 INFO - go@http://mochi.test:8888/browser/browser/base/content/test/general/test_wyciwyg_copying.html:5:13
12:33:17 INFO - onclick@http://mochi.test:8888/browser/browser/base/content/test/general/test_wyciwyg_copying.html:1:1
12:33:17 INFO - doApply@chrome://mochikit/content/tests/SimpleTest/specialpowersAPI.js:156:10
12:33:17 INFO - wrapPrivileged/callTrap@chrome://mochikit/content/tests/SimpleTest/specialpowersAPI.js:180:31
12:33:17 INFO - synthesizeMouseAtPoint@chrome://mochikit/content/tests/SimpleTest/EventUtils.js:280:7
12:33:17 INFO - synthesizeMouse@chrome://mochikit/content/tests/SimpleTest/EventUtils.js:232:1
12:33:17 INFO - synthesizeMouseAtCenter@chrome://mochikit/content/tests/SimpleTest/EventUtils.js:340:1
12:33:17 INFO - test/</<@chrome://mochitests/content/browser/browser/base/content/test/general/browser_wyciwyg_urlbarCopying.js:12:7
12:33:17 INFO - testScope/test_executeSoon/<.run@chrome://mochikit/content/browser-test.js:907:9
12:33:18 INFO - 651 INFO TEST-OK | browser/base/content/test/general/browser_wyciwyg_urlbarCopying.js | took 566ms
12:33:18 INFO - 652 INFO TEST-START | browser/base/content/test/general/browser_zbug569342.js
12:33:19 INFO - 653 INFO TEST-OK | browser/base/content/test/general/browser_zbug569342.js | took 1317ms
12:33:22 INFO - Completed ShutdownLeaks collection in process 2098
12:33:22 INFO - ###!!! [Parent][OnMaybeDequeueOne] Error: Channel closing: too late to send/recv, message will be lost
12:33:23 INFO - JavaScript error: chrome://mochitests/content/browser/browser/base/content/test/general/browser_bug435325.js, line 60: ReferenceError: ok is not defined
12:33:23 INFO - ###!!! [Parent][OnMaybeDequeueOne] Error: Channel closing: too late to send/recv, message will be lost
12:33:23 INFO - 1425929603417 Browser.Experiments.Experiments TRACE Experiments #0::uninit: started
12:33:23 INFO - 1425929603418 Browser.Experiments.Experiments TRACE Experiments #0::uninit: finished with _loadTask
12:33:23 INFO - 1425929603419 Browser.Experiments.Experiments TRACE Experiments #0::uninit: no previous shutdown
12:33:23 INFO - 1425929603422 Browser.Experiments.Experiments TRACE Experiments #0::Unregistering instance with Addon Manager.
12:33:23 INFO - 1425929603422 Browser.Experiments.Experiments TRACE Experiments #0::Removing install listener from add-on manager.
12:33:23 INFO - 1425929603423 Browser.Experiments.Experiments TRACE Experiments #0::Removing addon listener from add-on manager.
12:33:23 INFO - 1425929603427 Browser.Experiments.Experiments TRACE Experiments #0::Finished unregistering with addon manager.
12:33:23 INFO - 1425929603427 Browser.Experiments.Experiments TRACE Experiments #0::Unregistering previous experiment add-on provider.
12:33:23 INFO - 1425929603431 Browser.Experiments.Experiments INFO Experiments #0::Completed uninitialization.
12:33:23 INFO - 1425929603432 Browser.Experiments.Experiments TRACE PreviousExperimentProvider #0::shutdown()
12:33:23 INFO - ###!!! [Parent][OnMaybeDequeueOne] Error: Channel closing: too late to send/recv, message will be lost
12:33:23 INFO - ###!!! [Parent][OnMaybeDequeueOne] Error: Channel closing: too late to send/recv, message will be lost
12:33:23 INFO - ###!!! [Parent][OnMaybeDequeueOne] Error: Channel closing: too late to send/recv, message will be lost
12:33:24 INFO - TEST-INFO | Main app process: exit 0
12:33:24 INFO - runtests.py | Application ran for: 0:06:00.397795
12:33:24 INFO - zombiecheck | Reading PID log: /tmp/tmpfqcOu_pidlog
12:33:24 INFO - ==> process 2098 launched child process 2325
12:33:24 INFO - zombiecheck | Checking for orphan process with PID: 2325
12:33:24 INFO - Stopping web server
12:33:24 INFO - Stopping web socket server
12:33:24 INFO - Stopping ssltunnel
12:33:24 INFO - WARNING | leakcheck | refcount logging is off, so leak can't be detected!
12:33:24 INFO - runtests.py | Running tests: end.
12:33:24 INFO - 654 INFO checking window state
12:33:24 INFO - 655 INFO TEST-START | Shutdown
12:33:24 INFO - 656 INFO Browser Chrome Test Summary
12:33:24 INFO - 657 INFO Passed: 6011
12:33:24 INFO - 658 INFO Failed: 0
12:33:24 INFO - 659 INFO Todo: 23
12:33:24 INFO - 660 INFO *** End BrowserChrome Test Results ***
12:33:24 INFO - testpath: browser/base/content/test/newtab
12:33:24 INFO - 661 ERROR Got second suite_start message before suite_end. Logged with data {"tests": ["browser/base/content/test/newtab/browser_newtab_background_captures.js", "browser/base/content/test/newtab/browser_newtab_block.js", "browser/base/content/test/newtab/browser_newtab_bug721442.js", "browser/base/content/test/newtab/browser_newtab_bug722273.js", "browser/base/content/test/newtab/browser_newtab_bug723102.js", "browser/base/content/test/newtab/browser_newtab_bug723121.js", "browser/base/content/test/newtab/browser_newtab_bug725996.js", "browser/base/content/test/newtab/browser_newtab_bug734043.js", "browser/base/content/test/newtab/browser_newtab_bug735987.js", "browser/base/content/test/newtab/browser_newtab_bug752841.js", "browser/base/content/test/newtab/browser_newtab_bug765628.js", "browser/base/content/test/newtab/browser_newtab_bug876313.js", "browser/base/content/test/newtab/browser_newtab_bug991111.js", "browser/base/content/test/newtab/browser_newtab_bug991210.js", "browser/base/content/test/newtab/browser_newtab_bug998387.js", "browser/base/content/test/newtab/browser_newtab_disable.js", "browser/base/content/test/newtab/browser_newtab_drag_drop.js", "browser/base/content/test/newtab/browser_newtab_drag_drop_ext.js", "browser/base/content/test/newtab/browser_newtab_drop_preview.js", "browser/base/content/test/newtab/browser_newtab_enhanced.js", "browser/base/content/test/newtab/browser_newtab_focus.js", "browser/base/content/test/newtab/browser_newtab_intro.js", "browser/base/content/test/newtab/browser_newtab_perwindow_private_browsing.js", "browser/base/content/test/newtab/browser_newtab_reflow_load.js", "browser/base/content/test/newtab/browser_newtab_reportLinkAction.js", "browser/base/content/test/newtab/browser_newtab_search.js", "browser/base/content/test/newtab/browser_newtab_sponsored_icon_click.js", "browser/base/content/test/newtab/browser_newtab_undo.js", "browser/base/content/test/newtab/browser_newtab_unpin.js", "browser/base/content/test/newtab/browser_newtab_update.js"]}
12:33:24 INFO - Setting pipeline to PAUSED ...
12:33:24 INFO - Pipeline is PREROLLING ...
12:33:24 INFO - Pipeline is PREROLLED ...
12:33:24 INFO - Setting pipeline to PLAYING ...
12:33:24 INFO - New clock: GstSystemClock
12:33:24 INFO - Got EOS from element "pipeline0".
12:33:24 INFO - Execution ended after 32799861 ns.
12:33:24 INFO - Setting pipeline to PAUSED ...
12:33:24 INFO - Setting pipeline to READY ...
12:33:24 INFO - Setting pipeline to NULL ...
12:33:24 INFO - Freeing pipeline ...
12:33:25 INFO - pk12util: PKCS12 IMPORT SUCCESSFUL
12:33:25 INFO - MochitestServer : launching [u'/builds/slave/test/build/tests/bin/xpcshell', '-g', '/builds/slave/test/build/application/firefox', '-v', '170', '-f', '/builds/slave/test/build/tests/bin/components/httpd.js', '-e', "const _PROFILE_PATH = '/tmp/tmpEedly7.mozrunner'; const _SERVER_PORT = '8888'; const _SERVER_ADDR = '127.0.0.1'; const _TEST_PREFIX = undefined; const _DISPLAY_RESULTS = false;", '-f', '/builds/slave/test/build/tests/mochitest/server.js']
12:33:25 INFO - runtests.py | Server pid: 2370
12:33:25 INFO - runtests.py | Websocket server pid: 2373
12:33:25 INFO - runtests.py | SSL tunnel pid: 2376
12:33:26 INFO - runtests.py | Running tests: start.
12:33:26 INFO - runtests.py | Application pid: 2394
12:33:26 INFO - Xlib: extension "RANDR" missing on display ":0".
12:33:28 INFO - TEST-INFO | Main app process: killed by SIGSEGV
12:33:28 INFO - 662 ERROR TEST-UNEXPECTED-FAIL | automation.py | application terminated with exit code 11
12:33:28 INFO - runtests.py | Application ran for: 0:00:01.787860
12:33:28 INFO - zombiecheck | Reading PID log: /tmp/tmpfn7bUEpidlog
12:33:28 INFO - mozcrash Downloading symbol from: https://ftp-ssl.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/mozilla-inbound-linux-pgo/1425922221/firefox-39.0a1.en-US.linux-i686.crashreporter-symbols.zip
12:33:47 INFO - mozcrash Saved minidump a /builds/slave/test/build/blobber_upload_dir/4b9a82ca-7864-63e1-0d8128e1-1df78f47.dmp
12:33:47 INFO - mozcrash Saved app info a /builds/slave/test/build/blobber_upload_dir/4b9a82ca-7864-63e1-0d8128e1-1df78f47.extra
12:33:47 WARNING - PROCESS-CRASH | automation.py | application crashed [@ js::gc::GCRuntime::allocateArena(js::gc::Chunk*, JS::Zone*, js::gc::AllocKind, js::AutoLockGC const&)]
12:33:47 INFO - Crash dump filename: /tmp/tmpEedly7.mozrunner/minidumps/4b9a82ca-7864-63e1-0d8128e1-1df78f47.dmp
12:33:47 INFO - Operating system: Linux
12:33:47 INFO - 0.0.0 Linux 3.2.0-23-generic-pae #36-Ubuntu SMP Tue Apr 10 22:19:09 UTC 2012 i686
12:33:47 INFO - CPU: x86
12:33:47 INFO - GenuineIntel family 6 model 62 stepping 4
12:33:47 INFO - 1 CPU
12:33:47 INFO - Crash reason: SIGSEGV
12:33:47 INFO - Crash address: 0x8a
12:33:47 INFO - Thread 0 (crashed)
12:33:47 INFO - 0 libxul.so!js::gc::GCRuntime::allocateArena(js::gc::Chunk*, JS::Zone*, js::gc::AllocKind, js::AutoLockGC const&) [BitArray.h:364c12f1edde : 52 + 0x5]
12:33:47 INFO - eip = 0xb3462e1f esp = 0xbff474a0 ebp = 0xbff474e8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xa4200000 edi = 0x00089000 eax = 0x00000000 ecx = 0x0000008a
12:33:47 INFO - edx = 0x00000004 efl = 0x00010286
12:33:47 INFO - Found by: given a instruction pointer in context
12:33:47 INFO - 1 libxul.so!js::gc::ArenaLists::allocateFromArena(JS::Zone*, js::gc::AllocKind, js::gc::AutoMaybeStartBackgroundAllocation&) [jsgc.cpp:364c12f1edde : 1850 + 0x23]
12:33:47 INFO - eip = 0xb34631ef esp = 0xbff474f0 ebp = 0xbff47558 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000003 edi = 0xadbaf1a0
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 2 libxul.so!void* js::gc::GCRuntime::refillFreeListFromAnyThread<(js::AllowGC)1>(js::ExclusiveContext*, js::gc::AllocKind) [jsgc.cpp:364c12f1edde : 2981 + 0x16]
12:33:47 INFO - eip = 0xb347cba4 esp = 0xbff47560 ebp = 0xbff47598 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xadbc4800 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 3 libxul.so!JSObject* js::Allocate<JSObject, (js::AllowGC)1>(js::ExclusiveContext*, js::gc::AllocKind, unsigned int, js::gc::InitialHeap, js::Class const*) [Allocator.cpp:364c12f1edde : 197 + 0xe]
12:33:47 INFO - eip = 0xb339d8b1 esp = 0xbff475a0 ebp = 0xbff47608 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0x00000000
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 4 libxul.so!JSObject::create(js::ExclusiveContext*, js::gc::AllocKind, js::gc::InitialHeap, JS::Handle<js::Shape*>, JS::Handle<js::ObjectGroup*>) [jsobjinlines.h:364c12f1edde : 265 + 0x25]
12:33:47 INFO - eip = 0xb33dc553 esp = 0xbff47610 ebp = 0xbff47658 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff476e8 edi = 0xbff476c4
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 5 libxul.so!js::NewObjectWithClassProtoCommon(js::ExclusiveContext*, js::Class const*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, js::gc::AllocKind, js::NewObjectKind) [jsobj.cpp:364c12f1edde : 1174 + 0x25]
12:33:47 INFO - eip = 0xb34699ea esp = 0xbff47660 ebp = 0xbff47758 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xb6ea5f00
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 6 libxul.so!js::NewFunctionWithProto(js::ExclusiveContext*, JS::Handle<JSObject*>, bool (*)(JSContext*, unsigned int, JS::Value*), unsigned int, JSFunction::Flags, JS::Handle<JSObject*>, JS::Handle<JSAtom*>, JS::Handle<JSObject*>, js::gc::AllocKind, js::NewObjectKind) [jsobjinlines.h:364c12f1edde : 672 + 0x27]
12:33:47 INFO - eip = 0xb347d96a esp = 0xbff47760 ebp = 0xbff477e8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xb722550c
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 7 libxul.so!js::fun_bind(JSContext*, JS::Handle<JSObject*>, JS::Handle<JS::Value>, JS::Value*, unsigned int) [jsfun.cpp:364c12f1edde : 2014 + 0xb]
12:33:47 INFO - eip = 0xb3482e27 esp = 0xbff477f0 ebp = 0xbff47948 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb722550c edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 8 libxul.so!js::fun_bind(JSContext*, unsigned int, JS::Value*) [jsfun.cpp:364c12f1edde : 1642 + 0x8]
12:33:47 INFO - eip = 0xb3483640 esp = 0xbff47950 ebp = 0xbff479d8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xbff47a08
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 9 0xaad11f88
12:33:47 INFO - eip = 0xaad11f89 esp = 0xbff479e0 ebp = 0xbff47a28 ebx = 0xabfcff60
12:33:47 INFO - esi = 0xaa1353e0 edi = 0xa4390460
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 10 0xa439045f
12:33:47 INFO - eip = 0xa4390460 esp = 0xbff47a30 ebp = 0xbff47a9c
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 11 0xac016ca3
12:33:47 INFO - eip = 0xac016ca4 esp = 0xbff47aa4 ebp = 0xbff47ac0
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 12 0xa438d067
12:33:47 INFO - eip = 0xa438d068 esp = 0xbff47ac8 ebp = 0xbff47b1c
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 13 0xaee4474a
12:33:47 INFO - eip = 0xaee4474b esp = 0xbff47b24 ebp = 0xbff47b4c
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 14 0xac016ca3
12:33:47 INFO - eip = 0xac016ca4 esp = 0xbff47b54 ebp = 0xbff47b78
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 15 0xa438decf
12:33:47 INFO - eip = 0xa438ded0 esp = 0xbff47b80 ebp = 0xbff47bcc
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 16 0xaee448c9
12:33:47 INFO - eip = 0xaee448ca esp = 0xbff47bd4 ebp = 0xbff47c08
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 17 libxul.so!EnterBaseline [BaselineJIT.cpp:364c12f1edde : 123 + 0x2c]
12:33:47 INFO - eip = 0xb340c5ed esp = 0xbff47c10 ebp = 0xbff47cd8
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 18 libxul.so!js::jit::EnterBaselineMethod(JSContext*, js::RunState&) [BaselineJIT.cpp:364c12f1edde : 154 + 0x6]
12:33:47 INFO - eip = 0xb34100d9 esp = 0xbff47ce0 ebp = 0xbff47db8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff47e88 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 19 libxul.so!js::RunScript(JSContext*, js::RunState&) [Interpreter.cpp:364c12f1edde : 438 + 0xb]
12:33:47 INFO - eip = 0xb33c4b61 esp = 0xbff47dc0 ebp = 0xbff47e18 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xbff47e88
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 20 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:364c12f1edde : 517 + 0x7]
12:33:47 INFO - eip = 0xb33c5218 esp = 0xbff47e20 ebp = 0xbff48198 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb6e888c0 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 21 libxul.so!js::InvokeConstructor(JSContext*, JS::CallArgs) [Interpreter.cpp:364c12f1edde : 581 + 0x1d]
12:33:47 INFO - eip = 0xb33c596d esp = 0xbff481a0 ebp = 0xbff481f8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0x00000001
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 22 libxul.so!js::InvokeConstructor(JSContext*, JS::Value, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:364c12f1edde : 607 + 0x18]
12:33:47 INFO - eip = 0xb33c5a95 esp = 0xbff48200 ebp = 0xbff48298 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff48260 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 23 libxul.so!js::jit::DoCallFallback [BaselineIC.cpp:364c12f1edde : 9634 + 0x33]
12:33:47 INFO - eip = 0xb342ba58 esp = 0xbff482a0 ebp = 0xbff48448 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xa438d888
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 24 0xaee4811e
12:33:47 INFO - eip = 0xaee4811f esp = 0xbff48450 ebp = 0xbff484b0 ebx = 0xbff48470
12:33:47 INFO - esi = 0xaa13483c edi = 0xa438d888
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 25 0xa438d887
12:33:47 INFO - eip = 0xa438d888 esp = 0xbff484b8 ebp = 0xbff4851c
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 26 0xaa13978f
12:33:47 INFO - eip = 0xaa139790 esp = 0xbff48524 ebp = 0xbff48538
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 27 0xa43b3e37
12:33:47 INFO - eip = 0xa43b3e38 esp = 0xbff48540 ebp = 0xbff4858c
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 28 0xaee448c9
12:33:47 INFO - eip = 0xaee448ca esp = 0xbff48594 ebp = 0xbff485c8
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 29 libxul.so!EnterBaseline [BaselineJIT.cpp:364c12f1edde : 123 + 0x2c]
12:33:47 INFO - eip = 0xb340c5ed esp = 0xbff485d0 ebp = 0xbff48698
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 30 libxul.so!js::jit::EnterBaselineMethod(JSContext*, js::RunState&) [BaselineJIT.cpp:364c12f1edde : 154 + 0x6]
12:33:47 INFO - eip = 0xb34100d9 esp = 0xbff486a0 ebp = 0xbff48778 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff48848 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 31 libxul.so!js::RunScript(JSContext*, js::RunState&) [Interpreter.cpp:364c12f1edde : 438 + 0xb]
12:33:47 INFO - eip = 0xb33c4b61 esp = 0xbff48780 ebp = 0xbff487d8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xbff48848
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 32 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:364c12f1edde : 517 + 0x7]
12:33:47 INFO - eip = 0xb33c5218 esp = 0xbff487e0 ebp = 0xbff48b58 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb6e888c0 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 33 libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:364c12f1edde : 554 + 0x1c]
12:33:47 INFO - eip = 0xb33c5d40 esp = 0xbff48b60 ebp = 0xbff48c18 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0x00000000
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 34 libxul.so!js::DirectProxyHandler::call(JSContext*, JS::Handle<JSObject*>, JS::CallArgs const&) const [DirectProxyHandler.cpp:364c12f1edde : 77 + 0xc]
12:33:47 INFO - eip = 0xb3486b7c esp = 0xbff48c20 ebp = 0xbff48c58 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 35 libxul.so!js::CrossCompartmentWrapper::call(JSContext*, JS::Handle<JSObject*>, JS::CallArgs const&) const [CrossCompartmentWrapper.cpp:364c12f1edde : 288 + 0x1c]
12:33:47 INFO - eip = 0xb348b810 esp = 0xbff48c60 ebp = 0xbff48d28 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff48dbc edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 36 libxul.so!js::Proxy::call(JSContext*, JS::Handle<JSObject*>, JS::CallArgs const&) [Proxy.cpp:364c12f1edde : 391 + 0x21]
12:33:47 INFO - eip = 0xb348c81f esp = 0xbff48d30 ebp = 0xbff48d88 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xb6ea77c4
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 37 libxul.so!js::proxy_Call(JSContext*, unsigned int, JS::Value*) [Proxy.cpp:364c12f1edde : 703 + 0xf]
12:33:47 INFO - eip = 0xb348c955 esp = 0xbff48d90 ebp = 0xbff48dc8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb348c910 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 38 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [jscntxtinlines.h:364c12f1edde : 235 + 0x12]
12:33:47 INFO - eip = 0xb33c532c esp = 0xbff48dd0 ebp = 0xbff49148 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb348c910 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 39 libxul.so!Interpret [Interpreter.cpp:364c12f1edde : 2599 + 0x27]
12:33:47 INFO - eip = 0xb33b89ae esp = 0xbff49150 ebp = 0xbff495c8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 40 libxul.so!js::RunScript(JSContext*, js::RunState&) [Interpreter.cpp:364c12f1edde : 448 + 0x8]
12:33:47 INFO - eip = 0xb33c4c57 esp = 0xbff495d0 ebp = 0xbff49628 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xbff49698
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 41 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:364c12f1edde : 517 + 0x7]
12:33:47 INFO - eip = 0xb33c5218 esp = 0xbff49630 ebp = 0xbff499a8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb6e888c0 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 42 libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:364c12f1edde : 554 + 0x1c]
12:33:47 INFO - eip = 0xb33c5d40 esp = 0xbff499b0 ebp = 0xbff49a68 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0x00000000
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 43 libxul.so!js::jit::DoCallFallback [BaselineIC.cpp:364c12f1edde : 9648 + 0x4]
12:33:47 INFO - eip = 0xb342b479 esp = 0xbff49a70 ebp = 0xbff49c18 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xa43b35a8
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 44 0xaee4811e
12:33:47 INFO - eip = 0xaee4811f esp = 0xbff49c20 ebp = 0xbff49c88 ebx = 0xbff49c48
12:33:47 INFO - esi = 0xaa13889a edi = 0xa43b35a8
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 45 0xa43b35a7
12:33:47 INFO - eip = 0xa43b35a8 esp = 0xbff49c90 ebp = 0xbff49cec
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 46 0xaee448c9
12:33:47 INFO - eip = 0xaee448ca esp = 0xbff49cf4 ebp = 0xbff49d18
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 47 libxul.so!EnterBaseline [BaselineJIT.cpp:364c12f1edde : 123 + 0x2c]
12:33:47 INFO - eip = 0xb340c5ed esp = 0xbff49d20 ebp = 0xbff49de8
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 48 libxul.so!js::jit::EnterBaselineAtBranch(JSContext*, js::InterpreterFrame*, unsigned char*) [BaselineJIT.cpp:364c12f1edde : 210 + 0x9]
12:33:47 INFO - eip = 0xb524f81b esp = 0xbff49df0 ebp = 0xbff49e98 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xabe2e1e8 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 49 libxul.so!Interpret [Interpreter.cpp:364c12f1edde : 1735 + 0x15]
12:33:47 INFO - eip = 0xb33bf915 esp = 0xbff49ea0 ebp = 0xbff4a318 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff4a030 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 50 libxul.so!js::RunScript(JSContext*, js::RunState&) [Interpreter.cpp:364c12f1edde : 448 + 0x8]
12:33:47 INFO - eip = 0xb33c4c57 esp = 0xbff4a320 ebp = 0xbff4a378 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xbff4a3e8
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 51 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:364c12f1edde : 517 + 0x7]
12:33:47 INFO - eip = 0xb33c5218 esp = 0xbff4a380 ebp = 0xbff4a6f8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb6e888c0 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 52 libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:364c12f1edde : 554 + 0x1c]
12:33:47 INFO - eip = 0xb33c5d40 esp = 0xbff4a700 ebp = 0xbff4a7b8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0x00000000
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 53 libxul.so!js::DirectProxyHandler::call(JSContext*, JS::Handle<JSObject*>, JS::CallArgs const&) const [DirectProxyHandler.cpp:364c12f1edde : 77 + 0xc]
12:33:47 INFO - eip = 0xb3486b7c esp = 0xbff4a7c0 ebp = 0xbff4a7f8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 54 libxul.so!js::CrossCompartmentWrapper::call(JSContext*, JS::Handle<JSObject*>, JS::CallArgs const&) const [CrossCompartmentWrapper.cpp:364c12f1edde : 288 + 0x1c]
12:33:47 INFO - eip = 0xb348b810 esp = 0xbff4a800 ebp = 0xbff4a8c8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff4a95c edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 55 libxul.so!js::Proxy::call(JSContext*, JS::Handle<JSObject*>, JS::CallArgs const&) [Proxy.cpp:364c12f1edde : 391 + 0x21]
12:33:47 INFO - eip = 0xb348c81f esp = 0xbff4a8d0 ebp = 0xbff4a928 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xb6ea77c4
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 56 libxul.so!js::proxy_Call(JSContext*, unsigned int, JS::Value*) [Proxy.cpp:364c12f1edde : 703 + 0xf]
12:33:47 INFO - eip = 0xb348c955 esp = 0xbff4a930 ebp = 0xbff4a968 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb348c910 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 57 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [jscntxtinlines.h:364c12f1edde : 235 + 0x12]
12:33:47 INFO - eip = 0xb33c532c esp = 0xbff4a970 ebp = 0xbff4ace8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb348c910 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 58 libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:364c12f1edde : 554 + 0x1c]
12:33:47 INFO - eip = 0xb33c5d40 esp = 0xbff4acf0 ebp = 0xbff4ada8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000001 edi = 0x00000000
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 59 libxul.so!js::jit::DoCallFallback [BaselineIC.cpp:364c12f1edde : 9648 + 0x4]
12:33:47 INFO - eip = 0xb342b479 esp = 0xbff4adb0 ebp = 0xbff4af58 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xa437a4c0
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 60 0xaee4811e
12:33:47 INFO - eip = 0xaee4811f esp = 0xbff4af60 ebp = 0xbff4afc0 ebx = 0xbff4af80
12:33:47 INFO - esi = 0xaa133ab4 edi = 0xa437a4c0
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 61 0xa437a4bf
12:33:47 INFO - eip = 0xa437a4c0 esp = 0xbff4afc8 ebp = 0xbff4b01c
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 62 0xaee448c9
12:33:47 INFO - eip = 0xaee448ca esp = 0xbff4b024 ebp = 0xbff4b058
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 63 libxul.so!EnterBaseline [BaselineJIT.cpp:364c12f1edde : 123 + 0x2c]
12:33:47 INFO - eip = 0xb340c5ed esp = 0xbff4b060 ebp = 0xbff4b128
12:33:47 INFO - Found by: previous frame's frame pointer
12:33:47 INFO - 64 libxul.so!js::jit::EnterBaselineMethod(JSContext*, js::RunState&) [BaselineJIT.cpp:364c12f1edde : 154 + 0x6]
12:33:47 INFO - eip = 0xb34100d9 esp = 0xbff4b130 ebp = 0xbff4b208 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xbff4b2d8 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 65 libxul.so!js::RunScript(JSContext*, js::RunState&) [Interpreter.cpp:364c12f1edde : 438 + 0xb]
12:33:47 INFO - eip = 0xb33c4b61 esp = 0xbff4b210 ebp = 0xbff4b268 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb7225500 edi = 0xbff4b2d8
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 66 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [Interpreter.cpp:364c12f1edde : 517 + 0x7]
12:33:47 INFO - eip = 0xb33c5218 esp = 0xbff4b270 ebp = 0xbff4b5e8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb6e888c0 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 67 libxul.so!js::CallOrConstructBoundFunction(JSContext*, unsigned int, JS::Value*) [jsfun.cpp:364c12f1edde : 1595 + 0x16]
12:33:47 INFO - eip = 0xb347041d esp = 0xbff4b5f0 ebp = 0xbff4b6b8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xffffff88 edi = 0x00000000
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 68 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [jscntxtinlines.h:364c12f1edde : 235 + 0x12]
12:33:47 INFO - eip = 0xb33c50de esp = 0xbff4b6c0 ebp = 0xbff4ba38 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb3470230 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 69 libxul.so!js::fun_call(JSContext*, unsigned int, JS::Value*) [jsfun.cpp:364c12f1edde : 1246 + 0x18]
12:33:47 INFO - eip = 0xb3460770 esp = 0xbff4ba40 ebp = 0xbff4ba78 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0x00000000 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 70 libxul.so!js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) [jscntxtinlines.h:364c12f1edde : 235 + 0x12]
12:33:47 INFO - eip = 0xb33c50de esp = 0xbff4ba80 ebp = 0xbff4bdf8 ebx = 0xb6eabc80
12:33:47 INFO - esi = 0xb34606f0 edi = 0xb7225500
12:33:47 INFO - Found by: call frame info
12:33:47 INFO - 71 libxul.so!js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) [Interpreter.cpp:364c12f1edde : 554 + 0x1c]
12:33:47 INFO - eip = 0xb33c5d40 esp = 0xbff4be00 ebp = 0xbff4beb8 ebx = 0xb6eabc80
