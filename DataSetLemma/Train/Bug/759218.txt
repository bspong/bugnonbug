Assertion: "Doing nscoord addition with value > nscoord_MAX"
I can't reproduce this reliably but I still have the Firefox process that asserted this in my debugger.

KernelBase.dll!_DebugBreak@0() + 0x2 byte
xul.dll!RealBreak() Line 416 C++
xul.dll!Break(const char * aMsg=0x00337d80) Line 515 C++
xul.dll!NS_DebugBreak_P(unsigned int aSeverity=1, const char * aStr=0x5a4a32ec, const char * aExpr=0x5a4a3328, const char * aFile=0x5a4887d8, int aLine=195) Line 374 + 0xc byte C++
xul.dll!NSCoordSaturatingAdd(int a=0, int b=1073750644) Line 195 + 0x2d byte C++
xul.dll!BasicTableLayoutStrategy::DistributeWidthToColumns(int aWidth=1073741824, int aFirstCol=0, int aColCount=3, BasicTableLayoutStrategy::BtlsWidthType aWidthType=BTLS_PREF_WIDTH, bool aSpanHasSpecifiedWidth=false) Line 738 + 0xd byte C++
> xul.dll!BasicTableLayoutStrategy::ComputeColumnIntrinsicWidths(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 345 C++
xul.dll!BasicTableLayoutStrategy::ComputeIntrinsicWidths(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 396 C++
xul.dll!BasicTableLayoutStrategy::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 44 C++
xul.dll!nsTableFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 1438 C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x18994b40, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsTableOuterFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 429 + 0x14 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x18994ae8, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb2a0, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb1e0, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb428, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb3c8, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb7c0, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb760, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb700, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bbae8, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bb9b8, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bbf10, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bbde0, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5bd8a8, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsBlockFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 712 + 0x17 byte C++
xul.dll!nsLayoutUtils::IntrinsicForContainer(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5be138, nsLayoutUtils::IntrinsicWidthType aType=MIN_WIDTH) Line 2401 + 0x14 byte C++
xul.dll!nsTableCellFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 708 + 0xf byte C++
xul.dll!GetWidthInfo(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aFrame=0x1e5be0d0, bool aIsCell=true) Line 88 + 0x14 byte C++
xul.dll!GetCellWidthInfo(nsRenderingContext * aRenderingContext=0x0fbc3918, nsTableCellFrame * aCellFrame=0x1e5be0d0) Line 213 + 0x13 byte C++
xul.dll!BasicTableLayoutStrategy::ComputeColumnIntrinsicWidths(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 284 + 0x17 byte C++
xul.dll!BasicTableLayoutStrategy::ComputeIntrinsicWidths(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 396 C++
xul.dll!BasicTableLayoutStrategy::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 44 C++
xul.dll!nsTableFrame::GetMinWidth(nsRenderingContext * aRenderingContext=0x0fbc3918) Line 1438 C++
xul.dll!nsTableFrame::TableShrinkWidthToFit(nsRenderingContext * aRenderingContext=0x0fbc3918, int aWidthInCB=56880) Line 1502 + 0x14 byte C++
xul.dll!nsTableFrame::ComputeAutoSize(nsRenderingContext * aRenderingContext=0x0fbc3918, nsSize aCBSize={...}, int aAvailableWidth=56880, nsSize aMargin={...}, nsSize aBorder={...}, nsSize aPadding={...}, bool aShrinkWrap=true) Line 1534 + 0x15 byte C++
xul.dll!nsFrame::ComputeSize(nsRenderingContext * aRenderingContext=0x0fbc3918, nsSize aCBSize={...}, int aAvailableWidth=56880, nsSize aMargin={...}, nsSize aBorder={...}, nsSize aPadding={...}, unsigned int aFlags=1) Line 3771 C++
xul.dll!nsTableFrame::ComputeSize(nsRenderingContext * aRenderingContext=0x0fbc3918, nsSize aCBSize={...}, int aAvailableWidth=56880, nsSize aMargin={...}, nsSize aBorder={...}, nsSize aPadding={...}, unsigned int aFlags=1) Line 1483 C++
xul.dll!ChildShrinkWrapWidth(nsRenderingContext * aRenderingContext=0x0fbc3918, nsIFrame * aChildFrame=0x189be730, nsSize aCBSize={...}, int aAvailableWidth=56880, int * aMarginResult=0x00000000) Line 517 C++
xul.dll!nsTableOuterFrame::ComputeAutoSize(nsRenderingContext * aRenderingContext=0x0fbc3918, nsSize aCBSize={...}, int aAvailableWidth=56880, nsSize aMargin={...}, nsSize aBorder={...}, nsSize aPadding={...}, bool aShrinkWrap=false) Line 544 + 0x20 byte C++
xul.dll!nsFrame::ComputeSize(nsRenderingContext * aRenderingContext=0x0fbc3918, nsSize aCBSize={...}, int aAvailableWidth=56880, nsSize aMargin={...}, nsSize aBorder={...}, nsSize aPadding={...}, unsigned int aFlags=0) Line 3771 C++
xul.dll!nsHTMLReflowState::InitConstraints(nsPresContext * aPresContext=0x1d6bdd38, int aContainingBlockWidth=56880, int aContainingBlockHeight=1073741824, const nsMargin * aBorder=0x00000000, const nsMargin * aPadding=0x00000000, nsIAtom * aFrameType=0x0768d838) Line 1899 C++
xul.dll!nsHTMLReflowState::Init(nsPresContext * aPresContext=0x1d6bdd38, int aContainingBlockWidth=-1, int aContainingBlockHeight=-1, const nsMargin * aBorder=0x00000000, const nsMargin * aPadding=0x00000000) Line 252 C++
xul.dll!nsHTMLReflowState::nsHTMLReflowState(nsPresContext * aPresContext=0x1d6bdd38, const nsHTMLReflowState & aParentReflowState={...}, nsIFrame * aFrame=0x189be4a8, const nsSize & aAvailableSpace={...}, int aContainingBlockWidth=-1, int aContainingBlockHeight=-1, bool aInit=true) Line 141 C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033a311) Line 3038 C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033a311) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x1e5b2298, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033aea1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033aea1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x1e5b1c38, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033ba31) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033ba31) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x1e5b1aa0, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033c5c1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033c5c1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a266568, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033d151) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033d151) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a25a440, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033dce1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033dce1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=3400380) Line 1043 + 0xf byte C++
xul.dll!nsContainerFrame::ReflowChild(nsIFrame * aKidFrame=0x0a252840, nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, int aX=0, int aY=0, unsigned int aFlags=3, unsigned int & aStatus=3400380, nsOverflowContinuationTracker * aTracker=0x00000000) Line 907 + 0x21 byte C++
xul.dll!nsHTMLScrollFrame::ReflowScrolledFrame(ScrollReflowState * aState=0x0033e448, bool aAssumeHScroll=false, bool aAssumeVScroll=true, nsHTMLReflowMetrics * aMetrics=0x0033e344, bool aFirstPass=true) Line 518 + 0x30 byte C++
xul.dll!nsHTMLScrollFrame::ReflowContents(ScrollReflowState * aState=0x0033e448, const nsHTMLReflowMetrics & aDesiredSize={...}) Line 616 + 0x3b byte C++
xul.dll!nsHTMLScrollFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 857 + 0x13 byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a25ab88, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033ec61) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033ec61) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=false, nsLineBox * aLine=0x0a2665f8, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033f7f1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x0033f7f1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a266628, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00340381) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00340381) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a266658, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00340f11) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00340f11) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a266688, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00341aa1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00341aa1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x00000000, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowFloat(nsBlockReflowState & aState={...}, const nsRect & aAdjustedAvailableSpace={...}, nsIFrame * aFloat=0x0a259568, nsMargin & aFloatMargin={...}, bool aFloatPushedDown=false, unsigned int & aReflowStatus=0) Line 5860 + 0x33 byte C++
xul.dll!nsBlockReflowState::FlowAndPlaceFloat(nsIFrame * aFloat=0x0a259568) Line 753 C++
xul.dll!nsBlockReflowState::AddFloat(nsLineLayout * aLineLayout=0x003426c4, nsIFrame * aFloat=0x0a259568, int aAvailableWidth=58920) Line 503 + 0xc byte C++
xul.dll!nsLineLayout::AddFloat(nsIFrame * aFloat=0x0a259568, int aAvailableWidth=58920) Line 196 C++
xul.dll!nsLineLayout::ReflowFrame(nsIFrame * aFrame=0x13ea0518, unsigned int & aReflowStatus=0, nsHTMLReflowMetrics * aMetrics=0x00000000, bool & aPushedFrame=false) Line 868 + 0x19 byte C++
xul.dll!nsBlockFrame::ReflowInlineFrame(nsBlockReflowState & aState={...}, nsLineLayout & aLineLayout={...}, nsLineList_iterator aLine={...}, nsIFrame * aFrame=0x13ea0518, LineReflowStatus * aLineReflowStatus=0x00342658) Line 3809 + 0x16 byte C++
xul.dll!nsBlockFrame::DoReflowInlineFrames(nsBlockReflowState & aState={...}, nsLineLayout & aLineLayout={...}, nsLineList_iterator aLine={...}, nsFlowAreaRect & aFloatAvailableSpace={...}, int & aAvailableSpaceHeight=0, nsFloatManager::SavedState * aFloatStateBeforeLine=0x003426b4, bool * aKeepReflowGoing=0x00342aa1, LineReflowStatus * aLineReflowStatus=0x00342780, bool aAllowPullUp=true) Line 3605 + 0x23 byte C++
xul.dll!nsBlockFrame::ReflowInlineFrames(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00342aa1) Line 3459 + 0x3a byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00342aa1) Line 2544 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x00000000, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowFloat(nsBlockReflowState & aState={...}, const nsRect & aAdjustedAvailableSpace={...}, nsIFrame * aFloat=0x0a263370, nsMargin & aFloatMargin={...}, bool aFloatPushedDown=false, unsigned int & aReflowStatus=0) Line 5860 + 0x33 byte C++
xul.dll!nsBlockReflowState::FlowAndPlaceFloat(nsIFrame * aFloat=0x0a263370) Line 753 C++
xul.dll!nsBlockReflowState::AddFloat(nsLineLayout * aLineLayout=0x003436c4, nsIFrame * aFloat=0x0a263370, int aAvailableWidth=71160) Line 503 + 0xc byte C++
xul.dll!nsLineLayout::AddFloat(nsIFrame * aFloat=0x0a263370, int aAvailableWidth=71160) Line 196 C++
xul.dll!nsLineLayout::ReflowFrame(nsIFrame * aFrame=0x13ed5828, unsigned int & aReflowStatus=0, nsHTMLReflowMetrics * aMetrics=0x00000000, bool & aPushedFrame=false) Line 868 + 0x19 byte C++
xul.dll!nsBlockFrame::ReflowInlineFrame(nsBlockReflowState & aState={...}, nsLineLayout & aLineLayout={...}, nsLineList_iterator aLine={...}, nsIFrame * aFrame=0x13ed5828, LineReflowStatus * aLineReflowStatus=0x00343658) Line 3809 + 0x16 byte C++
xul.dll!nsBlockFrame::DoReflowInlineFrames(nsBlockReflowState & aState={...}, nsLineLayout & aLineLayout={...}, nsLineList_iterator aLine={...}, nsFlowAreaRect & aFloatAvailableSpace={...}, int & aAvailableSpaceHeight=0, nsFloatManager::SavedState * aFloatStateBeforeLine=0x003436b4, bool * aKeepReflowGoing=0x00343aa1, LineReflowStatus * aLineReflowStatus=0x00343780, bool aAllowPullUp=true) Line 3605 + 0x23 byte C++
xul.dll!nsBlockFrame::ReflowInlineFrames(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00343aa1) Line 3459 + 0x3a byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00343aa1) Line 2544 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=false, nsLineBox * aLine=0x0fb3d090, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00344631) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00344631) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0a252658, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x003451c1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x003451c1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0fb3f970, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00345d51) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00345d51) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=false, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x0fb3f6b8, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x003468e1) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x003468e1) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsBlockReflowContext::ReflowBlock(const nsRect & aSpace={...}, bool aApplyTopMargin=true, nsCollapsingMargin & aPrevMargin={...}, int aClearance=0, bool aIsAdjacentWithTop=true, nsLineBox * aLine=0x13eba7f8, nsHTMLReflowState & aFrameRS={...}, unsigned int & aFrameReflowStatus=0, nsBlockReflowState & aState={...}) Line 262 + 0x2c byte C++
xul.dll!nsBlockFrame::ReflowBlockFrame(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00347471) Line 3180 + 0x4c byte C++
xul.dll!nsBlockFrame::ReflowLine(nsBlockReflowState & aState={...}, nsLineList_iterator aLine={...}, bool * aKeepReflowGoing=0x00347471) Line 2488 + 0x1b byte C++
xul.dll!nsBlockFrame::ReflowDirtyLines(nsBlockReflowState & aState={...}) Line 1994 + 0x1b byte C++
xul.dll!nsBlockFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aMetrics={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 1043 + 0xf byte C++
xul.dll!nsContainerFrame::ReflowChild(nsIFrame * aKidFrame=0x13eb9ea0, nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, int aX=0, int aY=0, unsigned int aFlags=0, unsigned int & aStatus=0, nsOverflowContinuationTracker * aTracker=0x00000000) Line 907 + 0x21 byte C++
xul.dll!nsCanvasFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 430 C++
xul.dll!nsContainerFrame::ReflowChild(nsIFrame * aKidFrame=0x13eb6c70, nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, int aX=0, int aY=0, unsigned int aFlags=3, unsigned int & aStatus=0, nsOverflowContinuationTracker * aTracker=0x00000000) Line 907 + 0x21 byte C++
xul.dll!nsHTMLScrollFrame::ReflowScrolledFrame(ScrollReflowState * aState=0x00347eb8, bool aAssumeHScroll=false, bool aAssumeVScroll=false, nsHTMLReflowMetrics * aMetrics=0x00347db4, bool aFirstPass=true) Line 518 + 0x30 byte C++
xul.dll!nsHTMLScrollFrame::ReflowContents(ScrollReflowState * aState=0x00347eb8, const nsHTMLReflowMetrics & aDesiredSize={...}) Line 616 + 0x3b byte C++
xul.dll!nsHTMLScrollFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 857 + 0x13 byte C++
xul.dll!nsContainerFrame::ReflowChild(nsIFrame * aKidFrame=0x13eb6d10, nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, int aX=0, int aY=0, unsigned int aFlags=0, unsigned int & aStatus=0, nsOverflowContinuationTracker * aTracker=0x00000000) Line 907 + 0x21 byte C++
xul.dll!ViewportFrame::Reflow(nsPresContext * aPresContext=0x1d6bdd38, nsHTMLReflowMetrics & aDesiredSize={...}, const nsHTMLReflowState & aReflowState={...}, unsigned int & aStatus=0) Line 201 + 0x2d byte C++
xul.dll!PresShell::DoReflow(nsIFrame * target=0x13eb6648, bool aInterruptible=false) Line 7335 C++
xul.dll!PresShell::ProcessReflowCommands(bool aInterruptible=false) Line 7476 + 0x11 byte C++
xul.dll!PresShell::FlushPendingNotifications(mozFlushType aType=Flush_Layout) Line 3807 + 0x13 byte C++
xul.dll!nsDocument::FlushPendingNotifications(mozFlushType aType=Flush_Layout) Line 6339 C++
xul.dll!nsGenericElement::GetPrimaryFrame(mozFlushType aType=Flush_Layout) Line 3924 C++
xul.dll!nsGenericElement::GetStyledFrame() Line 2010 + 0xa byte C++
xul.dll!nsGenericElement::GetScrollFrame(nsIFrame * * aStyledFrame=0x00348560) Line 2050 + 0x8 byte C++
xul.dll!nsGenericElement::GetClientAreaRect() Line 2199 + 0xc byte C++
xul.dll!nsGenericElement::GetClientWidth() Line 562 + 0xc byte C++
xul.dll!nsIDOMElement_GetClientWidth(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> obj={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 4634 + 0x8 byte C++
mozjs.dll!js::CallJSPropertyOp(JSContext * cx=0x0f7160a0, int (JSContext *, JS::Handle<JSObject *>, JS::Handle<jsid>, JS::Value *)* op=0x59627840, JS::Handle<JSObject *> receiver={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 444 + 0x13 byte C++
mozjs.dll!js::Shape::get(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> receiver={...}, JSObject * obj=0x175ee3a0, JSObject * pobj=0x175ee1a0, JS::Value * vp=0x00349024) Line 281 + 0x29 byte C++
mozjs.dll!js_NativeGetInline(JSContext * cx=0x0f7160a0, JSObject * receiver=0x175ee3a0, JSObject * obj=0x175ee3a0, JSObject * pobj=0x175ee1a0, const js::Shape * shape=0x175f9b20, unsigned int getHow=0, JS::Value * vp=0x00349024) Line 4938 + 0x36 byte C++
mozjs.dll!js_GetPropertyHelperInline(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> obj={...}, JS::Handle<JSObject *> receiver={...}, jsid id_={...}, unsigned int getHow=0, JS::Value * vp=0x00349024) Line 5087 + 0x30 byte C++
mozjs.dll!js::baseops::GetProperty(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> obj={...}, JS::Handle<JSObject *> receiver={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 5103 + 0x26 byte C++
mozjs.dll!JSObject::getGeneric(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> receiver={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 162 + 0x24 byte C++
mozjs.dll!js::Wrapper::get(JSContext * cx=0x0f7160a0, JSObject * wrapper=0x175e74f0, JSObject * receiver=0x175ee3a0, jsid id={...}, JS::Value * vp=0x00349024) Line 183 + 0x85 byte C++
mozjs.dll!js::CrossCompartmentWrapper::get(JSContext * cx=0x0f7160a0, JSObject * wrapper=0x175e74f0, JSObject * receiver=0x175ee3a0, jsid id={...}, JS::Value * vp=0x00349024) Line 528 + 0x86 byte C++
mozjs.dll!js::Proxy::get(JSContext * cx=0x0f7160a0, JSObject * proxy=0x175e74f0, JSObject * receiver=0x175e74f0, jsid id={...}, JS::Value * vp=0x00349024) Line 1090 + 0x30 byte C++
mozjs.dll!proxy_GetGeneric(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> obj={...}, JS::Handle<JSObject *> receiver={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 1303 + 0x2e byte C++
mozjs.dll!JSObject::getGeneric(JSContext * cx=0x0f7160a0, JS::Handle<JSObject *> receiver={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 159 + 0x22 byte C++
mozjs.dll!JSObject::getGeneric(JSContext * cx=0x0f7160a0, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 177 + 0x32 byte C++
mozjs.dll!js::GetPropertyGenericMaybeCallXML(JSContext * cx=0x0f7160a0, JSOp op=JSOP_GETPROP, JS::Handle<JSObject *> obj={...}, JS::Handle<jsid> id={...}, JS::Value * vp=0x00349024) Line 164 + 0x1b byte C++
mozjs.dll!js::GetPropertyOperation(JSContext * cx=0x0f7160a0, unsigned char * pc=0x13a154fa, const JS::Value & lval={...}, JS::Value * vp=0x00349024) Line 227 + 0x2f byte C++
mozjs.dll!js::Interpret(JSContext * cx=0x0f7160a0, js::StackFrame * entryFrame=0x081b0490, js::InterpMode interpMode=JSINTERP_NORMAL) Line 2407 + 0x1b byte C++
mozjs.dll!js::RunScript(JSContext * cx=0x0f7160a0, JSScript * script=0x196bf300, js::StackFrame * fp=0x081b0490) Line 266 + 0xf byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 326 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js::CallOrConstructBoundFunction(JSContext * cx=0x0f7160a0, unsigned int argc=0, JS::Value * vp=0x081b0470) Line 862 + 0x36 byte C++
mozjs.dll!js::CallJSNative(JSContext * cx=0x0f7160a0, int (JSContext *, unsigned int, JS::Value *)* native=0x5b92186b, const js::CallArgs & args={...}) Line 395 + 0x19 byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 310 + 0x1d byte C++
mozjs.dll!js::Interpret(JSContext * cx=0x0f7160a0, js::StackFrame * entryFrame=0x081b02f8, js::InterpMode interpMode=JSINTERP_NORMAL) Line 2512 + 0x2a byte C++
mozjs.dll!js::RunScript(JSContext * cx=0x0f7160a0, JSScript * script=0x196be848, js::StackFrame * fp=0x081b02f8) Line 266 + 0xf byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 326 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js_fun_call(JSContext * cx=0x0f7160a0, unsigned int argc=0, JS::Value * vp=0x081b02d0) Line 659 + 0xf byte C++
mozjs.dll!js::CallJSNative(JSContext * cx=0x0f7160a0, int (JSContext *, unsigned int, JS::Value *)* native=0x5b92bcfd, const js::CallArgs & args={...}) Line 395 + 0x19 byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 310 + 0x1d byte C++
mozjs.dll!js::Interpret(JSContext * cx=0x0f7160a0, js::StackFrame * entryFrame=0x081b01e0, js::InterpMode interpMode=JSINTERP_NORMAL) Line 2512 + 0x2a byte C++
mozjs.dll!js::RunScript(JSContext * cx=0x0f7160a0, JSScript * script=0x196bac58, js::StackFrame * fp=0x081b01e0) Line 266 + 0xf byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 326 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js_fun_call(JSContext * cx=0x0f7160a0, unsigned int argc=0, JS::Value * vp=0x081b01b8) Line 659 + 0xf byte C++
mozjs.dll!js::CallJSNative(JSContext * cx=0x0f7160a0, int (JSContext *, unsigned int, JS::Value *)* native=0x5b92bcfd, const js::CallArgs & args={...}) Line 395 + 0x19 byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 310 + 0x1d byte C++
mozjs.dll!js::Interpret(JSContext * cx=0x0f7160a0, js::StackFrame * entryFrame=0x081b0178, js::InterpMode interpMode=JSINTERP_NORMAL) Line 2512 + 0x2a byte C++
mozjs.dll!js::RunScript(JSContext * cx=0x0f7160a0, JSScript * script=0x1713d6a8, js::StackFrame * fp=0x081b0178) Line 266 + 0xf byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 326 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js::CallOrConstructBoundFunction(JSContext * cx=0x0f7160a0, unsigned int argc=0, JS::Value * vp=0x081b0140) Line 862 + 0x36 byte C++
mozjs.dll!js::CallJSNative(JSContext * cx=0x0f7160a0, int (JSContext *, unsigned int, JS::Value *)* native=0x5b92186b, const js::CallArgs & args={...}) Line 395 + 0x19 byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 310 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js_fun_apply(JSContext * cx=0x0f7160a0, unsigned int argc=2, JS::Value * vp=0x081b0120) Line 735 + 0xf byte C++
mozjs.dll!js::CallJSNative(JSContext * cx=0x0f7160a0, int (JSContext *, unsigned int, JS::Value *)* native=0x5b925dfd, const js::CallArgs & args={...}) Line 395 + 0x19 byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 310 + 0x1d byte C++
mozjs.dll!js::Interpret(JSContext * cx=0x0f7160a0, js::StackFrame * entryFrame=0x081b00d8, js::InterpMode interpMode=JSINTERP_NORMAL) Line 2512 + 0x2a byte C++
mozjs.dll!js::RunScript(JSContext * cx=0x0f7160a0, JSScript * script=0x1714d368, js::StackFrame * fp=0x081b00d8) Line 266 + 0xf byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 326 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js_fun_apply(JSContext * cx=0x0f7160a0, unsigned int argc=2, JS::Value * vp=0x081b00a8) Line 735 + 0xf byte C++
mozjs.dll!js::CallJSNative(JSContext * cx=0x0f7160a0, int (JSContext *, unsigned int, JS::Value *)* native=0x5b925dfd, const js::CallArgs & args={...}) Line 395 + 0x19 byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 310 + 0x1d byte C++
mozjs.dll!js::Interpret(JSContext * cx=0x0f7160a0, js::StackFrame * entryFrame=0x081b0060, js::InterpMode interpMode=JSINTERP_NORMAL) Line 2512 + 0x2a byte C++
mozjs.dll!js::RunScript(JSContext * cx=0x0f7160a0, JSScript * script=0x1714d230, js::StackFrame * fp=0x081b0060) Line 266 + 0xf byte C++
mozjs.dll!js::InvokeKernel(JSContext * cx=0x0f7160a0, js::CallArgs args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 326 + 0x1d byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, js::InvokeArgsGuard & args={...}, js::MaybeConstruct construct=NO_CONSTRUCT) Line 125 + 0x37 byte C++
mozjs.dll!js::Invoke(JSContext * cx=0x0f7160a0, const JS::Value & thisv={...}, const JS::Value & fval={...}, unsigned int argc=0, JS::Value * argv=0x00000000, JS::Value * rval=0x0034d010) Line 358 + 0xf byte C++
mozjs.dll!JS_CallFunctionValue(JSContext * cx=0x0f7160a0, JSObject * obj=0x17111040, JS::Value fval={...}, unsigned int argc=0, JS::Value * argv=0x00000000, JS::Value * rval=0x0034d010) Line 5496 + 0x2f byte C++
xul.dll!nsJSContext::CallEventHandler(nsISupports * aTarget=0x0f8a2b40, JSObject * aScope=0x17111040, JSObject * aHandler=0x18b7dc20, nsIArray * aargv=0x1e42ea00, nsIVariant * * arv=0x0034d108) Line 1898 + 0x2e byte C++
xul.dll!nsGlobalWindow::RunTimeout(nsTimeout * aTimeout=0x1e34d430) Line 9154 + 0x86 byte C++
xul.dll!nsGlobalWindow::TimerCallback(nsITimer * aTimer=0x1e34d4a8, void * aClosure=0x1e34d430) Line 9543 C++
xul.dll!nsTimerImpl::Fire() Line 473 + 0xe byte C++
xul.dll!nsTimerEvent::Run() Line 558 C++
xul.dll!nsThread::ProcessNextEvent(bool mayWait=false, bool * result=0x0034d36f) Line 624 + 0x19 byte C++
xul.dll!NS_ProcessNextEvent_P(nsIThread * thread=0x0244bb80, bool mayWait=false) Line 213 + 0x17 byte C++
xul.dll!mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate * aDelegate=0x02442978) Line 82 + 0xe byte C++
xul.dll!MessageLoop::RunInternal() Line 209 C++
xul.dll!MessageLoop::RunHandler() Line 202 C++
xul.dll!MessageLoop::Run() Line 176 C++
xul.dll!nsBaseAppShell::Run() Line 165 C++
xul.dll!nsAppShell::Run() Line 232 + 0x9 byte C++
xul.dll!nsAppStartup::Run() Line 256 + 0x1c byte C++
xul.dll!XREMain::XRE_mainRun() Line 3786 + 0x22 byte C++
xul.dll!XREMain::XRE_main(int argc=6, char * * argv=0x025d7700, const nsXREAppData * aAppData=0x003cc864) Line 3863 + 0x8 byte C++
xul.dll!XRE_main(int argc=6, char * * argv=0x025d7700, const nsXREAppData * aAppData=0x003cc864, unsigned int aFlags=0) Line 3939 + 0x17 byte C++
firefox.exe!do_main(int argc=6, char * * argv=0x025d7700) Line 157 + 0x15 byte C++
firefox.exe!NS_internal_main(int argc=6, char * * argv=0x025d7700) Line 296 + 0xd byte C++
firefox.exe!wmain(int argc=6, wchar_t * * argv=0x025d1b40) Line 100 + 0xd byte C++
firefox.exe!__tmainCRTStartup() Line 583 + 0x19 byte C
firefox.exe!wmainCRTStartup() Line 403 C
kernel32.dll!@BaseThreadInitThunk@12() + 0x12 byte
ntdll.dll!___RtlUserThreadStart@8() + 0x27 byte
ntdll.dll!__RtlUserThreadStart@8() + 0x1b byte
