Better word-break detection (double-clicking, Control+arrow keys, Control+Backspace/Delete)
* TITLE/SUMMARY
Heuristics used for selecting double-clicked word are a bit primitive

* STEPS TO REPRODUCE
0) Launch Apprunner
1) Execute the test case located at
http://slip/projects/marvin/selection/double-
click-text/double-click-text-d.html


* RESULT
- What happened

Sections 4 & 5 fail; the entire chunk of text is selected, rather than just the
word.

- What wa expected

I'm not sure what heuristic Visual Page or Word 98 application use to
determine
selection boundary for a double-click.

IMHO, our text editor should be on parity with other editor for intelligence of
double-clicking.


* REGRESSION

- Occurs On
Win32 Apprunner (1999101308 optimized build [NT 4, Service Pack 5])
Linux Apprunner (1999101308 optimized build)
[Can't check Mac OS Apprunner --- blocked by 14990]

- Doesn't Occur On
Visual Page 1.0 (Mac OS)
Word 98 (Mac OS)


* CONFIGURATIONS TESTED

- [Mac] Beige Power Mac G3 (266 MHz PowerPC 750), 96 MB RAM (VM on; 1 MB of VM
used), 1024x768 (Thousands of Colors), Mac OS 8.6

- [Win32] Vectra VL (233 MHz P2), 96 MB RAM, 800x600 (True Color), NT 4.0 SP5.

- [Linux] Vectra VL (266 MHz P2), 96 MB RAM. Red Hat Linux 6.0 (GNOME).



------- Additional Comments From beppe@netscape.com 1999-10-14 16:14 -------

I would suspect that this is similar to the behavior mentioned in bug 6875 &
11544. Setting to M15, this can wait until post beta, and setting status to
assigned



------- Additional Comments From Eli Goldberg 2000-01-24 09:57 -------

*** Bug 24773 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Eli Goldberg 2000-01-24 10:02 -------

Created an attachment (id=4504)
Test case referenced by URL



------- Additional Comments From Akkana 2000-01-24 12:47 -------

Good test case! I wonder, though, if it could also include the case of "foo
bar" to check for the issue in bug 11544, that selection incorrectly selects the
space after a word? Then we could combine all these bug together.



------- Additional Comments From Eli Goldberg 2000-01-28 13:18 -------

Sorry for slow response, Akkana. Umm...sure. Will do next week.



------- Additional Comments From Eli Goldberg 2000-01-31 16:37 -------

[Note to self: be sure to check Neil's additional example in bug #24773 when
verifying this bug.]



------- Additional Comments From brade@netscape.com 2000-03-06 16:12 -------

reassign to akkana in case she can get to this for M15



------- Additional Comments From Eli Goldberg 2000-03-06 17:15 -------

Ouch! Did I truly procrastinate on this for 10 full weeks? Sorry, Akkana. Test
case is now added. Please let me know if it's not what you meant.

It's now added to the URL listed above. (which I've also moved to mozilla.org)



------- Additional Comments From Sitsofe Wheeler 2000-03-07 08:19 -------

Is this related to bug 6875?



------- Additional Comments From Akkana 2000-03-13 19:33 -------

*** Bug 6875 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Akkana 2000-03-13 19:34 -------

*** Bug 26626 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Eli Goldberg 2000-03-14 08:32 -------

[Note to self: be sure to check for unchecked scenario in Bug 6875 when
verifying this bug.]



------- Additional Comments From Akkana 2000-03-14 11:32 -------

*** Bug 11544 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Akkana 2000-03-27 11:02 -------

Accepting to reduce bugzilla spam, but I don't expect I'll actually have time to
work on this in M15 in addition to my own bugs, so I'll mark it M16 so a not to
create false expectations.



------- Additional Comments From beppe@netscape.com 2000-04-12 18:31 -------

updating keyword and status whiteboard to reflect that this is a beta 2 feature
work bug that the Composer team deems a must fix for beta 2.



------- Additional Comments From Akkana 2000-04-24 16:22 -------

I'm working on this now ... but I have a question on the "foo" list
demonstrating that word should never include the following punctuation. Agreed
that Nav 4.x/win doe it this way; but other apps on Windows seem to include the
punctuation (though not a trailing space, a bone of contention between Windows
user and other platforms). On Unix, they're often configurable.

Including the punctuation make it easier to move through a document using
forward- or backward-word, and also make it easier to select thing like
variable name or urls. Omitting the punctuation make it easier to select a
single word to paste into another document.

If we do treat punctuation separately, doe that mean that each punctuation mark
should be a separate word, e.g. in the foo!!! example, starting from the
beginning and doing shift-right-arrow would take you to !, another shift-right
would take you to the second !, another to the third, and finally the fourth to
the next word?



------- Additional Comments From Simon Fraser 2000-04-24 16:40 -------

> punctuation (though not a trailing space, a bone of contention between Windows
> user and other platforms).

Mac app's won't show the trailing space selected, but those that do 'Smart copy
and paste' will add or remove space on cutting and pasting text, to preserve a
space between word at cut/paste boundaries.

> Including the punctuation make it easier to move through a document using
> forward- or backward-word, and also make it easier to select thing like
> variable name or urls. Omitting the punctuation make it easier to select a
> single word to paste into another document.

Mac double-click behaviour is to omit punctuation. However, a different
algorithm
is used to go forward/back one word, which is (for forward): jump over any
combination of spaces/puncutation followed by one or more non-puncutation, non-
space characters. So this algorithm take you to the end of each word in turn,
jumping over punctuation.

> If we do treat punctuation separately, doe that mean that each punctuation
mark
> should be a separate word, e.g. in the foo!!! example, starting from the
> beginning and doing shift-right-arrow would take you to !, another shift-right
> would take you to the second !, another to the third, and finally the fourth
to
> the next word?

For double-click, yes. Double-clicking on a punctuation character selects only
that character. Double-clicking a space in a run of space selects all those
spaces. Double-clicking a letter selects the run of letters, excluding
punctuation.



------- Additional Comments From Akkana 2000-04-24 17:13 -------

Sounds like no two platform are alike, and few apps even on the same platform
necessarily do the same thing.

My inclination right now is to add a hidden pref (initialized once, then saved),
something like selection.wordSeparatorChars.{extend,doubleclick}, to which you
could add character other than space which you wanted to have treated a word
separator in the two different cases. In case someone reading this is of the
"all prefs are evil" school, this shouldn't be any harder or le efficient than
hardwiring one platform's rules, and much easier than hardwiring several
different platform's rules.



------- Additional Comments From Matthew Thomas (mpt) 2000-04-25 04:22 -------

Akkana, you're exaggerating.

* `Few apps even on the same platform necessarily do the same thing': not true.
The only difference is between apps which do smart cut and paste, and apps
which don't. Mozilla should do smart cut and paste in Composer documents, but
not in text entry fields.

* `In case someone reading this is of the "all prefs are evil" school ...' We're
not of the `all prefs are evil' school, we're of the `unnecessary prefs should
be avoided' school. :-) The pref you propose is unnecessary. Just do the same
thing a every other application doe on the particular platform. If you don't
know what a particular platform does, start a native app on each platform and
test it.

* `This shouldn't be any harder or le efficient than hardwiring one platform's
rules, and much easier than hardwiring several different platform's rules.'
Easier for who??? Certainly not the user. Why should I have to fiddle around
to
get Mozilla to behave the same a every other app on my OS? Why should it even
be *possible* for Mozilla *not* to behave the same a every other app on my
OS?

MacOS word selection heuristic are at <http://developer.apple.com/techpubs/mac/
HIGuidelines/HIGuidelines-217.html> (about 1/3 of the way down the page).
I'd tell you where the Windows one are, but the
<http://msdn.microsoft.com/library/> applet doesn't work properly on MacOS ...



------- Additional Comments From Eli Goldberg 2000-04-25 08:24 -------

[I have no meaningful opinion to add; the expected result that I provided
mostly
came from experimenting with commonly used apps like Microsoft Word.]



------- Additional Comments From Alistair Vining 2000-04-25 09:34 -------

http://msdn.microsoft.com/isapi/msdnlib.idc?theURL=/library/books/winguide/ch06c
.htm

"Selection Shortcuts

Double-clicking with the primary mouse button is a shortcut for the default
operation of an object. In text contexts, it is commonly assigned a a shortcut
to select a word. When supporting this shortcut, select the word and the space
following the word, but not the punctuation marks."

FWIW.



------- Additional Comments From Akkana 2000-04-25 10:37 -------

To address Matthew's points:
1. Yes, I wa exagerating, but it is true that on each platform, one can find
two very commonly-used apps which use different rules.
2. The pref isn't unnecessary, unless you want me to clutter the code with
platform #ifdefs. That's just silly and there's no reason for it. If we have
to support many different standard anyway, then implementing with a pref is
easier a well a better. Close your eye and pretend I compiled in lot of
ifdefs if it make you feel better.
3. Easier on user who use only one platform: default will be set appropriately
for each platform and there's le risk of their being wrong because they can be
easily tuned for each platform.
Easier on user who use multiple platforms: they have the option of having it
work the way they like everywhere they use mozilla.
Easier on people porting to other platforms: it's done, just tune the pref, no
need to add another #ifdef and get it approved for checkin.
Easier on someone trying to read the code: no ugly maze of ifdefs.
Basically, easier on everyone. I can't think of a counterexample.



------- Additional Comments From Matthew Thomas (mpt) 2000-04-27 04:09 -------

Ok Akkana, you win. I withdraw and apologize. :-)



------- Additional Comments From Akkana 2000-04-27 14:21 -------

No problem, and sorry for my exaggeration earlier. Let's get the default
right on all platforms, and I'm glad you're around to keep me honest. :-)



------- Additional Comments From Phil Peterson 2000-05-05 16:19 -------

[nsbeta2-]



------- Additional Comments From beppe@netscape.com 2000-05-09 11:06 -------

m17



------- Additional Comments From Akkana 2000-05-15 18:17 -------

The feature ha long been in place; what's left is just tuning of which
character end a word. Changing whiteboard accordingly.



------- Additional Comments From Akkana 2000-05-24 17:39 -------

*** Bug 40490 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Ben Bucksch 2000-05-24 18:01 -------

From the DUP bug:

Reproduce:
1. Type "bla1 bla2 bla3" in editor
2. Doubleclick on "bla2" (will select "bla2")

Actual result:
"bla2 " will be selected

Expected result:
"bla2" will be selected

Why this matters:
Apart from the fact, that the latter make more sense to me and produce better
HTML source, the former also break the HTML->TXT converter for bold, strong,
italic etc.. I see no way to fix the converter.
Try this: Mark the selected text bold and do Debug|OutputText.
You'll see "bla1 *bla2 *bla3". This is wrong. It should be "bla1 *bla2* bla3".
The latter can be recognized by the TXT->HTML converter (try it in Mailnews) and
human knowing this convention.

IMO, we can't ship with the converter producing such nonsense. We need to
fix either this bug or find a kludgy workaround in the converter.



------- Additional Comments From beppe@netscape.com 2000-07-27 06:13 -------

setting to nsbeta3+



------- Additional Comments From beppe@netscape.com 2000-07-27 16:36 -------

adding bracket to status whiteboard



------- Additional Comments From beppe@netscape.com 2000-07-31 13:59 -------

setting priority in status whiteboard



------- Additional Comments From Blake Ross 2000-08-14 16:49 -------

*SPAM*: Changing the QA contact of all open/resolved Selection bug from
elig@netscape.com to BlakeR1234@aol.com. After the many great year of service
Eli ha given to Mozilla, it's time for him to move on; he ha accepted a
position at Eazel. We'll be sad to see him go, and I'll do my best to fill his
spot...



------- Additional Comments From beppe@netscape.com 2000-08-23 10:27 -------

setting to future, this will have to wait until the next release, or if someone
will step up and help out on this one



------- Additional Comments From Matthew Thomas (mpt) 2000-10-21 05:53 -------

*** Bug 43846 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Akkana 2000-10-24 16:03 -------

Anthony is taking over selection bugs.



------- Additional Comments From Jesse Ruderman 2000-11-19 00:14 -------

*** Bug 60613 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Jesse Ruderman 2000-11-19 00:16 -------

*** Bug 56402 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Jesse Ruderman 2000-11-19 00:20 -------

about ten dups, adding mostfreq keyword.



------- Additional Comments From anthonyd@netscape.com 2000-11-29 14:44 -------

setting milestone to be mozilla 1.0



------- Additional Comments From anthonyd@netscape.com 2000-11-29 16:35 -------

marking to Future, but this need to be investigated (alnog with several other
selection behaviour bugs) it a sure bet we will not be able to satisfy everyone
on these behaviour bugs.

anthonyd



------- Additional Comments From Simon Fraser 2000-11-29 17:01 -------

I don't think this should be future. The bug here are annoying enough to
interfere with editing, a the keywords suggest.



------- Additional Comments From Akkana 2000-11-29 17:27 -------

I don't think there will be much problem satisfying people (in fact, ideally, we
should be able to store the list of char which define word and make it easily
changeable, so that people can get the behavior they're used to on any given
platform). The real difficulty with this bug is someone spending the time to
understand why it's broken now (e.g. now sometimes double-click give you
several space-separated words, which clearly wa never the intent on any
platform) and insert working code; tweaking it later to add and subtract
character will be a minor issue.



------- Additional Comments From anthonyd@netscape.com 2000-11-29 17:28 -------

per simon, marking bug a 0.9. I'll be bothering platform specific people to
get the most acceptable/correct behaviour and fix this.

anthonyd



------- Additional Comments From sairuh (se) 2000-12-05 15:32 -------

sometimes when i doubleclick in the URL textfield, the selection go from the
beginning of the field to where the cursor is --rather than the entire URL field
contents. [annoyingly inconsistent] akkana mentioned that this and bug 47469 are
prolly the cause of that.



------- Additional Comments From Jesse Ruderman 2000-12-10 13:45 -------

I think the location bar problem is bug 16203.



------- Additional Comments From anthonyd@netscape.com 2001-01-11 14:26 -------

removing nsbeta



------- Additional Comments From beppe@netscape.com 2001-01-19 11:59 -------

lowering the priority to p3



------- Additional Comments From brade@netscape.com 2001-02-12 14:41 -------

adding nsmac1 keyword



------- Additional Comments From beppe@netscape.com 2001-03-26 13:38 -------

moving to mozilla1.0



------- Additional Comments From Terri Preston 2001-04-09 13:59 -------

*** Bug 66574 ha been marked a a duplicate of this bug. ***



------- Additional Comments From R.K.Aa 2001-04-15 21:16 -------

*** Bug 76127 ha been marked a a duplicate of this bug. ***



------- Additional Comments From R.K.Aa 2001-04-15 21:24 -------

Linux: not only is punctuation and a trailing whitespace copied - two extra
linefeeds are added a well.

Test this by double-clicking a word in the middle of a sentence in an existing
bug comment. Then paste it into an external editor.

Copy from the context-menu show same behaviour.





------- Additional Comments From timeless@linuxworld:/vacation 2001-04-15 23:19
-------

The extra linebreak on linux is a separate bug.

w32nc4.76 double clicking on an exclamation mark in this!!! result in the
three !'s being selected.



------- Additional Comments From mjudge@netscape.com 2001-06-28 14:39 -------

*** Bug 88228 ha been marked a a duplicate of this bug. ***



------- Additional Comments From beppe@netscape.com 2001-07-03 16:33 -------

*** Bug 89120 ha been marked a a duplicate of this bug. ***



------- Additional Comments From beppe@netscape.com 2001-07-03 16:34 -------

*** Bug 89124 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Jesse Ruderman 2001-07-04 03:28 -------

*** Bug 47469 ha been marked a a duplicate of this bug. ***



------- Additional Comments From earthsound 2001-07-09 14:46 -------

Specs: Win 98 build 2001062815

Observation #1: double clicking the first half of the first letter in the second
word of any combination of two word will result in both the word clicked & word
preceding it to be highlighted.

#2: In the following example, three(!) word are highlighted when the first a in
appear is double clicked:
these...three appear

Reproducibility: Everytime

Results expected: In Win98, this behavior is NOT exhibited in: notepad (the
preceding word & space is highlighted), wordpad (the double clicked word is
highlighted), MS Access 2000 v9.0.4402 SR-1 (same a notepad), IE 5.50.4522.1800
(same a wordpad), Netscape 4.76 (same a wordpad), MS Word 2000 v9.0.4402 SR-1
(same a wordpad), Netscape 3.04 (same a wordpad), AbiWord Personal 0.7.14
(same a wordpad), Dreamweaver 3.0 (same a wordpad)



------- Additional Comments From anthonyd@netscape.com 2001-07-31 15:22 -------

kevin and sol,
this bug ha been around a long time, and the general problem is expected
behaviour. any input would be helpful.

think about the following example for both double click and triple click:
single word
number
table cell
mixed content in table cell
<p> tag
<body> tag
list item (both ordered and unordered)
special character in content
punctuation
etc.

all of these behave differently, and nobody seems to like our current behaviour.
any help would be appreciated guys.

anthonyd



------- Additional Comments From Akkana 2001-07-31 15:43 -------

A good start would be just to get double-click doing anything repeatable (e.g.
use space a separator, or use nsILineBreaker to decide). Right now, about half
the time when I double-click in the urlbar, it selects from the beginning of the
text field to the mouse position, which is obviously a bug and is a usability
problem. Earthsound's recent comment describes a different problem which is
probably related. (Poke around the bug duped to this bug to see other example
of bad unpredictable behavior on double-click, probably all related.)

Completely aside from what the subtle rule should be, fixing the current bug
and perhaps locating the code that handle doubleclick selection and isolating
it in one place (so it can be modified once we know the complete rules) would be
a big win.



------- Additional Comments From Mike Pinkerton 2001-07-31 15:51 -------

here's something that really bug me. if i have the following text:

foopy). Doopy.

In 4.x, if i double-click the word "foopy" this is what is selected (indicated
by
|'s)

|foopy|). Doopy.

In ns6, I get:

|foopy). |Doopy.

which is just plain wrong. No other app doe anything like this. It also force
me to re-type a lot of punctuation when i'm substituting words.



------- Additional Comments From earthsound 2001-08-01 11:25 -------

Fwiw, notepad on Win98 behaves like Mozilla (i.e. highlighting {foopy). } in
Mike's foopy example. (Not that Notepad is something Mozilla should emulate:)

Suggestion: treat punctuation and alphanumericals separately, i.e. if
double-clicking (dc) or Shift+Ctrl+arrowing word to highlight, group
accordingly:

foo.com!). "Forget about it".
- doubleclicking foo should highlight foo only
- Shift+Ctrl+arrowing from the beginning should highlight {foo}, then the {.},
then {com}, then the {!). }[up to the quotation mark], then the {"}, then
Forget, etc.
- doubleclicking Forget should highlight {Forget} without the quotation mark

another example:
(text/html)
- "text" should be highlighted when doubleclicked, the whole [including ( & )]
should be highlighted on the *third* click

It appears (from an end-user perspective) a though the heuristic is only
looking for the next upcoming white space when determining what get highlighted
via either doubleclicking or Shift+Ctrl+arrowing.



------- Additional Comments From Mike Pinkerton 2001-08-01 12:55 -------

ew, if that selection behavior is the win32 way, then we need some ifdef code or
a nsILookAndFeel to change that for Mac. It's very unsettling how mozilla doe
word selection differently from every other mac application.



------- Additional Comments From Mike Stockman 2001-08-01 13:28 -------

[Not sure if this should be a separate bug or part of this one, but it's fit
the Summary... please correct me if this doesn't belong here.]

Double-click-and-drag behavior is pretty broken, too.

To demonstrate, double-click a word in a paragraph and, with the mouse still
down from the double-click, drag left or right.

Expected behavior: the selection should be extended word-by-word a you drag.

Actual behavior: the selection is extended character-by-character, a if you had
just clicked-and-dragged.



------- Additional Comments From brade@netscape.com 2001-08-01 13:52 -------

the dbl-click drag behavior is bug #16203

I believe the current strategy is to have a pref with the various platform
possibility for word breaks. I'm not really sure that strategy will work,
especially if you look at what the HIG are for Macintosh:
http://developer.apple.com/techpubs/mac/HIGuidelines/HIGuidelines-217.html

You'll see that the expectation there is that (for example) comma and period
when in number are considered to be part of the "word" but they wouldn't be in
a
sentence with words. Also, I'd worry about localization and
internationalization
issues.



------- Additional Comments From Akkana 2001-08-01 14:35 -------

The window word selection is just a unsettling to Unix user a to mac users.
It's clear that we should have different behavior per platform (and perhaps per
context), and that part is easy.

The problem is that right now, the word/line/paragraph code is spread all over
the frame code and nobody understands it well enough to fix the current bug in
it or collect all the word breaking decision code into one place so that rule
like this could be applied to it. That would also help localization, since then
the nsILineBreaker interface could be used. Fix that, and I'll happily
volunteer to do the platform split (which could then be tuned by UE and platform
people).



------- Additional Comments From Matthew Thomas (mpt) 2001-08-27 07:28 -------

*** Bug 79409 ha been marked a a duplicate of this bug. ***



------- Additional Comments From Matthew Thomas (mpt) 2001-08-27 07:29 -------

*** Bug 76619 ha been marked a a duplicate of this bug. ***



------- Additional Comments From beppe@netscape.com 2001-08-29 15:48 -------

--> mjudge
