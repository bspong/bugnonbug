JS_Assert(char * s = 0x01025e30 "JSVAL_IS_FUNCTION(cx, rval)", char * file = 0x01025e10 "r:/mozilla/js/src/jsinterp.c", int ln = 4774
00 ntdll!DbgBreakPoint (FPO: [0,0,0])
01 js3250!JS_Assert(char * s = 0x01025e30 "JSVAL_IS_FUNCTION(cx, rval)", char * file = 0x01025e10 "r:/mozilla/js/src/jsinterp.c", int ln = 4774)+0x2c (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsutil.c @ 62]
02 js3250!js_Interpret(struct JSContext * cx = 0x03ffcc48, unsigned char * pc = 0x03ae5ae1 "???", long * result = 0x00129eb4)+0x12323 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 4774]
03 js3250!js_Execute(struct JSContext * cx = 0x03ffcc48, struct JSObject * chain = 0x047a0dc0, struct JSScript * script = 0x03ae5aa8, struct JSStackFrame * down = 0x00000000, unsigned int flag = 0, long * result = 0x00129fc0)+0x334 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1484]
04 js3250!JS_EvaluateUCScriptForPrincipals(struct JSContext * cx = 0x03ffcc48, struct JSObject * obj = 0x047a0dc0, struct JSPrincipals * principal = 0x00d0395c, unsigned short * char = 0x04762fd8 ". ({. tabbrowser: this,. handleEvent: function handleEvent(aEvent) {. if (aEvent.ctrlKey && aEvent.keyCode == KeyEvent.DOM_VK_F4 &&. this.tabbrowser.mTabBox.handleCtrlPageUpDown). this.tabbrowser.removeCurrentTab();. }. }). ", unsigned int length = 0x121, char * filename = 0x0012a064 "chrome://global/content/bindings/tabbrowser.xml", unsigned int lineno = 0xad, long * rval = 0x00129fc0)+0x9c (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsapi.c @ 4158]
05 gklayout!nsJSContext::EvaluateStringWithValue(class nsAString_internal * aScript = 0x0012a010, void * aScopeObject = 0x047a0dc0, class nsIPrincipal * aPrincipal = 0x00000000, char * aURL = 0x0012a064 "chrome://global/content/bindings/tabbrowser.xml", unsigned int aLineNo = 0xad, char * aVersion = 0x00000000 "", void * aRetValue = 0x0012a040, int * aIsUndefined = 0x0012a0b0)+0x2ce (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\dom\src\base\nsjsenvironment.cpp @ 891]
06 gklayout!nsXBLProtoImplField::InstallMember(class nsIScriptContext * aContext = 0x03f20538, class nsIContent * aBoundElement = 0x0486a4f0, void * aScriptObject = 0x047a0dc0, void * aTargetClassObject = 0x047a0db0, class nsCString * aClassStr = 0x04761178)+0x14a (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\xbl\src\nsxblprotoimplfield.cpp @ 134]
07 gklayout!nsXBLProtoImpl::InstallImplementation(class nsXBLPrototypeBinding * aBinding = 0x04754770, class nsIContent * aBoundElement = 0x0486a4f0)+0x16c (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\xbl\src\nsxblprotoimpl.cpp @ 92]
08 gklayout!nsXBLPrototypeBinding::InstallImplementation(class nsIContent * aBoundElement = 0x0486a4f0)+0x23 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\xbl\src\nsxblprototypebinding.cpp @ 441]
09 gklayout!nsXBLBinding::InstallImplementation(void)+0x73 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\xbl\src\nsxblbinding.cpp @ 747]
0a gklayout!nsXBLService::LoadBindings(class nsIContent * aContent = 0x0486a4f0, class nsIURI * aURL = 0x016dda58, int aAugmentFlag = 0, class nsXBLBinding ** aBinding = 0x0012a2ec, int * aResolveStyle = 0x0012a2e4)+0x456 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\content\xbl\src\nsxblservice.cpp @ 640]
0b gklayout!nsElementSH::PostCreate(class nsIXPConnectWrappedNative * wrapper = 0x048e20c8, struct JSContext * cx = 0x03ffcc48, struct JSObject * obj = 0x047a0dc0)+0x365 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\dom\src\base\nsdomclassinfo.cpp @ 6892]
0c xpc3250!XPCWrappedNative::GetNewOrUsed(class XPCCallContext * ccx = 0x0012a874, class nsISupports * Object = 0x0486a50c, class XPCWrappedNativeScope * Scope = 0x0415f868, class XPCNativeInterface * Interface = 0x01c9fb18, class XPCWrappedNative ** resultWrapper = 0x0012a490)+0xc66 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcwrappednative.cpp @ 469]
0d xpc3250!XPCConvert::NativeInterface2JSObject(class XPCCallContext * ccx = 0x0012a874, class nsIXPConnectJSObjectHolder ** dest = 0x0012a524, class nsISupports * src = 0x0486a50c, struct nsID * iid = 0x0012a810, struct JSObject * scope = 0x038f9170, int allowNativeWrapper = 1, unsigned int * pErr = 0x0012a75c)+0x124 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcconvert.cpp @ 1064]
0e xpc3250!XPCConvert::NativeData2JS(class XPCCallContext * ccx = 0x0012a874, long * d = 0x0012a660, void * s = 0x0012a6d0, class nsXPTType * type = 0x0012a63f, struct nsID * iid = 0x0012a810, struct JSObject * scope = 0x038f9170, unsigned int * pErr = 0x0012a75c)+0x76a (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcconvert.cpp @ 468]
0f xpc3250!XPCWrappedNative::CallMethod(class XPCCallContext * ccx = 0x0012a874, XPCWrappedNative::CallMode mode = CALL_METHOD (0))+0x1139 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcwrappednative.cpp @ 2244]
10 xpc3250!XPC_WN_CallMethod(struct JSContext * cx = 0x03ffcc48, struct JSObject * obj = 0x038f9170, unsigned int argc = 1, long * argv = 0x03da2200, long * vp = 0x0012a99c)+0x1c6 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcwrappednativejsops.cpp @ 1471]
11 js3250!js_Invoke(struct JSContext * cx = 0x03ffcc48, unsigned int argc = 1, unsigned int flag = 0)+0xd5d (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1234]
12 js3250!js_Interpret(struct JSContext * cx = 0x03ffcc48, unsigned char * pc = 0x04315ea4 ":", long * result = 0x0012b490)+0xdee8 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 3798]
13 js3250!js_Invoke(struct JSContext * cx = 0x03ffcc48, unsigned int argc = 1, unsigned int flag = 2)+0xdcd (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1258]
14 js3250!js_InternalInvoke(struct JSContext * cx = 0x03ffcc48, struct JSObject * obj = 0x038f8de0, long fval = 59961904, unsigned int flag = 0, unsigned int argc = 1, long * argv = 0x0012b79c, long * rval = 0x0012b7a0)+0x115 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1335]
15 js3250!JS_CallFunctionValue(struct JSContext * cx = 0x03ffcc48, struct JSObject * obj = 0x038f8de0, long fval = 59961904, unsigned int argc = 1, long * argv = 0x0012b79c, long * rval = 0x0012b7a0)+0x48 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsapi.c @ 4213]
16 gklayout!nsJSContext::CallEventHandler(struct JSObject * aTarget = 0x038f8de0, struct JSObject * aHandler = 0x0392f230, unsigned int argc = 1, long * argv = 0x0012b79c, long * rval = 0x0012b7a0)+0x128 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\dom\src\base\nsjsenvironment.cpp @ 1439]
17 gklayout!nsJSEventListener::HandleEvent(class nsIDOMEvent * aEvent = 0x04707010)+0x58b (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\dom\src\events\nsjseventlistener.cpp @ 223]
18 gklayout!nsEventListenerManager::HandleEventSubType(struct nsListenerStruct * aListenerStruct = 0x03ed8b28, class nsIDOMEventListener * aListener = 0x03f3b8a0, class nsIDOMEvent * aDOMEvent = 0x04707010, class nsIDOMEventTarget * aCurrentTarget = 0x04361398, unsigned int aSubType = 2, unsigned int aPhaseFlags = 7)+0x23a (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\events\src\nseventlistenermanager.cpp @ 1670]
19 gklayout!nsEventListenerManager::HandleEvent(class nsPresContext * aPresContext = 0x04882250, class nsEvent * aEvent = 0x0012bad4, class nsIDOMEvent ** aDOMEvent = 0x0012b9e0, class nsIDOMEventTarget * aCurrentTarget = 0x04361398, unsigned int aFlags = 7, nsEventStatus * aEventStatus = 0x0012bad0)+0x398 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\content\events\src\nseventlistenermanager.cpp @ 1777]
1a gklayout!nsGlobalWindow::HandleDOMEvent(class nsPresContext * aPresContext = 0x04882250, class nsEvent * aEvent = 0x0012bad4, class nsIDOMEvent ** aDOMEvent = 0x0012b9e0, unsigned int aFlags = 7, nsEventStatus * aEventStatus = 0x0012bad0)+0x418 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\dom\src\base\nsglobalwindow.cpp @ 1626]
1b gklayout!nsGlobalWindow::HandleDOMEvent(class nsPresContext * aPresContext = 0x04882250, class nsEvent * aEvent = 0x0012bad4, class nsIDOMEvent ** aDOMEvent = 0x00000000, unsigned int aFlags = 1, nsEventStatus * aEventStatus = 0x0012bad0)+0x6a (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\dom\src\base\nsglobalwindow.cpp @ 1518]
1c gklayout!DocumentViewerImpl::PageHide(int aIsUnload = 1)+0xef (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\layout\base\nsdocumentviewer.cpp @ 1208]
1d docshell!nsDocShell::FirePageHideNotification(int aIsUnload = 1)+0x5c (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\docshell\base\nsdocshell.cpp @ 910]
1e docshell!nsDocShell::Destroy(void)+0x162 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\docshell\base\nsdocshell.cpp @ 3560]
1f appshell!nsXULWindow::Destroy(void)+0x345 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\xpfe\appshell\src\nsxulwindow.cpp @ 510]
20 appshell!nsWebShellWindow::Destroy(void)+0x147 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\xpfe\appshell\src\nswebshellwindow.cpp @ 842]
21 appshell!nsChromeTreeOwner::Destroy(void)+0x15 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\xpfe\appshell\src\nschrometreeowner.cpp @ 354]
22 gklayout!nsGlobalWindow::ReallyCloseWindow(void)+0x20c (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\dom\src\base\nsglobalwindow.cpp @ 4696]
23 gklayout!nsGlobalWindow::Close(void)+0x5ad (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\dom\src\base\nsglobalwindow.cpp @ 4641]
24 xpcom_core!XPTC_InvokeByIndex(class nsISupports * that = 0x04361360, unsigned int methodIndex = 0x51, unsigned int paramCount = 0, struct nsXPTCVariant * params = 0x0012bedc)+0x27 (CONV: cdecl) [r:\mozilla\xpcom\reflect\xptcall\src\md\win32\xptcinvoke.cpp @ 102]
25 xpc3250!XPCWrappedNative::CallMethod(class XPCCallContext * ccx = 0x0012c090, XPCWrappedNative::CallMode mode = CALL_METHOD (0))+0xdd5 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcwrappednative.cpp @ 2155]
26 xpc3250!XPC_WN_CallMethod(struct JSContext * cx = 0x01c90720, struct JSObject * obj = 0x0378e328, unsigned int argc = 0, long * argv = 0x06c75068, long * vp = 0x0012c1b8)+0x1c6 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\xpconnect\src\xpcwrappednativejsops.cpp @ 1471]
27 js3250!js_Invoke(struct JSContext * cx = 0x01c90720, unsigned int argc = 0, unsigned int flag = 0)+0xd5d (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1234]
28 js3250!js_Interpret(struct JSContext * cx = 0x01c90720, unsigned char * pc = 0x01d09dca ":", long * result = 0x0012ccac)+0xdee8 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 3798]
29 js3250!js_Invoke(struct JSContext * cx = 0x01c90720, unsigned int argc = 3, unsigned int flag = 0)+0xdcd (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1258]
2a js3250!js_Interpret(struct JSContext * cx = 0x01c90720, unsigned char * pc = 0x01a73d10 ":", long * result = 0x0012d724)+0xdee8 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 3798]
2b js3250!js_Invoke(struct JSContext * cx = 0x01c90720, unsigned int argc = 3, unsigned int flag = 0)+0xdcd (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1258]
2c js3250!js_Interpret(struct JSContext * cx = 0x01c90720, unsigned char * pc = 0x01a73d10 ":", long * result = 0x0012e19c)+0xdee8 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 3798]
2d js3250!js_Invoke(struct JSContext * cx = 0x01c90720, unsigned int argc = 2, unsigned int flag = 0)+0xdcd (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1258]
2e js3250!js_Interpret(struct JSContext * cx = 0x01c90720, unsigned char * pc = 0x03570f6b ":", long * result = 0x0012ec14)+0xdee8 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 3798]
2f js3250!js_Invoke(struct JSContext * cx = 0x01c90720, unsigned int argc = 1, unsigned int flag = 2)+0xdcd (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1258]
30 js3250!js_InternalInvoke(struct JSContext * cx = 0x01c90720, struct JSObject * obj = 0x03729ab0, long fval = 69817072, unsigned int flag = 0, unsigned int argc = 1, long * argv = 0x0012ef20, long * rval = 0x0012ef24)+0x115 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsinterp.c @ 1335]
31 js3250!JS_CallFunctionValue(struct JSContext * cx = 0x01c90720, struct JSObject * obj = 0x03729ab0, long fval = 69817072, unsigned int argc = 1, long * argv = 0x0012ef20, long * rval = 0x0012ef24)+0x48 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\js\src\jsapi.c @ 4213]
32 gklayout!nsJSContext::CallEventHandler(struct JSObject * aTarget = 0x03729ab0, struct JSObject * aHandler = 0x042952f0, unsigned int argc = 1, long * argv = 0x0012ef20, long * rval = 0x0012ef24)+0x128 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\dom\src\base\nsjsenvironment.cpp @ 1439]
33 gklayout!nsJSEventListener::HandleEvent(class nsIDOMEvent * aEvent = 0x06300c50)+0x58b (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\dom\src\events\nsjseventlistener.cpp @ 223]
34 gklayout!nsEventListenerManager::HandleEventSubType(struct nsListenerStruct * aListenerStruct = 0x03a6fcd0, class nsIDOMEventListener * aListener = 0x03a6fc28, class nsIDOMEvent * aDOMEvent = 0x06300c50, class nsIDOMEventTarget * aCurrentTarget = 0x05e551e0, unsigned int aSubType = 8, unsigned int aPhaseFlags = 7)+0x23a (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\events\src\nseventlistenermanager.cpp @ 1670]
35 gklayout!nsEventListenerManager::HandleEvent(class nsPresContext * aPresContext = 0x01cc58e8, class nsEvent * aEvent = 0x0012f3a8, class nsIDOMEvent ** aDOMEvent = 0x0012f29c, class nsIDOMEventTarget * aCurrentTarget = 0x05e551e0, unsigned int aFlags = 7, nsEventStatus * aEventStatus = 0x0012f3a4)+0x398 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\content\events\src\nseventlistenermanager.cpp @ 1777]
36 gklayout!nsXULElement::HandleDOMEvent(class nsPresContext * aPresContext = 0x01cc58e8, class nsEvent * aEvent = 0x0012f3a8, class nsIDOMEvent ** aDOMEvent = 0x0012f29c, unsigned int aFlags = 7, nsEventStatus * aEventStatus = 0x0012f3a4)+0xc3e (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\content\xul\content\src\nsxulelement.cpp @ 1885]
37 gklayout!PresShell::HandleDOMEventWithTarget(class nsIContent * aTargetContent = 0x0375cb00, class nsEvent * aEvent = 0x0012f3a8, nsEventStatus * aStatus = 0x0012f3a4)+0x59 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\layout\base\nspresshell.cpp @ 6136]
38 gklayout!nsMenuFrame::Execute(class nsGUIEvent * aEvent = 0x0012f7c0)+0x29e (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\layout\xul\base\src\nsmenuframe.cpp @ 1721]
39 gklayout!nsMenuFrame::HandleEvent(class nsPresContext * aPresContext = 0x01cc58e8, class nsGUIEvent * aEvent = 0x0012f7c0, nsEventStatus * aEventStatus = 0x0012f5a0)+0x258 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\layout\xul\base\src\nsmenuframe.cpp @ 521]
3a gklayout!PresShell::HandleEventInternal(class nsEvent * aEvent = 0x0012f7c0, class nsIView * aView = 0x061c0560, unsigned int aFlags = 1, nsEventStatus * aStatus = 0x0012f5a0)+0x2d2 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\layout\base\nspresshell.cpp @ 6080]
3b gklayout!PresShell::HandlePositionedEvent(class nsIView * aView = 0x061c0560, class nsIFrame * aTargetFrame = 0x06c4ad28, class nsGUIEvent * aEvent = 0x0012f7c0, nsEventStatus * aEventStatus = 0x0012f5a0)+0x162 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\layout\base\nspresshell.cpp @ 5936]
3c gklayout!PresShell::HandleEvent(class nsIView * aView = 0x061c0560, class nsGUIEvent * aEvent = 0x0012f7c0, nsEventStatus * aEventStatus = 0x0012f5a0)+0x27a (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\layout\base\nspresshell.cpp @ 5747]
3d gklayout!nsViewManager::HandleEvent(class nsView * aView = 0x061c0560, struct nsPoint aPoint = struct nsPoint, class nsGUIEvent * aEvent = 0x0012f7c0, int aCaptured = 0)+0x57 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\view\src\nsviewmanager.cpp @ 1675]
3e gklayout!nsViewManager::DispatchEvent(class nsGUIEvent * aEvent = 0x0012f7c0, nsEventStatus * aStatus = 0x0012f6c0)+0xc2b (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\view\src\nsviewmanager.cpp @ 1628]
3f gklayout!HandleEvent(class nsGUIEvent * aEvent = 0x0012f7c0)+0x44 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\view\src\nsview.cpp @ 175]
40 gkwidget!nsWindow::DispatchEvent(class nsGUIEvent * event = 0x0012f7c0, nsEventStatus * aStatus = 0x0012f758)+0xb5 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\widget\src\windows\nswindow.cpp @ 1170]
41 gkwidget!nsWindow::DispatchWindowEvent(class nsGUIEvent * event = 0x0012f7c0)+0x24 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\widget\src\windows\nswindow.cpp @ 1191]
42 gkwidget!nsWindow::DispatchMouseEvent(unsigned int aEventType = 0x12d, unsigned int wParam = 0, long lParam = 12386338)+0x601 (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\widget\src\windows\nswindow.cpp @ 6099]
43 gkwidget!ChildWindow::DispatchMouseEvent(unsigned int aEventType = 0x12d, unsigned int wParam = 0, long lParam = 12386338)+0x8f (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\widget\src\windows\nswindow.cpp @ 6281]
44 gkwidget!nsWindow::ProcessMessage(unsigned int msg = 0x202, unsigned int wParam = 0, long lParam = 12386338, long * aRetValue = 0x0012fc84)+0xabc (FPO: [Non-Fpo]) (CONV: thiscall) [r:\mozilla\widget\src\windows\nswindow.cpp @ 4560]
45 gkwidget!nsWindow::WindowProc(struct HWND__ * hWnd = 0x00c91160, unsigned int msg = 0x202, unsigned int wParam = 0, long lParam = 12386338)+0x131 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\widget\src\windows\nswindow.cpp @ 1359]
46 USER32!InternalCallWinProc+0x28
47 USER32!UserCallWinProcCheckWow+0x150 (FPO: [Non-Fpo])
48 USER32!DispatchMessageWorker+0x306 (FPO: [Non-Fpo])
49 USER32!DispatchMessageW+0xf (FPO: [Non-Fpo])
4a gkwidget!nsAppShell::Run(void)+0x108 (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\widget\src\windows\nsappshell.cpp @ 135]
4b appcomps!nsAppStartup::Run(void)+0x1e (FPO: [Non-Fpo]) (CONV: stdcall) [r:\mozilla\xpfe\components\startup\src\nsappstartup.cpp @ 208]
4c seamonkey!main1(int argc = 3, char ** argv = 0x00348538, class nsISupports * nativeApp = 0x00cb2da8)+0xbf9 (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\xpfe\bootstrap\nsapprunner.cpp @ 1248]
4d seamonkey!main(int argc = 3, char ** argv = 0x00348538)+0x1bb (FPO: [Non-Fpo]) (CONV: cdecl) [r:\mozilla\xpfe\bootstrap\nsapprunner.cpp @ 1750]
4e seamonkey!mainCRTStartup(void)+0x12c (FPO: [Non-Fpo]) (CONV: cdecl) [f:\vs70builds\3077\vc\crtbld\crt\src\crtexe.c @ 398]
4f kernel32!BaseProcessStart+0x23 (FPO: [Non-Fpo])

core+symbol reference: mozilla-js_assert-js_Interpret-js_Execute-JS_EvaluateUCScriptForPrincipals_E94C_2006-02-23_22-16-40-828_C408.cab

$!script->atomMap.vector[3] 0x0482c720 struct JSAtom *

0:000> dt JSAtom 0x0482c720
+0x000 entry : JSHashEntry
+0x010 flag : 0xdddddddd
+0x014 number : 0xdddddddd

the function wa killed, i suppose it could be bug 325540, but i'm not sure i had rev 3.223 at the time of this crash

there's only one function in the entire script a can be seen from the stack, it's handleEvent.
