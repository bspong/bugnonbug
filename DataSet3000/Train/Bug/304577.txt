Extensions should be able to set the locale they want to use even if it is a locale that Firefox does not support
User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6

I have a chrome application that supports multiple languages and locales - most
of which use the standard character set and don't need any extra language files
to be installed. The install.js file in the xpi installs and registers the
extension's locale files and they appear in chrome.rdf.

Running the chrome application and changing general.useragent.locale has no
affect on the chrome application - which always seems to fall back on en-US. To
test this further I installed a Swedish version of Firefox and found that there
both Swedish and English worked when set via useragent.locale, but still others
were not.

I have also tried changing intl.accept_languages, adding on the locales I want
supported, but no success.

Reproducible: Always

Steps to Reproduce:
1. Create a small chrome application with one file (test.xul) say that reads a
DTD at from /locale
2. Create two directories and content.rdf files /locale/en-US and locale/sv-SE
(or some other uninstalled locale) each with a test.dtd and a placeholder entity
in them
3. reference the entity from test.xul
4. create test.xpi and install it
5. try to change useragent.locale to an uninstalled locale via about:config and
there will be no change when you run the chrome script chrome://test/content



Expected Results:  
Maybe Firefox should have an extra setting to allow extensions to change the
locale only for themselves so that they can display in one locale while the rest
of Firefox uses another locale.