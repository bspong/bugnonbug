javascript / DOM: "name" property undefined
User-Agent:       Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-us) AppleWebKit/124 (KHTML, like Gecko) Safari/125.1
Build Identifier: Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7b) Gecko/20040421

when traversing a node list, the name property seems undefined. the first alert in this code should 
show a list of names. in gecko-based browsers, it's all undefined. 

Reproducible: Always
Steps to Reproduce:
1.
2.
3.



<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>FD Output</title>
    <link type="text/css" rel="stylesheet" href="/file/workbench/workbench.css">
 <script type="text/javascript" language="javascript"> 
 	<!-- 
 	  
 	function toggleVis(self, Id) 
 	{	
 	
 	var newC;
 	var newV;
 	
 	var obj = document.getElementById(Id);
 	
 	if (obj.className == "fdvalclosed")	
		{ 	newV = "fdval";
		   	newC = "fdatt"; 
		} 
	else
		{	newV = "fdvalclosed";	
		 	newC =  "fdattclosed"; 
		} 
	
 	obj.className = newV;
	self.className = newC;	
	
 	if (window.event.shiftKey)			
 	{ 
 	 	var e1=document.getElementsByName(self.name);
  
 	 	for(var i=0;i<e1.length;i++){	e1[i].className = newC;
	}
 	 	
 	 	var e2=document.getElementsByName("val." + self.name); 
 	 	
 	 	for(var i=0;i<e2.length;i++){	e2[i].className = newV;
	}		
 	 	 		 
 	 };
 	 
 	 
	
		return;
	} 
	
	
 	function setFilter(list)
 	{
 	 /* var re = /w+,/g; 
	  var filtAtts = list.match(re);
	*/
	
		var negative = (list.indexOf("__neg")>-1);
			 
   		var needsopen = "";
   
		var c = "";
		
		var e2=document.getElements();
   
   
 	 	for(var i=0;i<e2.length;i++){ 
 	 	
 	 	c = c + e2[i].name;
 	 	
 	 	}
 	 	
 	 	 	alert(c);
 	 	 	
 	 	
 	 	var e1=document.getElementsByTagName("td");
   
   
 	 	for(var i=0;i<e1.length;i++){ 
 	 	 
 	 		if (e1[i].name)
 	 		{ 
 	 		alert("xxx" + e1[i].name);
 	 		if (e1[i].name.indexOf("val.") >=0 )
 	 		{
 	 		alert("xxx" + e1[i].name);
 	 			if (list.indexOf(e1[i].name.substr(4))>-1 ^ negative)
				{
					e1[i].className = "fdvalclosed"; 
				} else
				{
					e1[i].className = "fdval"; 
					/* open all parents as well! */
					
					var p = e1[i]; 
					while ( p=p.parentNode)
					{
						alert("pname:" + p.name);
						
 	 	alert("nobefo:"+needsopen);
						needsopen = (needsopen + ",")+p.name;
						
 	 	alert("no:"+needsopen);
						if (0 && p.className == "fdvalclosed")
						{
							p.className = "fdval"; 
							var e2 = p.parentNode.getElementsByTagName("td");
							for (var j=0;j<e2.length; j++) 
							{
								if (e2[j].className == "fdattclosed" && e2[j].name == 
e1[i].name.substr(4))
								{
									e2[j].className = "fdatt";
								}
							}
						}
					}
					
   
					
				}	
 	 		} 
 	 		 
 	 		
 	 		for(var i=0;i<e1.length;i++)
 	 		{
 	 			if (e1[i].name && ( e1[i].className == "fdattclosed" ||  e1[i].className == "fdatt" 
))
 	 			{ 
				if ((list.indexOf(e1[i].name)>-1 ^ negative) && needsopen.indexOf(e1[i].name)<0)
				{
			
					e1[i].className = "fdattclosed"; 
					
				} else
				{
					e1[i].className = "fdatt"; 
				
				}
				}
 	 		}
 	 		}
 	 		}
 	 	 	
 	} 
 	
 	
	//-->
	</script></head><body>  <h1>Structure: content_2/screen_static</h1>
<a href="/fdeval/stack(dyn_fr_7)/14">Evaluate this!</a><br><a href="/fdu/stack(dyn_fr_7)/
14">Internal Representation</a><br clear=all>

	<form method="get"> Apply filter: <select id="filterselect" onchange="setFilter(this.value);"> 
<option  value="">None</option><option  value="score">no score</option><option  
value="text,screen_static,screen_dynamic,voice,cat,__neg">generation</option><option  
value="type,__neg">only type</option> </select> </form> <table class=fdtable><tr class=fdtr><td 
class="fdatt" name="type"  onMouseDown='  toggleVis(this, "4430");   '>type</td><td class=fdval 
id=4430 name="val.type">text</td></tr><tr class=fdtr><td colspan=2  class=fdfd></td></tr><tr 
class=fdtr><td class="fdatt" name="content"  onMouseDown='  toggleVis(this, "4431");   '>content</
td><td class=fdval id=4431 name="val.content">''</td></tr><tr class=fdtr><td class="fdatt" 
name="int_content_is_empty"  onMouseDown='  toggleVis(this, "4432");   '>int_content_is_empty</
td><td class=fdval id=4432 name="val.int_content_is_empty">yes</td></tr><tr class=fdtr><td 
class="fdatt" name="screen_static"  onMouseDown='  toggleVis(this, "4433");   '>screen_static</
td><td class=fdval id=4433 name="val.screen_static"><table class=fdtable><tr class=fdtr><td 
colspan=2  class=fdfd></td></tr><tr class=fdtr><td class="fdatt" name="cat"  onMouseDown='  
toggleVis(this, "4434");   '>cat</td><td class=fdval id=4434 name="val.cat">content</td></tr><tr 
class=fdtr><td class="fdatt" name="int__rule"  onMouseDown='  toggleVis(this, "4435");   
'>int__rule</td><td class=fdval id=4435 name="val.int__rule">content_2</td></tr><tr 
class=fdtr><td class="fdatt" name="int__uni"  onMouseDown='  toggleVis(this, "4436");   '>int__uni</
td><td class=fdval id=4436 name="val.int__uni">complete</td></tr><tr class=fdtr><td 
class="fdatt" name="prefix"  onMouseDown='  toggleVis(this, "4437");   '>prefix</td><td class=fdval 
id=4437 name="val.prefix">''</td></tr><tr class=fdtr><td class="fdatt" name="realized"  
onMouseDown='  toggleVis(this, "4438");   '>realized</td><td class=fdval id=4438 
name="val.realized">1</td></tr><tr class=fdtr><td class="fdatt" name="text"  onMouseDown='  
toggleVis(this, "4439");   '>text</td><td class=fdval id=4439 name="val.text">''</td></tr></
table></td></tr></table>

<p><i>Green variables indicate structure sharing. Click on them so get to their value. Red ? indicate 
unbound variables. They can be safely ignored at the end of an FD. Within a final Result FD, they usually 
mean something went wrong, except in the realize / scoring context. Click on attributes to hide the 
values, hold the shift key while clicking to hide all values for the same attribute name.</i></p></
body></html>