[valgrind] Invalid read of size 4 @ js::ctypes::ConvertToJS(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, void*, bool, bool, JS::Value*) (typedefs.h:78)
Running chunk 15 of 40 mochitest chrome under valgrind on Fedora 20 x86_64 using

rm -f ./mochitest-chrome.log && /mozilla/builds/nightly/mozilla/firefox-debug/_virtualenv/bin/python _tests/testing/mochitest/runtests.py --autorun --close-when-done --console-level=INFO --log-file=./mochitest-chrome.log --file-level=INFO --failure-file=/mozilla/builds/nightly/mozilla/firefox-debug/_tests/testing/mochitest/makefailures.json --testing-modules-dir=/mozilla/builds/nightly/mozilla/firefox-debug/_tests/modules --extra-profile-file=dist/plugins --symbols-path=dist/crashreporter-symbols  --debugger='valgrind' --debugger-args='--tool=memcheck --trace-children=yes --vex-iropt-register-updates=allregs-at-mem-access --smc-check=all-non-file --soname-synonyms=somalloc=NONE' --timeout=86400  --total-chunks=40 --this-chunk=15 --chrome

555 INFO TEST-START | chrome://mochitests/content/chrome/dom/ipc/tests/test_process_error.xul

==25411== Invalid read of size 4
==25411==    at 0x7B7029E: js::ctypes::ConvertToJS(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, void*, bool, bool, JS::Value*) (typedefs.h:78)
==25411==    by 0x7B75AEC: js::ctypes::PointerType::ContentsGetter(JSContext*, JS::CallArgs) (CTypes.cpp:4144)
==25411==    by 0x7B75B86: js::ctypes::Property<&js::ctypes::PointerType::IsPointer, &js::ctypes::PointerType::ContentsGetter>::Fun(JSContext*, unsigned int, JS::Value*) (CallNonGenericMethod.h:100)
==25411==    by 0x7FC208F: js::CallJSNative(JSContext*, bool (*)(JSContext*, unsigned int, JS::Value*), JS::CallArgs const&) (jscntxtinlines.h:239)
==25411==    by 0x80014E0: js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) (Interpreter.cpp:474)
==25411==    by 0x800190C: js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) (Interpreter.cpp:530)
==25411==    by 0x8001BBA: js::InvokeGetterOrSetter(JSContext*, JSObject*, JS::Value, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) (Interpreter.cpp:602)
==25411==    by 0x7EDC619: bool NativeGetInline<(js::AllowGC)1>(JSContext*, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<js::Shape*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JS::Value, (js::AllowGC)1>::MutableHandleType) (Shape-inl.h:46)
==25411==    by 0x7F17DA6: bool GetPropertyHelperInline<(js::AllowGC)1>(JSContext*, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<jsid, (js::AllowGC)1>::HandleType, js::MaybeRooted<JS::Value, (js::AllowGC)1>::MutableHandleType) (jsobj.cpp:4544)
==25411==    by 0x7F17E2A: js::baseops::GetProperty(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<jsid>, JS::MutableHandle<JS::Value>) (jsobj.cpp:4554)
==25411==    by 0x7B48516: JSObject::getGeneric(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<jsid>, JS::MutableHandle<JS::Value>) (jsobj.cpp:4554)
==25411==    by 0x7F500F4: js::DirectProxyHandler::get(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<jsid>, JS::MutableHandle<JS::Value>) (jsproxy.cpp:593)
==25411==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==25411==
==25411==
==25411== Process terminating with default action of signal 11 (SIGSEGV)
==25411==  Access not within mapped region at address 0x8
==25411==    at 0x7B7029E: js::ctypes::ConvertToJS(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, void*, bool, bool, JS::Value*) (typedefs.h:78)
==25411==    by 0x7B75AEC: js::ctypes::PointerType::ContentsGetter(JSContext*, JS::CallArgs) (CTypes.cpp:4144)
==25411==    by 0x7B75B86: js::ctypes::Property<&js::ctypes::PointerType::IsPointer, &js::ctypes::PointerType::ContentsGetter>::Fun(JSContext*, unsigned int, JS::Value*) (CallNonGenericMethod.h:100)
==25411==    by 0x7FC208F: js::CallJSNative(JSContext*, bool (*)(JSContext*, unsigned int, JS::Value*), JS::CallArgs const&) (jscntxtinlines.h:239)
==25411==    by 0x80014E0: js::Invoke(JSContext*, JS::CallArgs, js::MaybeConstruct) (Interpreter.cpp:474)
==25411==    by 0x800190C: js::Invoke(JSContext*, JS::Value const&, JS::Value const&, unsigned int, JS::Value const*, JS::MutableHandle<JS::Value>) (Interpreter.cpp:530)
==25411==    by 0x8001BBA: js::InvokeGetterOrSetter(JSContext*, JSObject*, JS::Value, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) (Interpreter.cpp:602)
==25411==    by 0x7EDC619: bool NativeGetInline<(js::AllowGC)1>(JSContext*, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<js::Shape*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JS::Value, (js::AllowGC)1>::MutableHandleType) (Shape-inl.h:46)
==25411==    by 0x7F17DA6: bool GetPropertyHelperInline<(js::AllowGC)1>(JSContext*, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<JSObject*, (js::AllowGC)1>::HandleType, js::MaybeRooted<jsid, (js::AllowGC)1>::HandleType, js::MaybeRooted<JS::Value, (js::AllowGC)1>::MutableHandleType) (jsobj.cpp:4544)
==25411==    by 0x7F17E2A: js::baseops::GetProperty(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<jsid>, JS::MutableHandle<JS::Value>) (jsobj.cpp:4554)
==25411==    by 0x7B48516: JSObject::getGeneric(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<jsid>, JS::MutableHandle<JS::Value>) (jsobj.cpp:4554)
==25411==    by 0x7F500F4: js::DirectProxyHandler::get(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<jsid>, JS::MutableHandle<JS::Value>) (jsproxy.cpp:593)

This appears to be the same or similar to bug 982600 and perhaps bug 985845