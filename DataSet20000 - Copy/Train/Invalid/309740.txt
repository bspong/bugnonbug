Some windows have non-context-sensitive context menu items that aren't also in menus or toolbar buttons
User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8b4) Gecko/20050908 Firefox/1.4
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8b4) Gecko/20050908 Firefox/1.4

Functionality should not exist on a context menu without the visual cue
through a standard UI element. This is a fundamental break of UI expect-
ation for the average user. The user has no information to deduce that
a context menu exists in a certain situation.

I personally thought there was a bug in the Help Viewer especially as
the UI is very, very simple (2 buttons and a text input box). I assumed
therefore that when my help window kept permanently obscuring my browser
that there was a bug, when in fact there wasn't; it was actually the
fact that a Context Menu existed for the Help Viewer with an "always on
top" option that was *checked by default*. Where was the menu option, or
toolbar button, that allowed me to change the "always on top" option?
Where was the menu option that could suggest that the vast expanse of
open nothingness that is the Help Viewer background actually supports a
context menu? Had I seen the existence of the feature on the menu bar,
for example, I might have assumed that, for ease of use, a context menu
option could exist and so I *might* have tried a context menu click on
the page somewhere.

However, as the "always on top" feature was also UNDOCUMENTED, searching
the help didn't yield any joy either so I rightly assumed there was a
bug, and I actually filed a bug and wasted a day of development time on
a wild-goose chase with analysis tools and debuggers (see Bug #309300).

Functionality should not be put on Context Menus without being on a menu
or a physical button first. 


Reproducible: Always

Steps to Reproduce:
1. Open any of the following: Source Viewer, Extension Manager, Themes
   Manager, Help Viewer.
2. Right-click somewhere on the page background.
3. Observe the menu options and compare to the number of physical UI
   elements on the page that suggest that this menu is operating in the
   context of a wide operation.

Actual Results:  
The menu reflects vastly more options that the User is aware actually
exist through physical UI cues (e.g. menus, toolbar buttons, etc.). The
result is that the User may not, in some instances, feel that a context
menu actually *exists*, and misses functionality.


Expected Results:  
If a context menu is given to the user, EVERY feature on the menu should
be backed up by a physical menu-bar menu option or a toolbar button.