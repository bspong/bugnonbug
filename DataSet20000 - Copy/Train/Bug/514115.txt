table cell borders not rendered if the table has a cell spanning multiple columns and we dynamically change the display property
User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2
Build Identifier: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2

if you have a table with many rows and columns, and use JS to turn toggle the CSS display value of the last two <td> elements of each row between "none" and "", the borders of the elements don't re-render correctly if there are also some rows that only have one <td colspan=0> element.

Reproducible: Always

Steps to Reproduce:
1. create a table that has many rows and many colums, where one row contains a single td that has colspan=0
2. for all rows of the table, except for the one that has only one td, give the last two <td> elements in each row a class name of 'x'
3. set CSS so all td elements have borders, and we are collapsing borders
4. specify a CSS rule that "table.hide_x_cols .x {display:none;}"
5. use JS to dynamically add the class name "hide_x_cols" to the table
6. use JS to dynamically remove the class name "hide_x_cols" from the table
Actual Results:  
when the table first renders it looks fine.  when the table's class name is changed for the first time, everything looks as you would expect.  but when the dynamically added class name is then removed (so that the hidden <td> elements are re-displayed), some of the <td> elements do not render their left and right borders.  which <td> elements don't show their borders depends on the placement of the rows with the single <td colspan=0> elements.

if the user scrolls up and down on the page, or highlights the table with the mouse, the borders will sometimes show up again.

Expected Results:  
when the <td> elements reappear after having been dynamically hidden, they should render with their original borders.