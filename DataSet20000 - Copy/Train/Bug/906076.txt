Virtual tabs - lazily create linkedBrowser and other dependent elements for tabbrowser tabs to improve startup performance
This is just a suggestion/question for future development:

Nowadays, power users using 100+ tabs, sometimes 500 to 600, are becoming common.  Even without loading a pages in the tabs, it still takes long startup times and large memory footprint.

What about having "virtual" tabs?  That is, until a tab is loaded, there is simply a minimal placeholder in its place.  The actual tab object is still not built.  The sessionstore tab data is still on disk.  The tab only gets built when it is selected, where it calls the data from disk JIT.

It would seem that the cost of doing a quick read from disk every now and then would be trivial compared to the annoyance of building all 500 tabs at once.  In most cases it would not even be noticeable.  Also, it is often that, even though a user may want to keep 500 tabs available, they may only load 100 of them, or less in a given session.  So the total memory footprint (and possibility of leakage) would be less, even at the end of the session.  And of course, at the beginning of the session it would be a LOT less.

Of course, there could be a tab count threshold before this feature is implemented. (though I think that reading from disk is so trivial these days, you could just implement it all the time)

What do you think?  Has anyone thought of this already?

I would love to do this as an addon, but I cannot see a way to get around this in a non-invasive way without sessionstore, and unfortunately I am not able to extend sessionstore - at least that I am aware of.

Am I wrong about not being extend sessionstore?  If anyone can suggest a way to get around that (without bypassing Firefox sessionstore functionality) I would get on it right away.

Of course, it would be optimal if this functionality were built into Firefox.

It seems like this would have quite a large impact in user experience for power users, and even most users these days.

Am I just being naive?