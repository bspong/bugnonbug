CustomizableUI.unregisterArea should keep placements by default and offer an argument to provide the possibility not to do so
I'm currently migrating my add-on, OmniSidebar, and trying to use the CustomizableUI methods as much as it can. The add-on provides its own toolbars in the sidebar's headers, and I've run into a problem. If you for some reason disable the add-on (common case: updating), there is no easy way to remove the toolbars without doing all the heavy work to keep things consistent yourself.

The same way as there's a registerToolbarNode() method, that restores the buttons in the saved state to the toolbar when called, there should be a similar unregisterToolbarNode() method that does the opposite:

- moves all child elements back to the palette
- removes any buildAreas information relative to the toolbar and
- does NOT remove placements information

so when re-enabling the add-on we can call registerToolbarNode() on it again and restore everything to its proper saved state.

Calling unregisterArea() isn't an option because that erases the placements information (if I'm reading the code correctly, please let me know if I'm wrong).

As it is right now, if we want dynamically loaded toolbars like this, we need to do all these steps ourselves which would likely clash with the rest of the customization code if not done properly. IMO, this would be something best done in CustomizableUI itself.

Or can this be done already and I just missed it?