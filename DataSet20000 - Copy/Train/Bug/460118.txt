Cloning and removing INPUT elements in middle of page breaks checked state of subsequent INPUT elements
User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.3) Gecko/2008092414 Firefox/3.0.3
Build Identifier: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.3) Gecko/2008092414 Firefox/3.0.3

Suppose you have a page with multiple sets of radio buttons. In the middle of the page, suppose that you have a hidden set of text fields that are used for a template (i.e. something that can be cloned and replicated at will upon a user action, such as a row in a dynamic list). On the page's onload handler, a script uses cloneNode to grab the elements and then calls removeChild to remove the node that was cloned from the DOM.

Upon a normal refresh of the page (not shift-refresh), the checked state of the radio buttons that follow the cloned/removed nodes are off by the number of inputs that were a part of the node that was removed. Shift-refresh restores the state.

More information and a test case can be found at http://people.rpath.com/~scott/cabinet/cloneremovebug.html

Reproducible: Always

Steps to Reproduce:
1. Visit http://people.rpath.com/~scott/cabinet/cloneremovebug.html
2. (optional) Change the checked state of one or both sets of the radio buttons
3. Refresh the page (not shift-refresh). 
Actual Results:  
Note that the second set of radio buttons do not retain the checked state, while the first one does.

Expected Results:  
Both sets of radio buttons would retain their checked states after refresh.