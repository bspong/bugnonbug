navgraph feature request
User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.12) Gecko/20080324 Firefox/2.0.0.12
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.12) Gecko/20080324 Firefox/2.0.0.12

hi,

i've an idea, how can be the browsing experience with firefox could be improved a bit :)
simple observations in my browsing style:
 * i open lot's of search pages - and i open 3-10 results
 * when i press 'ctrl' the following formula is true:
    ( "next/prev tab" || "new tab" || "go back/fwrd" || "close this tab" )
    => in any of these cases, the browsing area is not important for me after
       i've pressed 'ctrl' => it can be used for other purposes
 * from time to time i close firefox, because i don't want to close all tabs
   ( i've tried to use the 'close all other tabs' feature, but if i miss,
     and i hit the "reload all tabs" ... i've to wait a while... ;)
    => how this could be better?
 I've concluded that the 'ctrl' button could mean something without causing any
trouble, and in any cases when the 'ctrl' is down, the browsing area is not
important anymore.

navgraph:
   The idea is to show a spring-system based simulation about the pages that are   
  open - the parental links should be the pages where they are opened from ->
  this way, every time i hit control i could get an 'overview' of my browsing,
  and closing could done by doing a recursive close on a subtree.
   Node's should labeled using the page's icon, and the title of the page,
  or the request which was entered into the titlebar (i start searches using
  'g querystring')
   Current page history functionality could be moved here to, because going back 
  on a page, is just another 'dimension', the timeline of the tab.

This could be an alternate to the 'tabs' at the top, and this way the user can have more control on his/her browsing session i think this could be very useful

Reproducible: Always

Steps to Reproduce:
1.
2.
3.



i think that i could create this feature as some kind of extension, but i'm not really familiar with the architecture of firefox - and i think that this should be built-in.