easier discovery & correction of encoding problems (info-bar, status-bar, or info-window)
We've seen several bugs filed against Seamonkeu & Firefox, that complained about
problems with the charset or encoding, question marks that appeared instead of
accented characters, strange fonts in a page caused by an foreign charset that
was inexplicately selected, missign fonts for foreign languages, etc ...

Most of these are caused by an incorrect Content-Charset header, by mixing
different encodings on a single page, by dynamic fonts (unsupported !) or by the
auto-detect algorithm that guessed incorrectly (like EUC-JP selected for
Bugzilla). But common users don't seem to understand what the problem is and how
it can be corrected [and neither do the content providers :-) ] They don't
understand how to use the view-menu, let alone the auto-detect algorithm (which
is still off by default).

To help them discover these issues, I'm proposing an easier way to present them
to the user. This could be done in an info-bar (just like the popup-bar), inside
the statusbar (like the padlock and the hostname for https-sites), or in the
info-window (less visible). These items might be displayed : 

1 - what the current active encoding is
2 - if it's different from the assigned one (if auto-detect is active, or no 
3 - if there are any problems with the current displayed content
4 - possible a way to easily switch to a different encoding (like the view-menu)

The 3th remark is not about font-problems in general (font-substitution), but
for a character that can't be represented in the current charset, and is being
displayed as a question mark or similar (black boxes on Mac OS X for example).
If the auto-detect algrotihm was active, it might have resulted into a different
encoding being selected ; or not, if the threshold wasn't reached yet. I'm not
100% if this is possible, but an info-bar might explain better to the user
what's happening, than an incorrect character of a question mark.

If it's an info-bar, we might first show it by default, but we need an easy way
to turn if off permanently.