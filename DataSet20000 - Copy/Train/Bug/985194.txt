With IDM CC extension installed, Firefox consumes excessive RAM while watching streaming video and does not release it on video completion
User Agent: Mozilla/5.0 (Windows NT 6.1; rv:27.0) Gecko/20100101 Firefox/27.0 (Beta/Release)
Build ID: 20140212131424

Steps to reproduce:

Windows 7 Sp1, 32 bit

When you are watching any online video, either through Amazon Prime using Silverlight or through Youtube using Adobe Flash, and have the video streaming for a long time, 1hr 30min or more, you will find that Firefox has taken a huge chunk of your RAM and Firefox does not release it on the completion of the video. You have to exit Firefox to recover this RAM.

This problem can be seen in real time, if you have the video playing in Firefox in the background and you are monitoring Firefox RAM consumption in the task manager, you will see the RAM consumption going up by about 2 mb per second.

You can speed up this process by using the skip back and skip forward buttons to skip the playing video stream forward or backwards. You can use your mouse to seek forward and backward on a video stream too to replicate this effect. So, for example, on Amazon Prime, while the video is streaming, you let it stream for 1 minute and then hit skip forward, then let it stream for 1 minute and hit skip forward, and so on. Once in a while after letting it stream for a minute hit skip backward. If you do this over 10-15 times and the video has been streaming for about 1 hr, you then look at the RAM Firefox is consuming, it will be around 1.2 GB i.e 1200 mb or more.

You can see this effect in real time as well, have the minimized window of task manager running while you follow the above defined procedure of streaming and skipping forward, you can see FireFox's memory consumption jumping by about 40-50 mb per skip.




Actual results:

On my system, I have only 3 GB of RAM, and when Firefox touches 1 GB of RAM, my whole system slows down and when it touches 1.5 GB and above, Firefox then crashes and you have to restart it again. Very inconvenient when you are in the middle of a movie.

When the streaming video is over, Firefox does not release the RAM back, even if you close the tab that was streaming the video. The only way to get the RAM back is to restart the browser.

This bug has nothing to do with addons and extensions, I have checked with all of them disabled.

This bug has nothing to do with the plugins Silverlight or Flash, as the RAM is being consumed by Firefox process, not the plugin container. The plugin container RAM consumption only goes up by about a 100-150 mb on average during the entire procedure described above.

This bug has nothing to do with the number of tabs open at the time, whether it is one or two or more tabs the result is the same.

I have been observing this bug in Firefox for more than a year now, I do not remember which version Firefox was on when I first noticed it.

Streaming HD content or SD content has nothing to do with this bug. It happens with both

I have not changed any advanced options in Firefox, my Firefox is running on default options.



Expected results:

What should have happened is that as soon as the streaming video was done i.e finished, Firefox should have released the extra RAM it had consumed during the streaming process, so that if the user wants to watch another streaming video back-to-back, their browser will not crash due to excessive RAM usage.

I have confirmed this proper behavior using Internet Explorer 11, when a video stream on IE is done, the browser immediately releases the RAM it had consumed during the process and during the time when the video is streaming, IE RAM consumption does go up, but not by the same amount as Firefox, so after streaming 1 hr of video on IE using skip buttons multiple times, the browser only goes as high has 500-600 mb, not more. This RAM is released as soon as the video streaming is done, even with the tab that was playing the stream still open.

Since Online streaming is such a big deal nowadays, it would be better for Firefox to handle this streaming properly otherwise it will lag the competition.