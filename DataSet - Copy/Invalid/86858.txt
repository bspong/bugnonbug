XML document contents centered after XSLT transformed
1. given this XML and XSL document
2. Load the XML document
3. Effect: contents displayed twice and centered

<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="xslt.xsl"?>
<document>
  <heading>XSL Transformations (XSLT) in Mozilla</heading>
  <author email="axel@pike.org">Axel Hecht</author>
  <paragraph>
  XSLT (XSL Transformations) is a language used to transform XML document 
into other XML documents. For reference information, see the 
W3C Recommendation 
<link 
href="http://www.w3.org/TR/xslt.html">http://www.w3.org/TR/xslt.html</link>.
(www.w3.org sends unstyled XML for /TR/xslt for Mozilla, which doesn't display
nicely. Don't bug us, bug them.) For a quick start into XSLT, see Norman 
Walsh's <link 
href="http://www.nwalsh.com/docs/tutorials/xsl/xsl/">Tutorial</link>.<br/>
See a <link href="test.xml">simple example</link>, and what it's supposed to
<link href="test.html">look like</link>.
</paragraph>
<paragraph><link href="index.html#devvers">Developers</link><br></br>
<link href="index.html#faq">FAQ</link><br/>
</paragraph>
<paragraph>The implementation of XSLT in Mozilla is done in the TransforMiiX 
module.
You can use it either as part of the lizard, or as standalone processor.
</paragraph>
<list>
  <item name="devvers" heading="Developers/Contacts">
  Main developers are <link href="mailto:kvisco@ziplink.net">Keith Visco</link> 
and
<link href="mailto:peterv@netscape.com">Peter Van der Beken</link>,
correspondence should go to 
<link href="news://news.mozilla.org/netscape.public.mozilla.layout.xslt"
>netscape.public.mozilla.layout.xslt</link>, or bugzilla.<br></br>
Don't forget to check out the <link 
href="http://lxr.mozilla.org/seamonkey/source/extensions/transformiix/docs/contr
ibutors.html">contributors.html</link>
in the TransforMiiX source.<p></p>
  </item>
<item name="faq" heading="Frequently Asked Questions">
1. When will Mozilla ship XSLT support?<break/>
Starting from May, 11, 2001, TransforMiiX is part of the default build.
If you have a source prior to that, see the <link href="oldbuild.html">old
build instructions</link>.
<break/>
2. How do I build the standalone version of TransforMiiX?<break/>
See the <link href="standalone.html">standalone</link> page.
<break/>
3. Why does Internet Explorer require a different XSLT namespace than
Mozilla?<break/>
IE requires a deprecated namespace of the XSLT working draft, please
update your MSXML, as it is fixed there.
<break/><p></p>
</item>      
<item name="" heading="Issues in TransforMiiX">
The Mozilla XSLT module can only display XML documents, so the HTML 
output method is implemented with a workaround. TransforMiiX generates a
XHTML document instead, which forces XSLT stylesheets to be more careful about
CSS styling. We currently don't load external CSS stylesheets, see
<link href="http://bugzilla.mozilla.org/show_bug.cgi?
id=53030">#53030</link>.<break/>
XSLT standalone as well as in the lizard need testing, and good 
testcases.<break/>
See the <link href="http://bugzilla.mozilla.org/buglist.cgi">Open bugs</link> 
on XSLT in Mozilla.<break/>
</item></list>
<paragraph>If you find something wrong on this page, please add it to
<link href="http://bugzilla.mozilla.org/show_bug.cgi?id=51601">51601</link>.
</paragraph> 
</document>


<?xml version="1.0"?>

<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<xsl:output method="html"/>
<xsl:template match="*"/>

<xsl:template match="document">
<HTML>
  <HEAD>
  <xsl:apply-templates match="heading"/>
  </HEAD>
  <center>
  <xsl:apply-templates match="heading"/>
  <xsl:apply-templates match="author"/>
  </center>
 </HTML>
</xsl:template>

<xsl:template match="heading">
   <H1><xsl:apply-templates/></H1>
</xsl:template>

<xsl:template match="author">
  <xsl:variable name="emailaddress">
    <xsl:value-of select="@email"/>
  </xsl:variable>
  <xsl:element name="a">
    <xsl:attribute name="href">mailto:<xsl:value-of select="$emailaddress"/>
    </xsl:attribute>
    <xsl:apply-templates/>
  </xsl:element>

</xsl:template>

<xsl:template match="paragraph">
   <p><xsl:apply-templates/></p>
</xsl:template>

<xsl:template match="link">
  <xsl:element name="a">
    <xsl:attribute name="href"><xsl:value-of select="@href"/>
    </xsl:attribute>
    <xsl:apply-templates/>
  </xsl:element>

</xsl:template>

<xsl:template match="break">
 <br></br>

</xsl:template>


<xsl:template match="list">
   <dl><xsl:apply-templates/></dl>
</xsl:template>

<xsl:template match="item">
   <dt>
  <xsl:element name="a">
    <xsl:attribute name="name"><xsl:value-of select="@name"/>
    </xsl:attribute>
  <b><xsl:value-of select="@heading"/>
  </b>
  </xsl:element>
   </dt>
   <dd>
   <xsl:apply-templates/>
   </dd>
</xsl:template>

</xsl:stylesheet>